{"config":{"lang":["es"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Programaci\u00f3 web","text":"<p>Materiales para el curso sobre Programaci\u00f3 web del M\u00e0ster en Geoinformaci\u00f3 de la UAB</p> <p>Temario:</p> <ul> <li>Introducci\u00f3n al desarrollo Web<ul> <li>Ciclo petici\u00f3n/respuesta</li> <li>Front-End y Back-End</li> <li>\u00bfQu\u00e9 hacen HTML/CSS/JS?</li> </ul> </li> <li>HTML<ul> <li>Elementos</li> <li>Anatom\u00eda de un HTML</li> <li>Mi primera p\u00e1gina</li> </ul> </li> <li>CSS<ul> <li>Use de estilos en HTML</li> <li>Tipos de selectores</li> <li>Modelo de cajas</li> <li>Dise\u00f1o</li> </ul> </li> <li>JS<ul> <li>\u00bfQu\u00e9 podemos haer con JavaScript en el navegador?</li> <li>Variables</li> <li>Funciones</li> <li>Estructuras de control</li> <li>Objetos</li> <li>API del DOM</li> <li>Programaci\u00f3n as\u00edncrona</li> <li>JavaScript en el servidor</li> </ul> </li> </ul>"},{"location":"#httpsgss-mtiggithubioweb-mgeo","title":"https://gss-mtig.github.io/web-mgeo/","text":""},{"location":"#autores","title":"Autores","text":"<ul> <li>Wladimir Szczerban (alias Bolo) @bolosig, geostarter (ICGC)</li> </ul> <p>Condiciones de reutilizaci\u00f3n de estos apuntes</p> <p>Estos materiales est\u00e1n publicados bajo licencia CreativeCommons (by-sa) 4.0 internacional</p> <p>Usted es libre de: * Compartir \u2014 copiar y redistribuir el material en cualquier medio o formato * Adaptar \u2014 remezclar, transformar y crear a partir del material para cualquier finalidad, incluso comercial.</p> <p>Bajo las condiciones siguientes:</p> <ul> <li> <p>Reconocimiento \u2014 Debe reconocer adecuadamente la autor\u00eda, proporcionar un enlace a la licencia e indicar si se han realizado cambios. Puede hacerlo de cualquier manera razonable, pero no de una manera que sugiera que tiene el apoyo del licenciador o lo recibe por el uso que hace.</p> </li> <li> <p>CompartirIgual \u2014 Si remezcla, transforma o crea a partir del material, deber\u00e1 difundir sus contribuciones bajo la misma licencia que el original.</p> </li> <li> <p>No hay restricciones adicionales \u2014 No puede aplicar t\u00e9rminos legales o medidas tecnol\u00f3gicas que legalmente restrinjan realizar aquello que la licencia permite.</p> </li> </ul> <p>Muchos de los contenidos son obtenidos y/o adaptados de los contenidos de https://developer.mozilla.org/es/docs/Learn que se distribuyen bajo licenca Mozilla Contributors is licensed under CC-BY-SA 2.5.</p>"},{"location":"css/","title":"CSS - Cascading Style Sheets - Hojas de Estilo en Cascada","text":"<p>Hojas de Estilo en Cascada (del ingl\u00e9s Cascading Style Sheets) o CSS es el lenguaje de estilos utilizado para describir la presentaci\u00f3n de documentos HTML. CSS describe como debe ser renderizado el elemento estructurado en la pantalla, en papel, en el habla o en otros medios. CSS es uno de los lenguajes base de la Open Web y posee una especificaci\u00f3n estandarizada por parte del W3C. <sup>1</sup></p> <p>CSS es el segundo lenguaje m\u00e1s b\u00e1sico y esencial para crear p\u00e1ginas web. El primero ser\u00eda HTML, con el que se define el contenido de la p\u00e1gina. El segundo CSS, con el que se define la parte de la presentaci\u00f3n, es decir, c\u00f3mo deben mostrarse los elementos de la p\u00e1gina, su posici\u00f3n, forma, espaciados, colores y en resumen, toda la parte est\u00e9tica.</p> <p>CSS est\u00e1 formado por un conjunto de reglas que te permite aplicar estilos de manera selectiva a elementos en documentos HTML. Por ejemplo, para seleccionar todos los elementos de p\u00e1rrafo en una p\u00e1gina HTML y volver el texto dentro de ellos de color rojo.</p>"},{"location":"css/#uso-de-estilos-en-html","title":"Uso de estilos en HTML","text":"<p>En HTML existen tres m\u00e9todos para agregar informaci\u00f3n de estilo a un documento.</p>"},{"location":"css/#el-atributo-style","title":"El atributo style","text":"<p>El uso del atributo style es la forma m\u00e1s f\u00e1cil y directa de aplicar declaraciones de estilo a un elemento. Este atributo puede tener como contenido, cualquier n\u00famero de declaraciones de estilo, separadas unas de otras por un punto y coma (\";\"). Como style es un atributo global, puede ser usado en cualquier elemento de HTML.</p> <p>Ejemplo</p> <pre><code>&lt;p style=\"background-color: gray;\"&gt;Este texto tiene el estilo &lt;b style=\"color: white; text-decoration: underline;\"&gt;definido&lt;/b&gt; por atributo&lt;/p&gt;\n</code></pre> <p>Este texto tiene el estilo definido por atributo</p> <p>A pesar de toda su simplicidad e inmediatez, el uso de este m\u00e9todo rompe de alguna manera uno de los principales beneficios de CSS: la posibilidad de crear declaraciones de estilo que pueden ser reutilizadas en tantos elementos como sea posible, algo que se traduce en flexibilidad y portabilidad.</p>"},{"location":"css/#el-elemento-style","title":"El elemento style","text":"<p>El elemento <code>&lt;style&gt;</code> es un contenedor para declaraciones de estilo. Dentro de este elemento podemos arrojar cualquier n\u00famero de declaraciones de reglas de estilo. Este elemento s\u00f3lo puede ser declarado en la secci\u00f3n del encabezado (<code>&lt;head&gt;</code>) del documento.</p> <p>Ejemplo</p> <pre><code>&lt;head&gt;\n  &lt;title&gt;Hombre de negro&lt;/title&gt;\n  &lt;style&gt;\n    h1 {\n      background-color: gray;\n      margin: 0;\n    }\n\n    p {\n      background-color: black;\n      color: white;\n      margin: 0;\n    }\n  &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n  &lt;h1&gt;Mi color favorito&lt;/h1&gt;\n  &lt;p&gt;\u00bfTe atrever\u00edas a adivinar cu\u00e1l es mi color favorito?&lt;/p&gt;\n&lt;/body&gt;\n</code></pre> <p>Ahora, con este m\u00e9todo podemos compartir declaraciones entre los muchos elementos presentes en una misma p\u00e1gina. Pero, \u00bfes posible compartir declaraciones de estilo entre muchos documentos?</p>"},{"location":"css/#archivos-externos","title":"Archivos externos","text":"<p>La ventaja de utilizar un archivo externo para almacenar informaci\u00f3n de estilo reside en la posibilidad de compartir ese archivo entre un gran n\u00famero de documentos. Cuando un documento es cargado, el navegador detecta la referencia al archivo de hojas de estilo, cargando y aplicando los estilos como si fueran parte del documento.</p> <p>Un archivo externo de hojas de estilo puede ser insertando en el documento con el elemento <code>&lt;link&gt;</code>, teniendo el valor \"text/css\" en el atributo type, y el URI del archivo de hojas de estilo en el atributo href. Ten presente que, como style, este elemento solo puede estar ubicado en el bloque de encabezado (<code>&lt;head&gt;</code>) del documento.</p> <p>Ejemplo</p> <pre><code>&lt;head&gt;\n  &lt;title&gt;Hombre de negro&lt;/title&gt;\n  &lt;link type=\"text/css\" href=\"estilos.css\"&gt;\n&lt;/head&gt;\n&lt;body&gt;\n  &lt;h1&gt;Mi color favorito&lt;/h1&gt;\n  &lt;p&gt;\u00bfTe atrever\u00edas a adivinar cu\u00e1l es mi color favorito?&lt;/p&gt;\n&lt;/body&gt;\n</code></pre> <ol> <li> <p>Crear una carpeta llamada css dentro de la carpeta web-mgeo</p> </li> <li> <p>Crear un archivo llamado estilos.css dentro de la carpeta css</p> </li> <li> <p>Modificar el index.html para agregar una hoja de estilo externa a nuestra calculadora</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"es\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"author\" content=\"[VUESTRO NOMBRE]\"&gt;\n    &lt;meta name=\"description\" content=\"Calculadora geod\u00e9sica que permite hacer la transformaci\u00f3n de coordenadas geogr\u00e1ficas en linea\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;link href=\"https://www.icgc.cat/bundles/microblauicgc/img/favicon.ico\" rel=\"shortcut icon\" type=\"image/x-icon\"&gt;\n    &lt;link type=\"text/css\" href=\"css/estilos.css\" rel=\"stylesheet\"&gt;\n    &lt;title&gt;Mi calculadora geod\u00e9sica&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;header&gt;\n        &lt;img src=\"https://www.uab.cat/Imatge/635/883/logop.gif\" alt=\"UAB\"&gt;\n        &lt;h1&gt;Mi calculadora geod\u00e9sica&lt;/h1&gt;\n    &lt;/header&gt;\n    &lt;main&gt;\n        &lt;div&gt;\n            &lt;table&gt;\n                &lt;tr&gt;\n                    &lt;th colspan=\"2\"&gt;&lt;label for=\"origen\"&gt;Sistema de referencia de origen&lt;/label&gt;&lt;/th&gt;\n                    &lt;th colspan=\"2\"&gt;&lt;label for=\"destino\"&gt;Sistema de referencia de destino&lt;/label&gt;&lt;/th&gt;\n                &lt;/tr&gt;\n                &lt;tr&gt;\n                    &lt;td colspan=\"2\"&gt;\n                        &lt;select id=\"origen\"&gt;\n                            &lt;option value=\"EPSG:4326\"&gt;EPSG:4326&lt;/option&gt; \n                            &lt;option value=\"EPSG:3857\"&gt;EPSG:3857&lt;/option&gt;\n                            &lt;option value=\"EPSG:25831\"&gt;EPSG:25831&lt;/option&gt;\n                            &lt;option value=\"EPSG:23031\"&gt;EPSG:23031&lt;/option&gt;\n                        &lt;/select&gt;\n                    &lt;/td&gt;\n                    &lt;td colspan=\"2\"&gt;\n                        &lt;select id=\"destino\"&gt;\n                            &lt;option value=\"EPSG:4326\"&gt;EPSG:4326&lt;/option&gt; \n                            &lt;option value=\"EPSG:3857\"&gt;EPSG:3857&lt;/option&gt;\n                            &lt;option value=\"EPSG:25831\"&gt;EPSG:25831&lt;/option&gt;\n                            &lt;option value=\"EPSG:23031\"&gt;EPSG:23031&lt;/option&gt;\n                        &lt;/select&gt;\n                    &lt;/td&gt;\n                &lt;/tr&gt;\n                &lt;tr&gt;\n                    &lt;td&gt;&lt;label for=\"lat\"&gt;Latitud&lt;/label&gt;&lt;/td&gt;\n                    &lt;td&gt;&lt;label for=\"lng\"&gt;Longitud&lt;/label&gt;&lt;/td&gt;\n                    &lt;td colspan=\"2\"&gt;&lt;/td&gt;\n                &lt;/tr&gt;\n                &lt;tr&gt;\n                    &lt;td&gt;&lt;input type=\"text\" id=\"lat\"&gt;&lt;/td&gt;\n                    &lt;td&gt;&lt;input type=\"text\" id=\"lng\"&gt;&lt;/td&gt;\n                    &lt;td colspan=\"2\"&gt;&lt;/td&gt;\n                &lt;/tr&gt;\n                &lt;tr&gt;\n                    &lt;td colspan=\"4\"&gt;&lt;button&gt;Transformar coordenadas&lt;/button&gt;&lt;/td&gt;\n                &lt;/tr&gt;\n            &lt;/table&gt;\n        &lt;/div&gt;\n        &lt;aside&gt;\n            &lt;ul&gt;\n                &lt;li&gt;&lt;a href=\"https://epsg.io/4326\" title=\"WGS 84 -- WGS84 - World Geodetic System 1984, used in GPS\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;EPSG:4326&lt;/a&gt;&lt;/li&gt;\n                &lt;li&gt;EPSG:3857&lt;/li&gt;\n                &lt;li&gt;EPSG:25831&lt;/li&gt;\n                &lt;li&gt;EPSG:23031&lt;/li&gt;\n            &lt;/ul&gt;\n        &lt;/aside&gt;\n    &lt;/main&gt;\n    &lt;footer&gt;\u00a9Copyright 2020 de nadie. Ning\u00fan derecho reservado.&lt;/footer&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> </li> <li> <p>Guardar el archivo.</p> </li> </ol>"},{"location":"css/#anatomia-de-una-regla-css","title":"Anatom\u00eda de una regla CSS","text":"<ul> <li>Selector: es el elemento con el que comienza la regla y selecciona el(los) elemento(s) a dar estilo.</li> <li>Declaraci\u00f3n: es la unidad b\u00e1sica de CSS y consiste, b\u00e1sicamente, en la asignaci\u00f3n de un valor a una propiedad. CSS tiene un formato espec\u00edfico que debe seguir toda declaraci\u00f3n. \u00c9ste consiste en el nombre de la propiedad seguido de dos puntos (\":\") y el valor que le ser\u00e1 asignado. Cuando se provee m\u00e1s de una declaraci\u00f3n en el mismo bloque, cada declaraci\u00f3n debe ser separada de su pr\u00f3xima por un punto y coma (\";\"). Este es el motivo por el cual los autores normalmente usan un punto y coma al final de cada declaraci\u00f3n, independientemente de la presencia de declaraciones siguientes. <sup>2</sup></li> <li>Propiedades: es la propiedad quieres afectar en tu regla. Por ejemplo: color</li> <li>Valores de propiedades: es el valor que se le asigna a la propiedad. Por ejemplo: red</li> </ul> <p> Regla css</p> <p>Para modificar varios valores de propiedades a la vez, solo necesitas escribirlos separados por punto y coma (;).</p> <p>Ejemplo</p> <pre><code>p {\n  color: red;\n  width: 500px;\n  border: 1px solid black;\n}\n</code></pre> <p>Tambi\u00e9n puedes seleccionar varios elementos y aplicar una sola regla a todos ellos. Incluye varios selectores separados por comas (,). </p> <p>Ejemplo</p> <pre><code>p, li, h1 {\n  color: red;\n}\n</code></pre>"},{"location":"css/#tipos-de-selectores-simples","title":"Tipos de Selectores simples","text":""},{"location":"css/#selector-de-elemento-o-de-tipo","title":"Selector de elemento o de tipo","text":"<p>Se corresponde con todos los elementos en el documento que tienen el tipo especificado. Con este selector puedes aplicar declaraciones a, por ejemplo, todos los p\u00e1rrafos (elementos <code>&lt;p&gt;</code>), todos los \u00edtems de listas (elemento <code>&lt;li&gt;</code>) o todos los v\u00ednculos (elementos <code>&lt;a&gt;</code>) de un documento.</p> <p>\u00bfQu\u00e9 selecciona?. Todos los elementos HTML del tipo especificado.</p> <p>Ejemplo</p> <pre><code>div {\n  width: 500px;\n}\n</code></pre>"},{"location":"css/#selector-de-identificacion-id","title":"Selector de identificaci\u00f3n (ID)","text":"<p>Se corresponde con todos los elementos que tienen el valor especificado en su atributo id. Como, por definici\u00f3n, los valores de id deben ser \u00fanicos, este selector puede afectar s\u00f3lo a un elemento en el documento. En su declaraci\u00f3n, el ID especificado debe estar precedido por el signo numeral (#).</p> <p>\u00bfQu\u00e9 selecciona?. El elemento en la p\u00e1gina con el ID especificado.</p> <p>El siguiente ejemplo muestra un conjunto de declaraciones que est\u00e1n siendo aplicadas a un elemento que tiene el valor \"titulo\" en el atributo id.</p> <pre><code>#titulo {\n  font-size: 4em;\n  color: blue;\n  text-decoration: underline;\n}\n</code></pre> <p>Esta regla afectar\u00eda a un elemento como el siguiente.</p> <pre><code>&lt;h1 id=\"titulo\"&gt;T\u00edtulo con estilo&lt;/h1&gt;\n</code></pre>"},{"location":"css/#selector-de-clase","title":"Selector de clase","text":"<p>Una clase es un concepto introducido por CSS con el prop\u00f3sito de agrupar declaraciones y aplicarlas a un conjunto personalizado de elementos, independientemente de su tipo o naturaleza.</p> <p>Se corresponde con  todos los elementos que tienen el nombre de clase especificado en su atributo class. En su construcci\u00f3n, un punto (.) debe preceder al nombre de la clase.</p> <p>\u00bfQu\u00e9 selecciona?. Los elementos en la p\u00e1gina con la clase especificada (una clase puede aparecer varias veces en una p\u00e1gina).</p> <p>El siguiente ejemplo muestra un conjunto de declaraciones para la clase llamada \"importante\".</p> <pre><code>.importante {\n  font-size: 1.2em;\n  font-weight: bold;\n  color: red;\n}\n</code></pre> <p>Esta regla afectar\u00eda a los elementos como los siguientes.</p> <pre><code>&lt;h3 class=\"importante\"&gt;Cuidado&lt;/h3&gt;\n&lt;p class=\"importante\"&gt;No abra la escotilla durante viajes interestelares!&lt;/p&gt;\n&lt;div class=\"importante\"&gt;Georeferenciar los datos&lt;/div&gt;\n</code></pre>"},{"location":"css/#tipos-de-selectores-avanzados","title":"Tipos de Selectores avanzados","text":"<p>Guia visual de selectores: CSS Selectors: A Visual Guide</p>"},{"location":"css/#selector-de-atributo","title":"Selector de atributo","text":"<p>Este grupo de selectores te proporciona diferentes formas de seleccionar elementos seg\u00fan la presencia de un atributo determinado en un elemento. O incluso hacer una selecci\u00f3n basada en la presencia de un atributo que tiene un valor particular asignado.</p> <p>Ejemplo para seleccionar todo los elementos <code>&lt;a&gt;</code> que tiene el atributo target</p> <pre><code>a[target] {\n  background-color: yellow;\n}\n</code></pre> <p>Ejemplo para seleccionar todo los elementos <code>&lt;a&gt;</code> que tiene el atributo target igual a _blank</p> <pre><code>a[target=\"_blank\"] {\n  background-color: yellow;\n}\n</code></pre> <p>Para ver m\u00e1s ejemplos de selectores de atributo https://developer.mozilla.org/en-US/docs/Web/CSS/Attribute_selectors o https://www.w3schools.com/css/css_attribute_selectors.asp</p>"},{"location":"css/#selector-de-pseudoclase","title":"Selector de pseudoclase","text":"<p>Este grupo de selectores te proporciona diferentes formas de seleccionar elementos pero solo cuando est\u00e9 en el estado especificado, por ejemplo cuando el puntero est\u00e9 sobre \u00e9l.</p> <p>Por ejemplo la pseudoclase :hover selecciona un elemento solo cuando se le pasa el rat\u00f3n por encima.</p> <pre><code>a: hover {\n  background-color: red;\n}\n</code></pre> <p>Para ver el listado completo de pseudoclase https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-classes</p>"},{"location":"css/#selector-de-pseudoelementos","title":"Selector de pseudoelementos","text":"<p>Este grupo de selectores te proporciona diferentes formas de seleccionar una parte determinada de un elemento en vez del elemento en s\u00ed. Por ejemplo, ::first-line siempre selecciona la primera l\u00ednea del texto que se encuentra dentro de un elemento (<code>&lt;p&gt;</code>, en el ejemplo siguiente), y act\u00faa como si un elemento <code>&lt;span&gt;</code> hubiera delimitado la primera l\u00ednea, seleccionado y aplicado estilo.</p> <pre><code>p::first-line {\n  color: #ff0000;\n}\n</code></pre> <p>Para ver el listado completo de pseudoelementos https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-elements</p>"},{"location":"css/#combinadores","title":"Combinadores","text":"<p>Este grupo de selectores combina otros selectores con el fin de delimitar elementos de nuestros documentos. </p> <p>El ejemplo siguiente selecciona los p\u00e1rrafos <code>&lt;p&gt;</code> que son hijos directos del elemento <code>&lt;article&gt;</code> utilizando el operador de combinaci\u00f3n hijo (&gt;)</p> <pre><code>article &gt; p {\n  color: #ff0000;\n}\n</code></pre> <p>Exiten 4 tipo de selectores de combinaci\u00f3n en CSS:</p> <ul> <li>Selectores descendientes (\u2423 espacio)</li> <li>Selectores de hijo (&gt;)</li> <li>Selectores de hermanos adyacentes (+)</li> <li>Selectores de hermanos generales (~)</li> </ul>"},{"location":"css/#selectores-descendientes-espacio","title":"Selectores descendientes (espacio)","text":"<p>El \u2423 combinador (que se supone que representan un espacio, o mejor dicho uno o m\u00e1s espacios en blanco) combina dos selectores tales que el selector combinado incluye s\u00f3lo los elementos que coinciden con el segundo selector para los que hay un elemento ancestro que coincide con el primer selector. Los selectores descendientes son similares a selectores hijos , pero que no requieren que la relaci\u00f3n entre los elementos coincidentes ser estrictamente entre padres e hijos.</p> <p>El siguiente ejemplo selecciona todos lo elementos <code>&lt;p&gt;</code> que est\u00e9n dentro de un elemento <code>&lt;div&gt;</code></p> <pre><code>div p {\n  background-color: green;\n}\n</code></pre> <p>Esta regla afectar\u00eda a los elementos que aparecen marcados en amarillo.</p> <pre><code>&lt;div&gt;\n    &lt;p&gt;Afectado por el estilo&lt;p&gt;\n    &lt;a href=\"http://ejemplo.com\"&gt;\n        &lt;p&gt;Yo tambi\u00e9n estoy afectado&lt;/p&gt;\n    &lt;/a&gt;\n&lt;/div&gt;\n&lt;p&gt;Yo no estoy afectado&lt;/p&gt;\n&lt;a href=\"http://ejemplo.com\"&gt;\n    &lt;p&gt;Yo tampoco estoy afectado&lt;/p&gt;\n&lt;/a&gt;\n</code></pre>"},{"location":"css/#selectores-de-hijo","title":"Selectores de hijo (&gt;)","text":"<p>El combinador &gt; separa a dos selectores y busca solo a los elementos que coindicen con el segundo selector y que son hijos directos del primero. Cuando se combinan dos selectores con el selector de descendiente, la expresi\u00f3n busca elementos que coinciden con el segundo selector y que tienen algun ancestro que coindice con el primero.</p> <p>El siguiente ejemplo selecciona todos lo elementos <code>&lt;p&gt;</code> que son hijos directos de un elemento <code>&lt;div&gt;</code></p> <pre><code>div &gt; p {\n  background-color: green;\n}\n</code></pre> <p>Esta regla afectar\u00eda a los elementos que aparecen marcados en amarillo.</p> <pre><code>&lt;div&gt;\n    &lt;p&gt;Afectado por el estilo&lt;p&gt;\n    &lt;a href=\"http://ejemplo.com\"&gt;\n        &lt;p&gt;Yo ya no estoy afectado&lt;/p&gt;\n    &lt;/a&gt;\n&lt;/div&gt;\n&lt;p&gt;Yo no estoy afectado&lt;/p&gt;\n&lt;a href=\"http://ejemplo.com\"&gt;\n    &lt;p&gt;Yo tampoco estoy afectado&lt;/p&gt;\n&lt;/a&gt;\n</code></pre>"},{"location":"css/#selectores-de-hermanos-adyacentes","title":"Selectores de hermanos adyacentes (+)","text":"<p>El combinador + hace referencia a este selector como selector adyacente o selector del pr\u00f3ximo hermano. S\u00f3lo seleccionar\u00e1 un elemento especificado que est\u00e9 inmediatamente despu\u00e9s de otro elemento especificado. Tienes que estar en el mismo nivel esto quiere decir que tengan el mismo padre</p> <p>El siguiente ejemplo selecciona a todos los primeros elementos <code>&lt;p&gt;</code> que estan ubicados inmediatamente desp\u00faes de un elemento <code>&lt;div&gt;</code></p> <pre><code>div + p {\n  background-color: green;\n}\n</code></pre> <p>Esta regla afectar\u00eda a los elementos que aparecen marcados en amarillo.</p> <pre><code>&lt;p&gt;Yo no estoy afectado hermano&lt;/p&gt;\n&lt;div&gt;\n    &lt;p&gt;No Afectado por el estilo&lt;p&gt;\n    &lt;a href=\"http://ejemplo.com\"&gt;\n        &lt;p&gt;Yo ya no estoy afectado&lt;/p&gt;\n    &lt;/a&gt;\n&lt;/div&gt;\n&lt;p&gt;Yo estoy afectado hermano&lt;/p&gt;\n&lt;p&gt;Yo no estoy afectado&lt;/p&gt;\n&lt;a href=\"http://ejemplo.com\"&gt;\n    &lt;p&gt;Yo tampoco estoy afectado&lt;/p&gt;\n&lt;/a&gt;\n</code></pre>"},{"location":"css/#selectores-de-hermanos-generales","title":"Selectores de hermanos generales (~)","text":"<p>El combinador ~ separa dos selectores y selecciona el segundo elemento s\u00f3lo si est\u00e1 precedido por el primero y ambos comparten un padre com\u00fan. Tienes que estar en el mismo nivel esto quiere decir que tengan el mismo padre</p> <p>El siguiente ejemplo selecciona a todos los elementos <code>&lt;p&gt;</code> que estan ubicados desp\u00faes de un elemento <code>&lt;div&gt;</code></p> <pre><code>div ~ p {\n  background-color: green;\n}\n</code></pre> <p>Esta regla afectar\u00eda a los elementos que aparecen marcados en amarillo.</p> <pre><code>&lt;p&gt;Yo no estoy afectado hermano&lt;/p&gt;\n&lt;div&gt;\n    &lt;p&gt;No Afectado por el estilo&lt;p&gt;\n    &lt;a href=\"http://ejemplo.com\"&gt;\n        &lt;p&gt;Yo ya no estoy afectado&lt;/p&gt;\n    &lt;/a&gt;\n&lt;/div&gt;\n&lt;p&gt;Yo estoy afectado hermano&lt;/p&gt;\n&lt;p&gt;Yo tambi\u00e9n estoy afectado&lt;/p&gt;\n&lt;a href=\"http://ejemplo.com\"&gt;\n    &lt;p&gt;Yo tampoco estoy afectado&lt;/p&gt;\n&lt;/a&gt;\n</code></pre>"},{"location":"css/#herencia","title":"Herencia","text":"<p>La herencia es un concepto por el cual los elementos descendientes heredan algunas de las propiedades declaradas para sus ancestros. Esto no es otra cosa m\u00e1s que el comportamiento esperado, y evita tener que redefinir las mismas propiedades en los hijos de un elemento.</p> <p>El siguiente ejemplo afectar\u00eda a todos los elementos del documento.</p> <pre><code>body {\n  color: red;\n  font-style: italic;\n}\n</code></pre> <p>Como ya comentamos esta regla afectar\u00eda a todos los elementos que estan dentro del body. En este ejemplo afectar\u00eda a los elemento <code>&lt;h1&gt;</code> y <code>&lt;p&gt;</code></p> <pre><code>&lt;body&gt;\n  &lt;h1&gt;Tormenta en el mar rojo&lt;/h1&gt;\n  &lt;p&gt;Este viento est\u00e1 torciendo mi texto...&lt;/p&gt;\n&lt;/body&gt;\n</code></pre> <p>Algunas propiedades no se heredan. Por ejemplo, si para un elemento se establece un ancho width del 50%, sus descendientes no tendr\u00e1n un 50% de ancho con respecto al de sus padres.</p>"},{"location":"css/#orden-de-aplicacion-de-las-reglas","title":"Orden de aplicaci\u00f3n de las reglas","text":"<p>Los estilos de diferentes or\u00edgenes y selectores son aplicados en un orden espec\u00edfico y un\u00edvoco. Este orden ayuda a resolver conflictos y hace al sistema m\u00e1s predecible, lo que permite a los autores planear su esquema de estilos con certeza. Es posible que la regla que se aplica finalmente a tu elemento no sea la que esperas (debido a que algunas reglas entran en conflicto), por lo que debes comprender c\u00f3mo funcionan estos mecanismos.</p> <p>Los conceptos de cascada, y el de especificidad son mecanismos que controlan qu\u00e9 regla se aplica cuando aparecen tales conflictos.</p>"},{"location":"css/#cascada","title":"Cascada","text":"<p>En un primer nivel de simplicidad, la cascada en las hojas de estilo significa que el orden de las reglas importa en CSS: cuando dos reglas tienen la misma especificidad, se aplica la que aparece en \u00faltimo lugar en el CSS.</p> <p>En el ejemplo siguiente tenemos dos reglas que pueden aplicarse al <code>&lt;h1&gt;</code>. El <code>&lt;h1&gt;</code> acaba siendo de color azul porque estas normas tienen un selector id\u00e9ntico y, por lo tanto, tienen la misma especificidad. Por esta raz\u00f3n, se aplica la \u00faltima que aparece.</p> <pre><code>h1 { \n    color: red; \n}\nh1 { \n    color: blue; \n}\n</code></pre>"},{"location":"css/#especificidad","title":"Especificidad","text":"<p>La especificidad es el modo que tiene el navegador de decidir qu\u00e9 regla se aplica si diversas reglas tienen selectores diferentes pero podr\u00edan aplicarse a un mismo elemento. B\u00e1sicamente, la especificidad mide cu\u00e1n espec\u00edfica es la selecci\u00f3n de un selector.</p> <p>La siguiente lista muestra el orden de especificidad que se aplica en CSS. Cada forma de aplicar estilos en esta lista prevalecer\u00e1 cuando compita con aquellos debajo de s\u00ed.</p> <ol> <li>El atributo style</li> <li>El selector de ID</li> <li>El selector de clase</li> <li>El selector de tipo</li> <li>El selector universal</li> </ol> <p>Esta lista no dice nada acerca de los selectores avanzados, donde las combinaciones llevan al orden lejos de la simplicidad. Sin embargo, existe un sistema para trabajar con eso tambi\u00e9n.</p> <p>Por ejemplo tenemos este conjunto de reglas</p> <pre><code>p {\n  color: gray;\n}\n\n#titulo {\n  color: red;\n}\n\n.blue {\n  color: blue;\n}\n\nh1 {\n  color: green;\n}\n\n#titulo {\n  color: cyan;\n}\n</code></pre> <p>Y tenemos este html</p> <pre><code>&lt;h1 id=\"titulo\" class=\"blue\"&gt;Por qu\u00e9 amo las m\u00e1quinas de arcade&lt;/h1&gt;\n&lt;p style=\"color: blue\"&gt;Todav\u00eda puedo oler la ficha de metal en mi mano cuando cierro los ojos...&lt;/p&gt;\n</code></pre> <p>Siguiendo el orden de aplicaci\u00f3n de la lista veremos el <code>&lt;h1&gt;</code> con el texto en color cyan y el <code>&lt;p&gt;</code> en color azul</p>"},{"location":"css/#propiedad-important","title":"Propiedad !important","text":"<p>Hay una pieza especial de CSS que se puede utilizar para anular todos los c\u00e1lculos anteriores, sin embargo se debe tener mucho cuidado con su uso: !important. Se utiliza para convertir una propiedad y un valor particular en el elemento m\u00e1s espec\u00edfico, de modo que se invalidan las reglas normales de la cascada.</p>"},{"location":"css/#valores-y-unidades","title":"Valores y unidades","text":""},{"location":"css/#color","title":"Color","text":"<p>En CSS hay muchas formas de especificar el color. En todas partes en CSS se pueden usar los mismos valores de color, tanto para especificar el color del texto como el color de fondo, o de cualquier otra cosa.</p> <p>El sistema de colores est\u00e1ndar disponible en los ordenadores modernos es de 24 bits, lo que permite visualizar aproximadamente 16,7 millones de colores distintos a partir de una combinaci\u00f3n de diferentes canales de rojo, verde y azul con 256 valores diferentes por canal (256 x 256 x 256 = 16.777.216). Echemos un vistazo a algunas de las formas en que podemos especificar colores en CSS.</p>"},{"location":"css/#palabres-claves-para-los-colores","title":"Palabres claves para los colores","text":"<p>Las palabras clave para los colores, son una forma simple y comprensible de especificar colores. Son identificadores en los que no hay distinci\u00f3n entre may\u00fasculas y min\u00fasculas y que sirven para representar un color concreto, por ejemplo red, blue, brown, lightseagreen. El nombre describe el color aunque es mayormente artificial ya que el color final puede variar ligeramente dependiendo de diversos factores.</p> <p>Ninguna palabra clave de color tiene transparencia en CSS, son colores planos y s\u00f3lidos.</p>"},{"location":"css/#rgb","title":"RGB","text":"<p>Los colores puede ser definidos usando el modelo RGB (rojo-verde-azul) de dos maneras</p>"},{"location":"css/#notacion-hexadecimal-rrggbb-y-rgb","title":"Notaci\u00f3n Hexadecimal #RRGGBB y #RGB","text":"<p>Se representa mediante un \"#\", seguido de treo o seis caracteres hexadecimales (0-9, A-F).</p> <p>La notaci\u00f3n de tres d\u00edgitos (#RGB) y la de seis (#RRGGBB) son iguales. Por ejemplo, #f03 y #ff0033 representan el mismo color.</p>"},{"location":"css/#notacion-funcional-rgbrgb-y-rgbargba","title":"Notaci\u00f3n funcional rgb(R,G,B) y rgba(R,G,B,A)","text":"<p>Se representa mediante \"rgb\", seguido por tres valores enteros o tres valores porcentuales. El n\u00famero entero 255 representa el 100%, y F o FF en notaci\u00f3n hexadecimal.</p> <p>Podemos definir los colores con el modelo Rojo (red) - Verde (green) - Azul (blue) - alpha (RGBa) usando la notaci\u00f3n funcional rgba(). RGBa amplia el modelo RGB a\u00f1adiendo un canal alfa, permitiendo de esta manera especificar la opacidad de un color. La a representa opacidad: 0=transparente; 1=opaco; Los valores de opacidad son valores entre 0 y 1. Por ejemplo rgba(255,0,0,0.4)</p>"},{"location":"css/#hsl","title":"HSL","text":"<p>Los colores tambi\u00e9n puede ser definidos usando el modelo tono (hue) - saturaci\u00f3n (saturation) - brillo (lightness) (HSL) con la notaci\u00f3n funcional hsl(). La ventaja del modelo HSL sobre el modelo RGB es que es mucho m\u00e1s intuitivo: puedes adivinar los colores que t\u00fa quieres y luego modificarlos. Es tambi\u00e9n m\u00e1s f\u00e1cil crear conjuntos de colores (manteniendo el tono (hue)  igual y modificando el brillo y la saturaci\u00f3n.</p> <p>Esta notaci\u00f3n tambi\u00e9n se le puede definir opacidad usando la notaci\u00f3n funcional hsla(). HSLa ampl\u00eda el modelo HSL incluyendo el canal alfa, permitiendo de esta manera especificar la opacidad de un color. La a representa opacidad: 0=transparente; 1=opaco; Los valores de opacidad son valores entre 0 y 1. Por ejemplo hsla(240,100%,50%, 0.7)</p>"},{"location":"css/#numeros-longitudes-y-porcentajes","title":"N\u00fameros, longitudes y porcentajes","text":"<p>Al utilizar CSS te puedes encontrar con varios tipos de datos num\u00e9ricos. Todos los siguientes est\u00e1n clasificados como tipos de datos num\u00e9ricos:</p> <ul> <li>N\u00fameros enteros, por ejemplo 102 o -50</li> <li>N\u00fameros decimales, por ejemplo 0.2 o -2.5</li> <li>Una dimensi\u00f3n es un n\u00famero con una unidad asociada, por ejemplo 45deg (grados), 5s (segundos) o 10px (p\u00edxeles)</li> <li>Un porcentaje representa una fracci\u00f3n de alg\u00fan otro valor, por ejemplo, 50%. Los valores de porcentaje siempre son relativos a otra cantidad, por ejemplo, la longitud de un elemento es relativa a la longitud de su elemento padre.</li> </ul>"},{"location":"css/#longitudes","title":"Longitudes","text":"<p>El tipo num\u00e9rico con el que te vas a encontrar con mayor frecuencia es , por ejemplo, 10px (p\u00edxeles) o 30em. En CSS se utilizan dos longitudes diferentes: relativa y absoluta. Es importante conocer la diferencia para entender qu\u00e9 dimensiones van a tener las cosas."},{"location":"css/#unidades-de-longitud-absoluta","title":"Unidades de longitud absoluta","text":"<p>Todas las unidades siguientes son unidades de longitud absoluta: no son relativas a nada m\u00e1s y en general se considera que siempre tienen el mismo tama\u00f1o.</p> <p>En la siguiente lista se muestran algunas de las unidades m\u00e1s frecuentes</p> <ul> <li>cm: Cent\u00edmetros = 1cm = 96px/2,54</li> <li>mm: Mil\u00edmetros</li> <li>in: Pulgadas = 1in = 2,54cm = 96px</li> <li>pt: Puntos = 1pt = 1/72 de 1in</li> <li>px: P\u00edxeles = 1px = 1/96 de 1in</li> </ul> <p>Por ejemplo, normalmente no usamos cm (cent\u00edmetros) en pantalla. El valor que usar\u00e1s de forma m\u00e1s frecuente es px (p\u00edxeles) o pt (puntos) para las fuentes.</p>"},{"location":"css/#unidades-de-longitud-relativa","title":"Unidades de longitud relativa","text":"<p>Las unidades de longitud relativa son relativas a algo m\u00e1s, por ejemplo, al tama\u00f1o de letra del elemento principal o al tama\u00f1o de la ventana gr\u00e1fica. La ventaja de usar unidades relativas es que con una planificaci\u00f3n cuidadosa puedes lograr que el tama\u00f1o del texto u otros elementos escalen en relaci\u00f3n con todo lo dem\u00e1s en la p\u00e1gina.</p> <p>En la siguiente lista se muestran algunas de las unidades m\u00e1s \u00fatiles para el desarrollo web.</p> <ul> <li>em: Tama\u00f1o de letra del elemento padre, en el caso de propiedades tipogr\u00e1ficas como font-size, y tama\u00f1o de la fuente del propio elemento en el caso de otras propiedades, como width</li> <li>rem: Tama\u00f1o de la letra del elemento ra\u00edz.</li> <li>vw: % del ancho de la ventana gr\u00e1fica.</li> <li>vh: % de la altura de la ventana gr\u00e1fica.</li> </ul>"},{"location":"css/#funciones","title":"Funciones","text":"<p>Existe el grupo de valores conocidos como funciones. Ya hemos visto funciones en acci\u00f3n en la secci\u00f3n sobre los colores: rgb(), hsl(), etc.</p> <p>Un valor que se comporta m\u00e1s como algo que puedes encontrar en un lenguaje de programaci\u00f3n tradicional es la funci\u00f3n calc(). Esta funci\u00f3n te proporciona la capacidad de hacer c\u00e1lculos simples en tu CSS. Es particularmente \u00fatil si deseas calcular valores que no puedes definir al escribir el CSS para tu proyecto y necesitas que el navegador lo haga durante la ejecuci\u00f3n.</p> <p>Por ejemplo, a continuaci\u00f3n usamos calc() para hacer que la caja tenga 20% + 100px de ancho. El 20% se calcula a partir del ancho del contenedor principal .wrapper y, por lo tanto, cambiar\u00e1 si ese ancho cambia. No podemos hacer este c\u00e1lculo de antemano porque no sabemos cu\u00e1l ser\u00e1 el 20% del elemento padre, por lo que usamos calc() para decirle al navegador que lo haga por nosotros.</p> <p><pre><code>.wrapper {\n  width: 400px;\n}\n\n.box {\n  width: calc(20% + 100px);\n}\n</code></pre> <pre><code>&lt;div class=\"wrapper\"&gt;\n  &lt;div class=\"box\"&gt;Mi ancho es calculado.&lt;/div&gt; \n&lt;/div&gt;\n</code></pre></p>"},{"location":"css/#variables","title":"Variables","text":"<p>En CSS, las propiedades personalizadas tambi\u00e9n conocidas como variables son entidades definidas por autores de CSS que contienen valores espec\u00edficos que se pueden volver a utilizar en un documento. Se establecen mediante la notaci\u00f3n de propiedades personalizadas (por ejemplo, --main-color: black;) y se acceden mediante la funci\u00f3n var() (por ejemplo, color: var (--main-color);).</p> <p>Sitios web complejos tienen cantidades muy grandes de CSS, a menudo con una gran cantidad de valores repetidos. Por ejemplo, el mismo color se puede utilizar en cientos de lugares diferentes, lo cual requiere buscar y reemplazar globalmente si necesitamos cambiar ese color. Las variables CSS permiten que un valor se almacene en un lugar y luego se haga referencia en varios otros lugares. Un beneficio adicional son los identificadores sem\u00e1nticos. Por ejemplo --main-text-color es m\u00e1s f\u00e1cil de entender que #00ff00, especialmente si este mismo color tambi\u00e9n se utiliza en otro contexto.</p> <p>Las variables CSS est\u00e1n sujetas a la cascada, y heredan su valor de su padre.</p> <p>Para declarar variables usamos un nombre que comienze con dos guiones (--), y un valor que puede ser cualquier valor v\u00e1lido de CSS. Como cualquier otra propiedad, la escribimos dentro de un set de reglas de estilo, algo as\u00ed:</p> <pre><code>elemento {\n  --main-bg-color: brown;\n}\n</code></pre> <p>Ten en cuenta que el selector que usemos para las reglas de estilo define el \u00e1mbito (scope) en el que podremos usar la propiedad personalizada (variable). Una buena pr\u00e1ctica com\u00fan es declarar variables en la pseudo-clase :root, y as\u00ed aplicarlas globalmente al documento HTML</p> <pre><code>:root {\n  --main-bg-color: brown;\n}\n</code></pre> <p>La funci\u00f3n var() puede ser utilizada como valor en cualquier propiedad de un elemento. La funci\u00f3n var() no puede ser usada como nombre de una propiedad, selector o cualquier cosa que no sea un valor de propiedad.</p> <p>El primer par\u00e1metro que recibe la funci\u00f3n es el nombre de la variable que ser\u00e1 reemplazada. Se puede utilizar un segundo par\u00e1metro opcional como fallback de el primero. Si la variable referenciada por el primer par\u00e1metro no es v\u00e1lida, entonces la funci\u00f3n utiliza el valor del seg\u00fando par\u00e1metro.</p> <p>Ejemplo</p> <pre><code>:root {\n  --main-bg-color: pink;\n}\n\nbody {\n  background-color: var(--main-bg-color);\n}\n\n/* Fallback --header-color no est\u00e1 definido */\n.header {\n  color: var(--header-color, blue);\n}\n</code></pre> <ol> <li> <p>Modificar el archivo estilos.css para agregar las variables de los colores principales que usaremos en nuestra calculadora. Abrir el archivo con el editor de texto y escribir lo siguiente</p> <pre><code>:root {\n    --light-blue: #8ecae6ff;\n    --blue-green: #219ebcff;\n    --prussian-blue: #023047ff;\n    --honey-yellow: #ffb703ff;\n    --orange: #fb8500ff;\n}\n</code></pre> </li> <li> <p>Guardar el archivo</p> </li> </ol> <p>Paleta de colores sacada de https://coolors.co/palettes/trending</p>"},{"location":"css/#fuentes","title":"Fuentes","text":"<p>Las propiedades CSS que se usan para aplicar estilo al texto pueden clasificarse generalmente en dos categor\u00edas:</p> <ul> <li>Estilos del tipo de letra: Propiedades que afectan al texto (qu\u00e9 tipo de letra se usa, su tama\u00f1o, si es negrita, it\u00e1lica, etc.).</li> <li>Estilos de disposici\u00f3n del texto: Propiedades que afectan al espaciado y otras caracter\u00edsticas relativas a la disposici\u00f3n del texto, lo que permite la elecci\u00f3n de, por ejemplo, el espacio entre l\u00edneas y letras, y el modo como el texto se alinea dentro de la caja contenedora.</li> </ul>"},{"location":"css/#estilos-del-tipo-de-letra","title":"Estilos del tipo de letra","text":""},{"location":"css/#familia-de-tipos-de-letra","title":"Familia de tipos de letra","text":"<p>Usamos la propiedad font-family para definir un tipo de letra diferente para nuestro texto. Esta propiedad indica al navegador el tipo de letra (o una lista de tipos de letra) que debe aplicar a los elementos seleccionados. El navegador solo aplica el tipo de letra si la m\u00e1quina que accede al sitio web dispone de ella; en caso contrario, simplemente usa el tipo de letra que tiene definido por defecto.</p> <p>Ya que no puedes garantizar la disponibilidad de los tipos de letra que deseas utilizar (incluso un tipo de letra seguro para la web podr\u00eda fallar por alguna raz\u00f3n), puedes proporcionar un lista de tipos de letra para que el navegador tenga diversos tipos de letra entre los que elegir. Consiste simplemente en introducirlo como el valor de font-family, que consistir\u00e1 en una lista de diversos nombres de tipos de letra separados por comas.</p> <p>En tal caso, el navegador comienza al principio de la lista y busca si el primer tipo de letra est\u00e1 disponible en la m\u00e1quina. Si es as\u00ed, aplica ese tipo de letra a los elementos seleccionados, y si no, lo intenta con el nombre siguiente de la lista; y as\u00ed sucesivamente.</p> <p>Ejemplo</p> <pre><code>p {\n  font-family: \"Trebuchet MS\", Verdana, sans-serif;\n}\n</code></pre>"},{"location":"css/#tamano-de-la-letra","title":"Tama\u00f1o de la letra","text":"<p>En el apartado sobre Unidades y valores de CSS, vimos las unidades de longitud y tama\u00f1o. El tama\u00f1o del tipo de letra (establecido con la propiedad font-size) puede tomar valores medidos en la mayor\u00eda de estas unidades (y en otras, como porcentajes). Sin embargo, las unidades m\u00e1s comunes que vas a usar para ajustar el tama\u00f1o del texto son:</p> <ul> <li>Unidades px (p\u00edxeles): El n\u00famero de p\u00edxeles de altura que deseas que tenga el texto. Esta es una unidad absoluta, da como resultado el mismo valor calculado final para el tipo de letra en la p\u00e1gina en casi cualquier situaci\u00f3n.</li> <li>Unidades em: 1em equivale al tama\u00f1o de tipo de letra que se haya establecido en el elemento padre del elemento activo al que aplicamos estilo (m\u00e1s espec\u00edficamente, el ancho de una letra M may\u00fascula contenida dentro del elemento padre).</li> <li>Unidades rem: Funcionan igual que las unidades em, excepto que 1rem equivale al tama\u00f1o del tipo de letra establecido en el elemento ra\u00edz del documento (es decir, en <code>&lt;html&gt;</code>), no en el elemento padre.</li> </ul> <p>Ejemplo <pre><code>html {\n  font-size: 10px;\n}\n\nh1 {\n  font-size: 2.6rem;\n}\n\np {\n  font-size: 1.4rem;\n  color: red;\n  font-family: Helvetica, Arial, sans-serif;\n}\n</code></pre></p>"},{"location":"css/#estilo-y-cuerpo-del-tipo-de-letra-efectos-y-decoracion-del-texto","title":"Estilo y cuerpo del tipo de letra, efectos y decoraci\u00f3n del texto","text":"<p>El CSS proporciona cuatro propiedades comunes para alterar el efecto visual / \u00e9nfasis del texto:</p> <ul> <li>font-style: Se usa para activar y desactivar el texto en cursiva</li> <li>font-weight: Establece el grueso o peso del texto. Ejemplo normal o bold</li> <li>text-transform: Te permite practicar algunas transformaciones sobre tu tipo de letra. Ejemplo uppercase, lowercase, capitalize, etc.</li> <li>text-decoration: Activa/desactiva decoraciones en los tipos de letra (usar\u00e1s esto principalmente para desactivar el subrayado por defecto de los enlaces al aplicarles estilo). Ejemplo none (desactiva cualquier decoraci\u00f3n de texto que presente), underline, etc.</li> </ul>"},{"location":"css/#estilos-de-disposicion-del-texto","title":"Estilos de disposici\u00f3n del texto","text":""},{"location":"css/#alineacion-del-texto","title":"Alineaci\u00f3n del texto","text":"<p>La propiedad text-align se usa para controlar la forma en que el texto se alinea dentro de la caja que lo contiene. Los valores disponibles para esta propiedad son los siguientes, y funcionan de la misma forma que en una aplicaci\u00f3n de procesamiento de texto:</p> <ul> <li>left: Alinea el texto por la izquierda.</li> <li>right: Alinea el texto por la derecha.</li> <li>center: Centra el texto.</li> <li>justify: Var\u00eda los espacios entre las palabras para que todas las l\u00edneas de texto tengan el mismo ancho. </li> </ul>"},{"location":"css/#interlineado","title":"Interlineado","text":"<p>La propiedad line-height establece la altura entre cada l\u00ednea de texto; esta propiedad admite la mayor\u00eda de las unidades y magnitudes, pero tambi\u00e9n puede tomar un valor sin unidades, que act\u00faa como un multiplicador y generalmente se considera la mejor opci\u00f3n porque se multiplica la propiedad font-size para obtener la altura de la l\u00ednea (line-height)</p>"},{"location":"css/#otras-propiedades-interesantes","title":"Otras propiedades interesantes","text":"<ul> <li>white-space: Define c\u00f3mo se usan los espacios en blanco y los saltos de l\u00ednea asociados dentro del elemento.</li> <li>word-break: Especifica si se deben dividir las palabras a final de l\u00ednea.</li> <li>word-wrap: Especifica si el navegador puede dividir palabras a final de l\u00ednea para evitar desbordamientos del contenido.</li> </ul>"},{"location":"css/#tipografias-web","title":"Tipograf\u00edas web","text":"<p>Las tipograf\u00edas web son una funci\u00f3n del CSS que te permite especificar los archivos de tipo de letra que se van a descargar junto con tu sitio web a medida que el usuario acceda a ellos, lo que significa que cualquier navegador que admita tipograf\u00edas web puede disponer de los tipos de letra que especificas.</p> <p>En primer lugar, tienes un bloque @font-face al comienzo del CSS, que especifica los archivos de los tipos de letra que quieres que se descarguen:</p> <pre><code>@font-face {\n  font-family: \"myFont\";\n  src: url(\"myFont.woff\");\n}\n</code></pre> <p>A continuaci\u00f3n, puedes usar el nombre de la familia de tipos de letra especificado en @font-face para aplicar tu tipo de letra personalizado a cualquier elemento que desees</p> <pre><code>html {\n  font-family: \"myFont\", \"Bitstream Vera Serif\", serif;\n}\n</code></pre> <p>Los navegadores admiten diferentes formatos de tipos de letra, por lo que necesitar\u00e1s m\u00e1s de un formato de tipos de letra para conseguir una compatibilidad decente entre navegadores. Por ejemplo, la mayor\u00eda de los navegadores modernos admiten WOFF/WOFF2 (Web Open Font Format, versiones 1 y 2), el formato m\u00e1s eficiente disponible.</p> <p>Generalmente las fuentes no son de uso gratuito. Debes pagar por ellas y/o respetar otras condiciones de licencia, como acreditar al creador del tipo de letra en el c\u00f3digo (o en tu sitio web)</p> <p>Puedes obtener fuentes en diversos sitios como por ejemplo: https://fonts.google.com/ o https://fontlibrary.org/</p> <ol> <li> <p>Modificar el archivo index.html para agregar la fuente Roboto de google fonts.</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"es\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"author\" content=\"[VUESTRO NOMBRE]\"&gt;\n    &lt;meta name=\"description\" content=\"Calculadora geod\u00e9sica que permite hacer la transformaci\u00f3n de coordenadas geogr\u00e1ficas en linea\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;link href=\"https://www.icgc.cat/bundles/microblauicgc/img/favicon.ico\" rel=\"shortcut icon\" type=\"image/x-icon\"&gt;\n    &lt;link rel=\"preconnect\" href=\"https://fonts.gstatic.com\"&gt;\n    &lt;link href=\"https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,300;0,400;0,700;1,400;1,700&amp;display=swap\" rel=\"stylesheet\"&gt;\n    &lt;link type=\"text/css\" href=\"css/estilos.css\" rel=\"stylesheet\"&gt;\n    &lt;title&gt;Mi calculadora geod\u00e9sica&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;header&gt;\n        &lt;img src=\"https://www.uab.cat/Imatge/635/883/logop.gif\" alt=\"UAB\"&gt;\n        &lt;h1&gt;Mi calculadora geod\u00e9sica&lt;/h1&gt;\n    &lt;/header&gt;\n    &lt;main&gt;\n        &lt;div&gt;\n            &lt;table&gt;\n                &lt;tr&gt;\n                    &lt;th colspan=\"2\"&gt;&lt;label for=\"origen\"&gt;Sistema de referencia de origen&lt;/label&gt;&lt;/th&gt;\n                    &lt;th colspan=\"2\"&gt;&lt;label for=\"destino\"&gt;Sistema de referencia de destino&lt;/label&gt;&lt;/th&gt;\n                &lt;/tr&gt;\n                &lt;tr&gt;\n                    &lt;td colspan=\"2\"&gt;\n                        &lt;select id=\"origen\"&gt;\n                            &lt;option value=\"EPSG:4326\"&gt;EPSG:4326&lt;/option&gt; \n                            &lt;option value=\"EPSG:3857\"&gt;EPSG:3857&lt;/option&gt;\n                            &lt;option value=\"EPSG:25831\"&gt;EPSG:25831&lt;/option&gt;\n                            &lt;option value=\"EPSG:23031\"&gt;EPSG:23031&lt;/option&gt;\n                        &lt;/select&gt;\n                    &lt;/td&gt;\n                    &lt;td colspan=\"2\"&gt;\n                        &lt;select id=\"destino\"&gt;\n                            &lt;option value=\"EPSG:4326\"&gt;EPSG:4326&lt;/option&gt; \n                            &lt;option value=\"EPSG:3857\"&gt;EPSG:3857&lt;/option&gt;\n                            &lt;option value=\"EPSG:25831\"&gt;EPSG:25831&lt;/option&gt;\n                            &lt;option value=\"EPSG:23031\"&gt;EPSG:23031&lt;/option&gt;\n                        &lt;/select&gt;\n                    &lt;/td&gt;\n                &lt;/tr&gt;\n                &lt;tr&gt;\n                    &lt;td&gt;&lt;label for=\"lat\"&gt;Latitud&lt;/label&gt;&lt;/td&gt;\n                    &lt;td&gt;&lt;label for=\"lng\"&gt;Longitud&lt;/label&gt;&lt;/td&gt;\n                    &lt;td colspan=\"2\"&gt;&lt;/td&gt;\n                &lt;/tr&gt;\n                &lt;tr&gt;\n                    &lt;td&gt;&lt;input type=\"text\" id=\"lat\"&gt;&lt;/td&gt;\n                    &lt;td&gt;&lt;input type=\"text\" id=\"lng\"&gt;&lt;/td&gt;\n                    &lt;td colspan=\"2\"&gt;&lt;/td&gt;\n                &lt;/tr&gt;\n                &lt;tr&gt;\n                    &lt;td colspan=\"4\"&gt;&lt;button&gt;Transformar coordenadas&lt;/button&gt;&lt;/td&gt;\n                &lt;/tr&gt;\n            &lt;/table&gt;\n        &lt;/div&gt;\n        &lt;aside&gt;\n            &lt;ul&gt;\n                &lt;li&gt;&lt;a href=\"https://epsg.io/4326\" title=\"WGS 84 -- WGS84 - World Geodetic System 1984, used in GPS\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;EPSG:4326&lt;/a&gt;&lt;/li&gt;\n                &lt;li&gt;EPSG:3857&lt;/li&gt;\n                &lt;li&gt;EPSG:25831&lt;/li&gt;\n                &lt;li&gt;EPSG:23031&lt;/li&gt;\n            &lt;/ul&gt;\n        &lt;/aside&gt;\n    &lt;/main&gt;\n    &lt;footer&gt;\u00a9Copyright 2020 de nadie. Ning\u00fan derecho reservado.&lt;/footer&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> </li> <li> <p>Modificar el archivo estilos.css para aplicar la fuente a todo nuestro documento</p> <pre><code>:root {\n    --light-blue: #8ecae6ff;\n    --blue-green: #219ebcff;\n    --prussian-blue: #023047ff;\n    --honey-yellow: #ffb703ff;\n    --orange: #fb8500ff;\n}\n\nhtml {\n    font-family: \"Roboto\", sans-serif;\n}\n</code></pre> </li> <li> <p>Guardar el archivo y recargar la p\u00e1gina en nuestro navegador para observar el cambio de tipo de letra.</p> </li> <li> <p>Modificar el archivo estilos.css para aplicar algunos estilos a nuestros elementos</p> <pre><code>:root {\n    --light-blue: #8ecae6ff;\n    --blue-green: #219ebcff;\n    --prussian-blue: #023047ff;\n    --honey-yellow: #ffb703ff;\n    --orange: #fb8500ff;\n}\n\nhtml {\n    font-family: \"Roboto\", sans-serif;\n}\n\nheader {\n    background-color: var(--light-blue);\n}\n\nheader &gt; h1 {\n    color: var(--prussian-blue);\n}\n\nfooter {\n    color: var(--blue-green);\n}\n\n#origen, #destino {\n    color: var(--orange);\n}\n\naside &gt; ul &gt; li {\n    color: var(--honey-yellow);\n}\n</code></pre> </li> <li> <p>Guardar el archivo y recargar la p\u00e1gina en nuestro navegador para ver los cambios de colores en nuestra p\u00e1gina.</p> </li> <li> <p>Modificar el archivo index.html para agregar un class al bot\u00f3n</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"es\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"author\" content=\"[VUESTRO NOMBRE]\"&gt;\n    &lt;meta name=\"description\" content=\"Calculadora geod\u00e9sica que permite hacer la transformaci\u00f3n de coordenadas geogr\u00e1ficas en linea\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;link href=\"https://www.icgc.cat/bundles/microblauicgc/img/favicon.ico\" rel=\"shortcut icon\" type=\"image/x-icon\"&gt;\n    &lt;link rel=\"preconnect\" href=\"https://fonts.gstatic.com\"&gt;\n    &lt;link href=\"https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,300;0,400;0,700;1,400;1,700&amp;display=swap\" rel=\"stylesheet\"&gt;\n    &lt;link type=\"text/css\" href=\"css/estilos.css\" rel=\"stylesheet\"&gt;\n    &lt;title&gt;Mi calculadora geod\u00e9sica&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;header&gt;\n        &lt;img src=\"https://www.uab.cat/Imatge/635/883/logop.gif\" alt=\"UAB\"&gt;\n        &lt;h1&gt;Mi calculadora geod\u00e9sica&lt;/h1&gt;\n    &lt;/header&gt;\n    &lt;main&gt;\n        &lt;div&gt;\n            &lt;table&gt;\n                &lt;tr&gt;\n                    &lt;th colspan=\"2\"&gt;&lt;label for=\"origen\"&gt;Sistema de referencia de origen&lt;/label&gt;&lt;/th&gt;\n                    &lt;th colspan=\"2\"&gt;&lt;label for=\"destino\"&gt;Sistema de referencia de destino&lt;/label&gt;&lt;/th&gt;\n                &lt;/tr&gt;\n                &lt;tr&gt;\n                    &lt;td colspan=\"2\"&gt;\n                        &lt;select id=\"origen\"&gt;\n                            &lt;option value=\"EPSG:4326\"&gt;EPSG:4326&lt;/option&gt; \n                            &lt;option value=\"EPSG:3857\"&gt;EPSG:3857&lt;/option&gt;\n                            &lt;option value=\"EPSG:25831\"&gt;EPSG:25831&lt;/option&gt;\n                            &lt;option value=\"EPSG:23031\"&gt;EPSG:23031&lt;/option&gt;\n                        &lt;/select&gt;\n                    &lt;/td&gt;\n                    &lt;td colspan=\"2\"&gt;\n                        &lt;select id=\"destino\"&gt;\n                            &lt;option value=\"EPSG:4326\"&gt;EPSG:4326&lt;/option&gt; \n                            &lt;option value=\"EPSG:3857\"&gt;EPSG:3857&lt;/option&gt;\n                            &lt;option value=\"EPSG:25831\"&gt;EPSG:25831&lt;/option&gt;\n                            &lt;option value=\"EPSG:23031\"&gt;EPSG:23031&lt;/option&gt;\n                        &lt;/select&gt;\n                    &lt;/td&gt;\n                &lt;/tr&gt;\n                &lt;tr&gt;\n                    &lt;td&gt;&lt;label for=\"lat\"&gt;Latitud&lt;/label&gt;&lt;/td&gt;\n                    &lt;td&gt;&lt;label for=\"lng\"&gt;Longitud&lt;/label&gt;&lt;/td&gt;\n                    &lt;td colspan=\"2\"&gt;&lt;/td&gt;\n                &lt;/tr&gt;\n                &lt;tr&gt;\n                    &lt;td&gt;&lt;input type=\"text\" id=\"lat\"&gt;&lt;/td&gt;\n                    &lt;td&gt;&lt;input type=\"text\" id=\"lng\"&gt;&lt;/td&gt;\n                    &lt;td colspan=\"2\"&gt;&lt;/td&gt;\n                &lt;/tr&gt;\n                &lt;tr&gt;\n                    &lt;td colspan=\"4\"&gt;&lt;button class=\"btn-tranformar\"&gt;Transformar coordenadas&lt;/button&gt;&lt;/td&gt;\n                &lt;/tr&gt;\n            &lt;/table&gt;\n        &lt;/div&gt;\n        &lt;aside&gt;\n            &lt;ul&gt;\n                &lt;li&gt;&lt;a href=\"https://epsg.io/4326\" title=\"WGS 84 -- WGS84 - World Geodetic System 1984, used in GPS\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;EPSG:4326&lt;/a&gt;&lt;/li&gt;\n                &lt;li&gt;EPSG:3857&lt;/li&gt;\n                &lt;li&gt;EPSG:25831&lt;/li&gt;\n                &lt;li&gt;EPSG:23031&lt;/li&gt;\n            &lt;/ul&gt;\n        &lt;/aside&gt;\n    &lt;/main&gt;\n    &lt;footer&gt;\u00a9Copyright 2020 de nadie. Ning\u00fan derecho reservado.&lt;/footer&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> </li> <li> <p>Modificar el archivo estilos.css para aplicar estilo al bot\u00f3n</p> <pre><code>:root {\n    --light-blue: #8ecae6ff;\n    --blue-green: #219ebcff;\n    --prussian-blue: #023047ff;\n    --honey-yellow: #ffb703ff;\n    --orange: #fb8500ff;\n}\n\nhtml {\n    font-family: \"Roboto\", sans-serif;\n}\n\nheader {\n    background-color: var(--light-blue);\n}\n\nheader &gt; h1 {\n    color: var(--prussian-blue);\n}\n\nfooter {\n    color: var(--blue-green);\n}\n\n#origen, #destino {\n    color: var(--orange);\n}\n\naside &gt; ul &gt; li {\n    color: var(--honey-yellow);\n}\n\n.btn-tranformar {\n    background-color: var(--orange);\n    color: var(--prussian-blue);\n} \n</code></pre> </li> <li> <p>Guardar el archivo y recargar la p\u00e1gina en nuestro navegador para ver el cambio de estilo en el bot\u00f3n.</p> </li> </ol>"},{"location":"css/#referencias","title":"Referencias","text":"<ol> <li> <p>https://developer.mozilla.org/es/docs/Web/CSS \u21a9</p> </li> <li> <p>https://www.htmlquick.com/es/tutorials/css.html \u21a9</p> </li> </ol>"},{"location":"css_bbox/","title":"CSS el modelo de caja","text":"<p>Todo en CSS tiene una caja alrededor, y comprender estas cajas es clave para poder crear dise\u00f1os con CSS o para alinear elementos con otros elementos. <sup>1</sup></p> <p>Como ya vimos en el apartado de Elementos de bloque vs elementos de l\u00ednea del html existen dos tipos de elementos esto es debido a los tipos de caja que se aplican por defecto a los elementos. Hay dos tipos de cajas: cajas en bloque y cajas en l\u00ednea. Estas caracter\u00edsticas se refieren al modo como se comporta la caja en t\u00e9rminos de flujo de p\u00e1gina y en relaci\u00f3n con otras cajas de la p\u00e1gina.</p> <p>El tipo de caja que se aplica a un elemento est\u00e1 definido por los valores de propiedad display, como por ejemplo block y inline</p> <p>Las cajas en CSS tienen un tipo de visualizaci\u00f3n externa, que define si se trata de una caja en bloque o en l\u00ednea. Sin embargo, las cajas tambi\u00e9n tienen un tipo de visualizaci\u00f3n interna, que determina c\u00f3mo se disponen los elementos dentro de esa caja. Por defecto los elementos dentro de una caja se presentan en flujo normal, lo que significa que se comportan como otros elementos de tipo en bloque o en l\u00ednea.</p> <p>Sin embargo, podemos cambiar el tipo de visualizaci\u00f3n interna utilizando valores de display, como flex o grid (que veremos m\u00e1s adelante). Por ejemplo si en un elemento establecemos display: flex;, el tipo de visualizaci\u00f3n externa es de tipo bloque (block), pero el tipo de visualizaci\u00f3n interna cambia a flexible (flex). Cualquier elemento que sea hijo directo de esta caja pasar\u00e1 a comportarse como un elemento de tipo flex, de acuerdo con las reglas que se establecen en la especificaci\u00f3n de Flexbox.</p> <p>Ejemplo</p> <pre><code>* {\n    border: 1px solid red;\n}\n\np, \nul {\n  border: 2px solid rebeccapurple;\n  padding: .5em;\n}\n\n.block,\nli {\n  border: 2px solid blue;\n  padding: .5em;\n}\n\nul {\n  display: flex;\n  list-style: none;\n}\n\n.block {\n  display: block;\n}  \n</code></pre> <pre><code>&lt;p&gt;Soy un p\u00e1rrafo.&lt;/p&gt;\n&lt;ul&gt;\n  &lt;li&gt;Item One&lt;/li&gt;\n  &lt;li&gt;Item Two&lt;/li&gt;\n  &lt;li&gt;Item Three&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;Otro p\u00e1rrafo. Algunas &lt;span class=\"block\"&gt;palabras&lt;/span&gt; est\u00e1n contenidas en &lt;span&gt;elementos de tipo span&lt;/span&gt; tanto en linea como en bloque.&lt;/p&gt;\n</code></pre> <p>Hay un valor especial de display: inline-block que proporciona un punto medio entre inline y block. Esto es \u00fatil para situaciones en las que no deseas que un elemento fuerce un salto de l\u00ednea, pero s\u00ed deseas que se respeten las propiedades width y height para evitar superposiciones. Esto puede ser \u00fatil cuando deseas dar a un enlace un \u00e1rea de impacto m\u00e1s grande a\u00f1adiendo padding. <code>&lt;a&gt;</code> es un elemento en l\u00ednea como <code>&lt;span&gt;</code>; puedes usar display: inline-block para configurar el \u00e1rea de relleno para facilitar al usuario hacer clic en el enlace.</p>"},{"location":"css_bbox/#partes-de-una-caja","title":"Partes de una caja","text":"<ul> <li>Contenido de la caja: (o content box): El \u00e1rea donde se muestra el contenido, cuyo tama\u00f1o puede cambiarse utilizando propiedades como width y height.</li> <li>Relleno de la caja: (o padding box): El relleno es espacio en blanco alrededor del contenido; es posible controlar su tama\u00f1o usando la propiedad padding y otras propiedades relacionadas.</li> <li>Borde de la caja: o border box): El borde de la caja envuelve el contenido y el de relleno. Es posible controlar su tama\u00f1o y estilo utilizando la propiedad border y otras propiedades relacionadas.</li> <li>Margen de la caja: (o margin box): El margen es la capa m\u00e1s externa. Envuelve el contenido, el relleno y el borde como espacio en blanco entre la caja y otros elementos. Es posible controlar su tama\u00f1o usando la propiedad margin y otras propiedades relacionadas.</li> </ul>"},{"location":"css_bbox/#el-modelo-de-cajas-estandar","title":"El modelo de cajas est\u00e1ndar","text":"<p>En el modelo de cajas est\u00e1ndar, cuando estableces los atributos width y height para una caja, defines el ancho y el alto del contenido de la caja. Cualquier \u00e1rea de relleno y borde se a\u00f1ade a ese ancho y alto para obtener el tama\u00f1o total que ocupa la caja.</p> <p>Ejemplo</p> <pre><code>.box {\n  width: 350px;\n  height: 150px;\n  margin: 10px;\n  padding: 25px;\n  border: 5px solid black;\n}\n</code></pre> <p>El espacio que ocupa nuestra caja usando el modelo de cajas est\u00e1ndar ser\u00e1 en realidad de 410 px (350 + 25 + 25 + 5 + 5); y su altura, de 210 px (150 + 25 + 25 + 5 + 5), porque el \u00e1rea de relleno y el borde se a\u00f1aden al ancho que se utiliza para el contenido de la caja.</p> <p></p>"},{"location":"css_bbox/#el-modelo-de-cajas-alternativo","title":"El modelo de cajas alternativo","text":"<p>Podr\u00edas pensar que es m\u00e1s bien inc\u00f3modo tener que sumar el borde y el \u00e1rea de relleno para obtener el tama\u00f1o real de la caja, \u00a1y tienes raz\u00f3n! Por este motivo, CSS introdujo un modelo de caja alternativo alg\u00fan tiempo despu\u00e9s del modelo de cajas est\u00e1ndar. Con este modelo, cualquier ancho es el ancho de la caja visible en la p\u00e1gina, por lo tanto, el ancho del \u00e1rea de contenido es ese ancho menos el ancho para el relleno y el borde. El mismo CSS que hemos usado antes dar\u00eda entonces el resultado siguiente (ancho = 350 px, altura = 150 px).</p> <p></p> <p>Por defecto, los navegadores usan el modelo de cajas est\u00e1ndar. Si deseas activar el modelo de cajas alternativo para un elemento, hazlo configurando box-sizing: border-box.</p> <p>Ejemplo</p> <pre><code>.box {\n  box-sizing: border-box;\n  width: 350px;\n  height: 150px;\n  margin: 10px;\n  padding: 25px;\n  border: 5px solid black;\n}\n</code></pre> <p>Si quieres que todos tus elementos usen el modelo de cajas alternativo (opci\u00f3n com\u00fan entre los desarrolladores) debes establecer la propiedad box-sizing en el elemento <code>&lt;html&gt;</code>. Luego debes configurar todos los dem\u00e1s elementos para que hereden ese valor, como se ve en el fragmento de c\u00f3digo siguiente.</p> <p>Ejemplo</p> <pre><code>html {\n  box-sizing: border-box;\n}\n*, *::before, *::after {\n  box-sizing: inherit;\n}\n</code></pre>"},{"location":"css_bbox/#margenes-rellenos-y-bordes","title":"M\u00e1rgenes, rellenos y bordes","text":""},{"location":"css_bbox/#margen","title":"Margen","text":"<p>El margen es un espacio invisible que hay alrededor de la caja. Aleja el resto de elementos de la caja. Los m\u00e1rgenes pueden tener valores positivos o negativos. Establecer un margen negativo para un lado de tu caja puede hacer que se superponga con otros elementos de la p\u00e1gina. Tanto si utilizas el modelo de cajas est\u00e1ndar como el alternativo, el margen siempre se a\u00f1ade despu\u00e9s de haber calculado el tama\u00f1o de la caja que se ve.</p> <p>Podemos controlar todos los m\u00e1rgenes de un elemento a la vez usando la propiedad margin, o cada lado individualmente usando las propiedades equivalentes sin abreviar: margin-top, margin-right, margin-bottom y margin-left.</p> <p>Un punto clave a la hora de entender los m\u00e1rgenes es el concepto de colapso del margen. Si tienes dos elementos cuyos m\u00e1rgenes se tocan, esos m\u00e1rgenes se combinan para convertirse en un solo margen, cuyo tama\u00f1o es el del margen m\u00e1s grande.</p>"},{"location":"css_bbox/#bordes","title":"Bordes","text":"<p>El borde se dibuja entre el margen y el \u00e1rea de relleno de una caja. Si utilizas el modelo de cajas est\u00e1ndar, el tama\u00f1o del borde se a\u00f1ade a los elementos width y height que establecen el alto y el ancho de la caja. Si utilizas el modelo de cajas alternativo, el tama\u00f1o del borde reduce el tama\u00f1o de la caja de contenido, porque ocupa una parte del alto y el ancho disponibles.</p> <p>Al igual que el margen puedes establecer el ancho, el estilo o el color de los cuatro bordes a la vez utilizando la propiedad border o cada lado de forma individual.</p> <p>Para establecer el ancho, el estilo o el color de todos los lados, usa lo siguiente: border-width, border-style o border-color. Esta propiedades tambi\u00e9n se pueden aplicar de forma individual para cada lado. Ejemplos: border-top-width, border-right-style y border-bottom-color</p> <p>Se puede establecer el ancho, el estilo y el color de forma abreviada al borde combinandolos en una sola propiedad:</p> <p>Ejemplo</p> <pre><code>.container {\n  border-top: 5px dotted green;\n  border-right: 1px solid black;\n  border-bottom: 20px double rgb(23,45,145);\n}\n\n.box {\n  border: 1px solid #333333;\n}\n</code></pre> <p>El redondeo de esquinas en una caja se logra mediante el uso de la propiedad border-radius y otras propiedades asociadas que se relacionan con cada esquina de la caja. Como valor pueden usarse dos longitudes o porcentajes: el primer valor define el radio horizontal y el segundo el radio vertical. En muchos casos, solo se pondr\u00e1 un valor, que se utilizar\u00e1 para ambos.</p> <pre><code>.box { \n  border-radius: 10px; \n}\n</code></pre> <ol> <li> <p>Modificar el archivo estilos.css para agregar un borde al elemento aside</p> <pre><code>:root {\n    --light-blue: #8ecae6ff;\n    --blue-green: #219ebcff;\n    --prussian-blue: #023047ff;\n    --honey-yellow: #ffb703ff;\n    --orange: #fb8500ff;\n}\n\nhtml {\n    font-family: \"Roboto\", sans-serif;\n}\n\nheader {\n    background-color: var(--light-blue);\n}\n\nheader &gt; h1 {\n    color: var(--prussian-blue);\n}\n\nfooter {\n    color: var(--blue-green);\n}\n\n#origen, #destino {\n    color: var(--orange);\n}\n\naside {\n    border-left: 2px solid var(--prussian-blue);\n}\n\naside &gt; ul &gt; li {\n    color: var(--honey-yellow);\n}\n\n.btn-tranformar {\n    background-color: var(--orange);\n    color: var(--prussian-blue);\n}\n</code></pre> </li> <li> <p>Guardar y recargar la p\u00e1gina para ver los cambios.</p> </li> </ol>"},{"location":"css_bbox/#relleno","title":"Relleno","text":"<p>El relleno se encuentra entre el borde y el \u00e1rea de contenido. A diferencia de los m\u00e1rgenes, el relleno no puede tomar valores negativos, por lo que el valor debe ser 0 o positivo. Cualquier fondo aplicado a tu elemento se mostrar\u00e1 detr\u00e1s del \u00e1rea de relleno y, generalmente, se usa para mantener el contenido alejado del borde.</p> <p>Podemos controlar el \u00e1rea de relleno para todos los lados de un mismo elemento usando la propiedad padding, o para cada lado uno de los lados usando las propiedades equivalentes.</p>"},{"location":"css_bbox/#desbordamiento","title":"Desbordamiento","text":"<p>Ya sabemos que todo en CSS est\u00e1 dentro de una caja, y que podemos restringir el tama\u00f1o de estas cajas asign\u00e1ndoles los valores width y height. El desbordamiento es lo que sucede cuando hay demasiado contenido en una caja, y no cabe c\u00f3modamente en ella.</p> <p>El CSS trata de evitar \u00abla p\u00e9rdida de datos\u00bb. Siempre que sea posible, el CSS no oculta su contenido; hacerlo provocar\u00eda la p\u00e9rdida de datos, que generalmente es un problema. As\u00ed que, en vez de esto, el CSS tiende a desbordarse de un modo que sea visible.</p> <p>La propiedad overflow es el modo como tomas el control del desbordamiento de un elemento y le dices al navegador c\u00f3mo desea que se comporte. El valor predeterminado para la propiedad overflow es visible, por lo que, de forma predeterminada vamos a poder ver cu\u00e1ndo se desborda nuestro contenido.</p> <p>Si deseas cortar el contenido (ocultar el desbordamiento) cuando se desborda, puedes establecer el valor overflow: hidden en tu caja. Si deseas que aparezcan barras de desplazamiento solo si hay m\u00e1s contenido del que cabe en la caja, utiliza overflow: auto.</p>"},{"location":"css_bbox/#fondos","title":"Fondos","text":"<p>La propiedad background de CSS es una propiedad abreviada de una serie de propiedades de fondo que vamos a ver a continuaci\u00f3n. Si descubres una propiedad de fondo compleja en una hoja de estilo, puede parecer un poco dif\u00edcil de entender porque pueden estarse pasando muchos valores a la vez.</p> <p>Ejemplo</p> <pre><code>.box { \n  background: linear-gradient(105deg, rgba(255,255,255,.2) 39%, rgba(51,56,57,1) 96%) center center / 400px 200px no-repeat, url(big-star.png) center no-repeat, rebeccapurple; \n} \n</code></pre> <p>Demos un vistazo a las diferentes cosas que puedes hacer con los fondos en CSS, a partir de observar las propiedades de fondo individuales.</p>"},{"location":"css_bbox/#colores-de-fondo","title":"Colores de fondo","text":"<p>La propiedad background-color define el color de fondo de cualquier elemento en CSS. La propiedad admite cualquier color v\u00e1lido. Un color de fondo se extiende por debajo del contenido y el relleno del elemento.</p> <p>Ejemplo</p> <pre><code>.box {\n  background-color: #567895;\n}\n\nh2 {\n  background-color: black;\n  color: white;\n}\nspan {\n  background-color: rgba(255,255,255,.5);\n}\n</code></pre> <pre><code>&lt;div class=\"box\"&gt;\n  &lt;h2&gt;Titulo con color de fondo&lt;/h2&gt;\n  &lt;p&gt;Cambiar el &lt;span&gt;color&lt;/span&gt; de fondo.&lt;/p&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"css_bbox/#imagenes-de-fondo","title":"Im\u00e1genes de fondo","text":"<p>La propiedad background-image permite visualizar una imagen de fondo en un elemento. De forma predeterminada, si la imagen es mas grande que la caja que la contiene no se reduce para ajustarse a la caja, por lo que solo vemos una parte de esta, mientras que una imagen mas peque\u00f1a que la caja que la contiene aparece repetida en forma de mosaico hasta llenar la caja.</p> <pre><code>.box {\n  width: 200px;\n  height: 60px;\n} \n\n.a {\n  background-image: url(https://mdn.github.io/css-examples/learn/backgrounds-borders/balloons.jpg);\n}\n\n.b {\n  background-image: url(https://mdn.github.io/css-examples/learn/backgrounds-borders/star.png);\n}\n</code></pre> <pre><code>&lt;div class=\"wrapper\"&gt;\n  &lt;div class=\"box a\"&gt;&lt;/div&gt;\n  &lt;div class=\"box b\"&gt;&lt;/div&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"css_bbox/#controlar-el-comportamiento-de-la-imagen-de-fondo","title":"Controlar el comportamiento de la imagen de fondo","text":"<p>La propiedad background-repeat se usa para controlar el comportamiento de tipo mosaico de las im\u00e1genes. Los valores disponibles son:</p> <ul> <li>no-repeat: evita que el fondo se repita.</li> <li>repeat-x: repite horizontalmente.</li> <li>repeat-y: repite verticalmente.</li> <li>repeat: es el valor por defecto; repite en ambas direcciones.</li> </ul> <pre><code>.b {\n  background-image: url(https://mdn.github.io/css-examples/learn/backgrounds-borders/star.png);\n  background-repeat: no-repeat;\n}\n</code></pre>"},{"location":"css_bbox/#dimensionar-la-imagen-de-fondo","title":"Dimensionar la imagen de fondo","text":"<p>La propiedad background-size, que puede tomar valores de longitud o porcentaje, para ajustar el tama\u00f1o de la imagen para que quepa dentro del fondo.</p> <p>Tambi\u00e9n puedes utilizar palabras clave:</p> <ul> <li>cover: el navegador agrandar\u00e1 la imagen lo suficientemente grande como para que esta cubra por completo el \u00e1rea de la caja sin que pierda su relaci\u00f3n de aspecto. En este caso, es probable que parte de la imagen quede fuera de la caja.</li> <li>contain: el navegador adecuar\u00e1 el tama\u00f1o de la imagen para que quepa dentro de la caja. En este caso, pueden quedar huecos a ambos lados o en la parte superior e inferior de la imagen si la relaci\u00f3n de aspecto de la imagen es diferente de la de la caja.</li> </ul> <pre><code>.a {\n  background-image: url(https://mdn.github.io/css-examples/learn/backgrounds-borders/balloons.jpg);\n  background-size: cover;\n}\n</code></pre>"},{"location":"css_bbox/#posicionar-la-imagen-de-fondo","title":"Posicionar la imagen de fondo","text":"<p>La propiedad background-position te permite elegir la posici\u00f3n en la que aparece la imagen de fondo dentro de la caja a la que est\u00e1 asociada. Para ello se utiliza un sistema de coordenadas en el que la esquina superior izquierda de la caja es (0,0) valor por defecto, y la caja se coloca sobre los ejes horizontal (x) y vertical (y).</p> <p>Como valores puedes usar palabras clave como top y right y tambi\u00e9n longitudes y porcentajes o una combinaci\u00f3n de ambos</p> <pre><code>.b {\n  background-image: url(https://mdn.github.io/css-examples/learn/backgrounds-borders/star.png);\n  background-repeat: no-repeat;\n  background-position: center 20px;\n}\n</code></pre> <p>Por \u00faltimo, tambi\u00e9n puedes usar una sintaxis de 4 valores para indicar una distancia desde ciertos bordes del cuadro: la unidad de longitud en este caso es un desplazamiento del valor que la precede. Entonces, en el CSS siguiente, colocamos el fondo a 20 px desde la parte superior y a 10 px desde la derecha</p> <pre><code>.b {\n  background-image: url(https://mdn.github.io/css-examples/learn/backgrounds-borders/star.png);\n  background-repeat: no-repeat;\n  background-position: top 20px right 10px;\n}\n</code></pre>"},{"location":"css_bbox/#multiples-imagenes-de-fondo","title":"M\u00faltiples im\u00e1genes de fondo","text":"<p>Tambi\u00e9n es posible poner m\u00faltiples im\u00e1genes de fondo: puedes especificar m\u00faltiples valores background-image para un solo atributo, separados cada uno por una coma.</p> <p>Si haces esto, las im\u00e1genes de fondo pueden quedar superpuestas entre s\u00ed. Los fondos se superponen con la \u00faltima imagen de fondo que hay en la parte inferior de la lista, y cada imagen anterior se apila encima de la que sigue en el c\u00f3digo.</p> <p>Las otras propiedades background-* tambi\u00e9n pueden tener valores m\u00faltiples separados por comas, de la misma manera que background-image</p> <pre><code>background-image: url(image1.png), url(image2.png), url(image3.png), url(image1.png);\nbackground-repeat: no-repeat, repeat-x, repeat;\nbackground-position: 10px 20px,  top right;\n</code></pre> <p>Ejemplo </p> <pre><code>.b {\n  background-image: url(https://mdn.github.io/css-examples/learn/backgrounds-borders/star.png), url(https://mdn.github.io/css-examples/learn/backgrounds-borders/big-star.png);\n   background-repeat: no-repeat, repeat-x;\n  background-position: top 20px right 10px, center center;\n}\n</code></pre>"},{"location":"css_bbox/#degradados-de-fondo","title":"Degradados de fondo","text":"<p>Un degradado, cuando se usa para un fondo, act\u00faa como una imagen y tambi\u00e9n se establece usando la propiedad background-image.</p> <pre><code>.a {\n  background-image: linear-gradient(105deg, rgba(0,249,255,1) 39%, rgba(51,56,57,1) 96%);\n}\n\n.b {\n  background-image: radial-gradient(circle, rgba(0,249,255,1) 39%, rgba(51,56,57,1) 96%);\n  background-size: 100px 50px;\n}\n</code></pre>"},{"location":"css_bbox/#referencias","title":"Referencias","text":"<ol> <li> <p>https://developer.mozilla.org/es/docs/Learn/CSS/Building_blocks/El_modelo_de_caja \u21a9</p> </li> </ol>"},{"location":"css_diseno/","title":"Dise\u00f1o CSS","text":"<p>Hasta el momneto hemos visto los fundamentos b\u00e1sicos de CSS: c\u00f3mo dar estilo al texto, c\u00f3mo manipular las cajas que incluyen tu contenido, etc. Ahora vamos a explorar c\u00f3mo colocar tus cajas en el lugar que elijas con respecto a la ventana principal y el resto de cajas.</p> <p>En CSS existen diferentes t\u00e9cnicas b\u00e1sicas de maquetaci\u00f3n que veremos a continuaci\u00f3n</p>"},{"location":"css_diseno/#normal-flow","title":"Normal flow","text":"<p>Los elementos en las p\u00e1ginas web se presentan de acuerdo con el flujo normal, hasta que hacemos algo que cambie eso.</p> <p>En primer lugar, se toma de las cajas de cada uno de los elementos el contenido, luego se a\u00f1ade cualquier \u00e1rea de relleno, borde y margen alrededor de ellas; es el modelo de cajas que hemos visto antes.</p> <p>De manera predeterminada, el contenido de un elemento de nivel de bloque es el 100% del ancho de su elemento padre y su altura viene determinada por su contenido. Los elementos en l\u00ednea tienen su altura y anchura determinados por su contenido.</p>"},{"location":"css_diseno/#posicionamiento","title":"Posicionamiento","text":"<p>El posicionamiento permite sacar elementos del flujo normal del dise\u00f1o del documento, y hacer que se comporten de manera distinta, por ejemplo sentarse encima de otro o permanecer en el mismo lugar dentro de la ventana navegador. Veremos los diferentes valores position, y como usarlos.</p> <ul> <li>Posicionamiento normal o est\u00e1tico (position: static;): se trata del posicionamiento que utilizan los navegadores si no se indica lo contrario.</li> <li> <p>Posicionamiento relativo (position: relative;): variante del posicionamiento normal que consiste en posicionar una caja seg\u00fan el posicionamiento normal y despu\u00e9s desplazarla respecto de su posici\u00f3n original.</p> <p></p> </li> <li> <p>Posicionamiento absoluto (position: absolute;): la posici\u00f3n de una caja se establece de forma absoluta respecto de su elemento contenedor y el resto de elementos de la p\u00e1gina ignoran la nueva posici\u00f3n del elemento.</p> <p></p> </li> <li> <p>Posicionamiento fijo (position: fixed;): variante del posicionamiento absoluto que convierte una caja en un elemento inamovible, de forma que su posici\u00f3n en la pantalla siempre es la misma independientemente del resto de elementos e independientemente de si el usuario sube o baja la p\u00e1gina en la ventana del navegador.</p> </li> </ul> <p>La propiedad position s\u00f3lo indica c\u00f3mo se posiciona una caja, pero no la desplaza.</p> <p>Normalmente, cuando se posiciona una caja tambi\u00e9n es necesario desplazarla respecto de su posici\u00f3n original o respecto de otro origen de coordenadas. CSS define cuatro propiedades llamadas top, right, bottom y left para controlar el desplazamiento de las cajas posicionadas.</p>"},{"location":"css_diseno/#floats","title":"Floats","text":"<p>La propiedad float fue introducida para permitir a los desarrolladores implementar dise\u00f1os sencillos que incluyeran una imagen flotando dentro de una columna de texto, con el texto envolviendo la parte izquierda o derecha de la imagen. El tipo de cosa que encuentras habitualmente en el dise\u00f1o de un peri\u00f3dico. <sup>1</sup></p> <p>Pero los desarrolladores web pronto se dieron cuenta de que pod\u00edan flotar cualquier cosa, no solo im\u00e1genes, por lo que su uso se extendi\u00f3.</p> <p>Los elementos flotantes han sido usados com\u00fanmente para crear dise\u00f1os web completos con m\u00faltiples columnas situadas unas al lado de las otras (el comportamiento por defecto ser\u00eda que las columnas se situaran unas debajo de las otras, en el mismo orden en el que aparecen en el c\u00f3digo fuente). Ahora hay disponibles t\u00e9cnicas m\u00e1s modernas y mejores, que exploraremos m\u00e1s adelante en este m\u00f3dulo, por lo que el uso de float de este modo deber\u00eda contemplarse como una t\u00e9cnica anticuada.</p> <p>La siguiente imagen muestra el resultado de posicionar de forma flotante hacia la derecha la caja 1: float: right;</p> <p></p> <p>La siguiente imagen muestra el resultado de posicionar de forma flotante hacia la izquierda la caja 1: float: left;. Vemos que la caja 1 tapa a la caja 2.</p> <p></p> <p>La siguiente imagen muestra el resultado de posicionar de forma flotante hacia la izquierda todas las cajas: float: left;</p> <p></p>"},{"location":"css_diseno/#flexbox","title":"Flexbox","text":"<p>Flexbox es un m\u00e9todo de dise\u00f1o de p\u00e1gina unidimensional para compaginar elementos en filas o columnas. Los elementos de contenido se ensanchan para rellenar el espacio adicional y se encogen para caber en espacios m\u00e1s peque\u00f1os.</p> <p>Durante mucho tiempo, las \u00fanicas herramientas fiables con compatibilidad cruzada entre navegadores disponibles para crear dise\u00f1os CSS fueron cosas como la flotaci\u00f3n y el posicionamiento. Est\u00e1n bien y funcionan, pero de alguna manera tambi\u00e9n limitan bastante y frustran.</p> <p>Con tales herramientas resulta dif\u00edcil, si no imposible, lograr obtener en cualquier forma conveniente y flexible un dise\u00f1o de p\u00e1gina sencillo con unos requisitos como los siguientes:</p> <ul> <li>Centrar verticalmente un bloque de contenido dentro de su elemento padre.</li> <li>Hacer que todos los elementos secundarios de un contenedor ocupen una cantidad igual del ancho/alto disponible, independientemente del ancho/alto que haya disponible.</li> <li>Hacer que todas las columnas en una compaginaci\u00f3n en columnas m\u00faltiples adopten la misma altura incluso si contienen cantidades diferentes de contenido.</li> </ul> <p>Para seleccionar qu\u00e9 elementos se van a presentar como cajas flexibles establecemos un valor especial de display en el elemento padre de los elementos que deseas editar.</p> <p>Ejemplo</p> <pre><code>section {\n    display: flex;\n}\n</code></pre> <p>Esto hace que el elemento <code>&lt;section&gt;</code> se convierta en contenedor flex, y sus hijos en elementos flexibles.</p> <p>Para ver m\u00e1s detalles del modelo Flexbox pueden visitar https://developer.mozilla.org/es/docs/Learn/CSS/CSS_layout/Flexbox y https://css-tricks.com/snippets/css/a-guide-to-flexbox/</p> <p>Tambi\u00e9n pod\u00e9is practicar los estilos de flexbox con este juego https://flexboxfroggy.com/ </p>"},{"location":"css_diseno/#grids","title":"Grids","text":"<p>La compaginaci\u00f3n en cuadr\u00edcula con CSS es un m\u00e9todo de dise\u00f1o de p\u00e1ginas web en dos dimensiones. Te permite distribuir el contenido en filas y columnas, y tiene muchas caracter\u00edsticas que facilitan la creaci\u00f3n de dise\u00f1os complejos.</p> <p>Una cuadr\u00edcula es un conjunto de l\u00edneas horizontales y verticales que crean un patr\u00f3n sobre el que podemos alinear nuestros elementos de dise\u00f1o. Las cuadr\u00edculas nos ayudan a crear dise\u00f1os de p\u00e1gina en que los elementos no saltan ni cambian de ancho cuando nos movemos de una p\u00e1gina a otra, y as\u00ed proporcionan a nuestras p\u00e1ginas web un aspecto m\u00e1s coherente.</p> <p>Una cuadr\u00edcula en general tiene columnas, filas y luego espacios entre cada fila y cada columna, conocidos com\u00fanmente como canales.</p> <p>Para definir una cuadr\u00edcula utilizamos el valor grid de la propiedad display. Al igual que con el m\u00e9todo Flexbox, esto activa la compaginaci\u00f3n de cuadr\u00edcula y todos los elementos que son hijos directos del contenedor se convierten en elementos de cuadr\u00edcula.</p> <p>A diferencia del m\u00e9todo Flexbox, los elementos no se ven diferentes inmediatamente. La declaraci\u00f3n display: grid; te proporciona una cuadr\u00edcula de una sola columna, por lo que tus elementos contin\u00faan mostr\u00e1ndose uno debajo del otro, como lo hacen en el flujo normal.</p> <p>Para ver algo que se parezca m\u00e1s a una cuadr\u00edcula, necesitamos a\u00f1adir columnas a la cuadr\u00edcula. Para ello usamos el grid-template-columns</p> <pre><code>.container {\n    display: grid;\n    grid-template-columns: 200px 200px 200px;\n}\n</code></pre> <p>Para ver m\u00e1s detalle del modelo de Grid visitar https://developer.mozilla.org/es/docs/Learn/CSS/CSS_layout/Grids y https://css-tricks.com/snippets/css/complete-guide-grid/</p> <p>Tambi\u00e9n pod\u00e9is practicar los estilos de Grid con este juego https://cssgridgarden.com/</p>"},{"location":"css_diseno/#ejemplos-de-disenos-layouts","title":"Ejemplos de dise\u00f1os (Layouts)","text":"<p>https://1linelayouts.glitch.me/</p>"},{"location":"css_diseno/#maquetar-nuestra-calculadora-usando-flexbox","title":"Maquetar nuestra calculadora usando flexbox","text":"<ol> <li> <p>Modificar el archivo estilo.css para agregar el modelo de flexbox</p> <pre><code>:root {\n    --light-blue: #8ecae6ff;\n    --blue-green: #219ebcff;\n    --prussian-blue: #023047ff;\n    --honey-yellow: #ffb703ff;\n    --orange: #fb8500ff;\n}\n\nhtml {\n    font-family: \"Roboto\", sans-serif;\n}\n\nhtml, body {\n    height: 100%;\n    width: 100%;\n    padding: 0;\n    margin: 0;\n}\n\nbody {\n    display: flex;\n    flex-direction: column;\n}\n\nheader {\n    background-color: var(--light-blue);\n}\n\nheader &gt; h1 {\n    color: var(--prussian-blue);\n}\n\nfooter {\n    color: var(--blue-green);\n}\n\n#origen, #destino {\n    color: var(--orange);\n}\n\naside {\n    border-left: 2px solid var(--prussian-blue);\n}\n\naside &gt; ul &gt; li {\n    color: var(--honey-yellow);\n}\n\n.btn-tranformar {\n    background-color: var(--orange);\n    color: var(--prussian-blue);\n}\n</code></pre> </li> <li> <p>Modificar el estilo del elemento header para que el titulo aparezca junto a la imagen</p> <pre><code>:root {\n    --light-blue: #8ecae6ff;\n    --blue-green: #219ebcff;\n    --prussian-blue: #023047ff;\n    --honey-yellow: #ffb703ff;\n    --orange: #fb8500ff;\n}\n\nhtml {\n    font-family: \"Roboto\", sans-serif;\n}\n\nhtml, body {\n    height: 100%;\n    width: 100%;\n    padding: 0;\n    margin: 0;\n}\n\nbody {\n    display: flex;\n    flex-direction: column;\n}\n\nheader {\n    display: flex;\n    background-color: var(--light-blue);\n}\n\nheader &gt; h1 {\n    color: var(--prussian-blue);\n}\n\nfooter {\n    color: var(--blue-green);\n}\n\n#origen, #destino {\n    color: var(--orange);\n}\n\naside {\n    border-left: 2px solid var(--prussian-blue);\n}\n\naside &gt; ul &gt; li {\n    color: var(--honey-yellow);\n}\n\n.btn-tranformar {\n    background-color: var(--orange);\n    color: var(--prussian-blue);\n}\n</code></pre> </li> <li> <p>Agregar el estilo al elemento main</p> <pre><code>:root {\n    --light-blue: #8ecae6ff;\n    --blue-green: #219ebcff;\n    --prussian-blue: #023047ff;\n    --honey-yellow: #ffb703ff;\n    --orange: #fb8500ff;\n}\n\nhtml {\n    font-family: \"Roboto\", sans-serif;\n}\n\nhtml, body {\n    height: 100%;\n    width: 100%;\n    padding: 0;\n    margin: 0;\n}\n\nbody {\n    display: flex;\n    flex-direction: column;\n}\n\nheader {\n    display: flex;\n    background-color: var(--light-blue);\n}\n\nheader &gt; h1 {\n    color: var(--prussian-blue);\n}\n\nfooter {\n    color: var(--blue-green);\n}\n\nmain {\n    display: flex;\n    flex: auto;\n}\n\nmain &gt; div {\n    flex: auto;\n}\n\n#origen, #destino {\n    color: var(--orange);\n}\n\naside {\n    border-left: 2px solid var(--prussian-blue);\n}\n\naside &gt; ul &gt; li {\n    color: var(--honey-yellow);\n}\n\n.btn-tranformar {\n    background-color: var(--orange);\n    color: var(--prussian-blue);\n}\n</code></pre> </li> <li> <p>Modificar el elemento aside para que aparezca junto al main</p> <p><pre><code>:root {\n    --light-blue: #8ecae6ff;\n    --blue-green: #219ebcff;\n    --prussian-blue: #023047ff;\n    --honey-yellow: #ffb703ff;\n    --orange: #fb8500ff;\n}\n\nhtml {\n    font-family: \"Roboto\", sans-serif;\n}\n\nhtml, body {\n    height: 100%;\n    width: 100%;\n    padding: 0;\n    margin: 0;\n}\n\nbody {\n    display: flex;\n    flex-direction: column;\n}\n\nheader {\n    display: flex;\n    background-color: var(--light-blue);\n}\n\nheader &gt; h1 {\n    color: var(--prussian-blue);\n}\n\nfooter {\n    color: var(--blue-green);\n}\n\nmain {\n    display: flex;\n    flex: auto;\n}\n\nmain &gt; div {\n    flex: auto;\n}\n\n#origen, #destino {\n    color: var(--orange);\n}\n\naside {\n    min-width: 150px;\n    flex: 1;\n    border-left: 2px solid var(--prussian-blue);\n}\n\naside &gt; ul &gt; li {\n    color: var(--honey-yellow);\n}\n\n.btn-tranformar {\n    background-color: var(--orange);\n    color: var(--prussian-blue);\n}\n</code></pre> 5. Guardar y recargar la p\u00e1gina para ver los cambios.</p> </li> </ol> <p>Ejercicio 3 pt</p> <ol> <li>Agregar un class al bot\u00f3n Enviar resultado creado en el ejercicio anterior y dar estilo al bot\u00f3n. 0.5 pt.</li> <li>Centrar horizontalmente el texto del elemento footer 0.5 pt.</li> <li>Eliminar el subrayado de los enlaces del listado de definiciciones de los diferentes EPSG 0.5 pt.</li> <li>Modificar el estilo del elemento header para que el texto del titulo quede alineado verticalmente en el centro de su contenedor 0.5 pt. Ayuda usar la propiedad align-items</li> <li>Modificar el estlio del elemento header para que la imagen y el titulo queden distribuidos de igual forma detro de su contenedor 0.5 pt. Ayuda usar la propiedad justify-content</li> <li>Modificar el estilo de la tabla para que los elementos se vean m\u00e1s ordenados dentro de la p\u00e1gina. Algunas ideas: centrar la tabla, dar mas espacio entre los elementos, agregar un estilo de borde para separar los elementos de la columna de origen de los de la columna de destino, etc. 0.5 pt.</li> </ol> <p>El resultado debe ser algo como esto </p>"},{"location":"css_diseno/#recursos","title":"Recursos","text":"<ul> <li>https://github.com/eludadev/css-docs</li> <li>https://layout.bradwoods.io/customize</li> <li>https://internetingishard.netlify.app/</li> </ul>"},{"location":"css_diseno/#referencias","title":"Referencias","text":"<ol> <li> <p>https://developer.mozilla.org/es/docs/Learn/CSS/CSS_layout \u21a9</p> </li> </ol>"},{"location":"elementos_html/","title":"Elementos HTML","text":""},{"location":"elementos_html/#head","title":"head","text":"<p>El elemento HTML <code>&lt;head&gt;</code> provee informaci\u00f3n general (metadatos) acerca del documento, incluyendo su t\u00edtulo y enlaces a scripts y hojas de estilos. <sup>1</sup></p> <p>Es la cabecera y actua como contenedor para todos los par\u00e1metros que quieras incluir en el documento HTML que no ser\u00e1n visibles a los visitantes de la p\u00e1gina. Incluye cosas como palabras clave y la descripci\u00f3n de la p\u00e1gina que quieras mostrar en los resultados de b\u00fasqueda, as\u00ed como la hoja de estilo para formatear nuestro contenido, declaraciones de codificaci\u00f3n de caracteres y m\u00e1s.</p> <p>Algunos elementos que deber\u00edan estar presentes en la cabecera </p>"},{"location":"elementos_html/#title","title":"title","text":"<p>El elemento <code>&lt;title&gt;</code> se usa para poner el t\u00edtulo a la p\u00e1gina. Es lo que aparece en la barra del navegador</p>"},{"location":"elementos_html/#metadatos","title":"metadatos","text":"<p>Los metadatos son los datos que describen la p\u00e1gina. HTML tiene una forma \"oficial\" para introducir metadatos y para ello se usa el elemento <code>&lt;meta&gt;</code>. Hay muchos tipos diferentes de <code>&lt;meta&gt;</code> que se pueden incluir en el <code>&lt;head&gt;</code> de una p\u00e1gina.</p> <p>A continuaci\u00f3n veremos algunos de los <code>&lt;meta&gt;</code> m\u00e1s usados</p>"},{"location":"elementos_html/#codificacion-de-caracteres","title":"Codificaci\u00f3n de caracteres","text":"<p>Especifica especifica la codificaci\u00f3n de caracteres del documento, esto quiere decir el conjuto de car\u00e1cteres que se pueden usar en la p\u00e1gina. Esto es muy \u00fatil e importante para representar correctamente caracteres especiales como los acentos u caracteres de otros idioma. Por ejemplo japon\u00e9s </p> <p>Ejemplo</p> <pre><code>&lt;meta charset=\"utf-8\"&gt;\n</code></pre>"},{"location":"elementos_html/#autor","title":"Autor","text":"<p>Especificar un autor resulta ventajoso por diversos motivos: es \u00fatil saber qui\u00e9n escribi\u00f3 la p\u00e1gina para poder ponerte en contacto con el autor si tienes preguntas sobre el contenido. Algunos sistemas de gesti\u00f3n de contenido tienen herramientas para extraer autom\u00e1ticamente la informaci\u00f3n del autor de la p\u00e1gina y ponerla a disposici\u00f3n para tales fines. <sup>2</sup></p> <p>Ejemplo</p> <pre><code>&lt;meta name=\"author\" content=\"Pepe Perez\"&gt;\n</code></pre>"},{"location":"elementos_html/#descripcion","title":"Descripci\u00f3n","text":"<p>Especificar una descripci\u00f3n que incluya palabras clave relacionadas con el contenido de tu p\u00e1gina resulta \u00fatil porque tiene el potencial de hacer que la p\u00e1gina aparezca m\u00e1s arriba en las b\u00fasquedas relevantes que efect\u00faan los motores de b\u00fasqueda. Mejora el SEO</p> <p>SEO (Search Engine Optimization) tambi\u00e9n conocido como posicionamiento web, es el proceso de hacer un sitio web m\u00e1s visible en los resultados de b\u00fasqueda o mejorar el ranking de b\u00fasqueda.</p> <p>Ejemplo</p> <pre><code>&lt;meta name=\"description\" content=\"El \u00e1rea de aprendizaje de MDN pretende\nproporcionar a los reci\u00e9n llegados a la web todo lo que deben\nsaber para empezar a desarrollar p\u00e1ginas web y aplicaciones web.\"&gt;\n</code></pre>"},{"location":"elementos_html/#viewport","title":"Viewport","text":"<p>El viewport del navegador es el \u00e1rea de la ventana en donde el contenido web est\u00e1 visible. Generalmente no es del mismo tama\u00f1o que la p\u00e1gina renderizada, en donde se brindan barras de desplazamiento para que el usuario pueda acceder a todo el contenido.</p> <p>Dispositivos con pantallas angostas (p.e. m\u00f3viles) muestran la p\u00e1gina en una ventana virtual o viewport, que es usualmente m\u00e1s ancho que la pantalla y la comprimen de manera que pueda verse completa. El usuario podr\u00e1 recorrerla y hacer zoom para ver diferentes \u00e1reas de la p\u00e1gina. Por ejemplo, si una pantalla m\u00f3vil tiene un ancho 640px, las p\u00e1ginas pueden ser procesadas con un viewport de 980px, y despu\u00e9s comprimidas para que entren en 640px.</p> <p>Esto se hace porque muchas p\u00e1ginas no est\u00e1n optimizadas para dispositivos m\u00f3viles y se quiebran (o, al menos, se ven mal) cuando son procesadas a un ancho de viewport peque\u00f1o. El viewport virtual es una forma de resolver el problema de sitios no optimizados para m\u00f3viles, logrando que se vean mejor. <sup>3</sup></p> <p>El uso del viewport f\u00e1cilita el dise\u00f1o responsive de las p\u00e1ginas. </p> <p>La propiedad width controla el tama\u00f1o del viewport. Puede definirse con un n\u00famero en pixeles como width=600 o con un valor especial device-width que es el equivalente al ancho de la pantalla en p\u00edxeles CSS en una escala de 100%. </p> <p>La propiedad initial-scale controla el nivel de zoom cuando la p\u00e1gina se carga por primera vez.</p> <p>Ejemplo</p> <pre><code>&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n</code></pre>"},{"location":"elementos_html/#redes-sociales","title":"Redes sociales","text":"<p>Open Graph Data es un protocolo de metadatos que Facebook invent\u00f3 para proveer metadatos m\u00e1s ricos para los sitios web. Un efecto de esto es que cuando desde Facebook enlazas a una pa\u00e1gina, el enlace aparece con una imagen y una descripci\u00f3n, lo que resulta en una experiencia m\u00e1s enriquecedora para los usuarios.</p> <p>Ejemplo</p> <pre><code>&lt;meta property=\"og:image\" content=\"https://developer.cdn.mozilla.net/static/img/opengraph-logo.dc4e08e2f6af.png\"&gt;\n&lt;meta property=\"og:description\" content=\"The Mozilla Developer Network (MDN) proporciona informaci\u00f3n\nsobre tecnolog\u00edas Open Web, incluidas HTML, CSS y APIs para ambos sitios web\ny aplicaciones HTML5. Tambi\u00e9n documenta productos Mozilla, como el sistema operativo Firefox.\"&gt;\n&lt;meta property=\"og:title\" content=\"Mozilla Developer Network\"&gt;\n</code></pre> <p>Twitter tambi\u00e9n tiene sus metadatos propios, las Twitter Cards, que tienen un efecto similar cuando la URL del sitio se muestra en twitter.com.</p> <p>Ejemplo</p> <pre><code>&lt;meta name=\"twitter:title\" content=\"Mozilla Developer Network\"&gt;\n</code></pre>"},{"location":"elementos_html/#favicon","title":"favicon","text":"<p>Para enriquecer un poco m\u00e1s el dise\u00f1o de tu sitio puedes a\u00f1adir en tus metadatos referencias a iconos personalizados, que se mostrar\u00e1n en determinados contextos. El m\u00e1s com\u00fan de ellos es el favicon (abreviatura de favorite icon \u2014icono favorito, referido al uso que se le da en las listas de favoritos o de marcadores (bookmarks).</p> <p>El humilde favicon ha existido durante muchos a\u00f1os. Es el primer icono de este tipo: un icono cuadrado de 16 p\u00edxeles que se utiliza en varios lugares. Es posible que veas (seg\u00fan el navegador) favicons que se muestran en la pesta\u00f1a del navegador que contiene cada p\u00e1gina abierta y junto a las p\u00e1ginas marcadas en el panel de marcadores.</p> <p>Ejemplo</p> <pre><code>&lt;link rel=\"shortcut icon\" href=\"favicon.ico\" type=\"image/x-icon\"&gt;\n</code></pre>"},{"location":"elementos_html/#carga-de-css-y-javascript","title":"Carga de CSS y JavaScript","text":"<p>Pr\u00e1cticamente todos los sitios web usan CSS para darles un buen aspecto y JavaScript para a\u00f1adir funcionalidades interactivas, como reproductores de v\u00eddeo, mapas, juegos y dem\u00e1s. La manera m\u00e1s habitual de a\u00f1adir CSS y JavaScript a una p\u00e1gina web es con los elementos <code>&lt;link&gt;</code> y el elemento <code>&lt;script&gt;</code>, respectivamente.</p> <p>El elemento <code>&lt;link&gt;</code> siempre debe ir dentro del <code>&lt;head&gt;</code> de tu documento. Este toma dos atributos, rel=\"stylesheet\", que indica que es la hoja de estilo del documento, y href, que contiene la ruta al archivo de la hoja de estilo.</p> <p>Ejemplo</p> <pre><code>&lt;link rel=\"stylesheet\" href=\"my-css-file.css\"&gt;\n</code></pre> <p>El elemento <code>&lt;script&gt;</code> tambi\u00e9n deber\u00eda ir en el head, y deber\u00eda incluir un atributo src con la ruta al JavaScript que quieres cargar, y defer, que b\u00e1sicamente le dice al navegador que cargue el JavaScript al mismo tiempo que el HTML de la p\u00e1gina. Esto es \u00fatil porque hace que todo el HTML se cargue antes de ejecutar el JavaScript, para que no haya errores porque el JavaScript ha intentado acceder a un elemento HTML que todav\u00eda no existe. De hecho hay m\u00faltiples formas de gestionar la carga del JavaScript en una p\u00e1gina por ejemplo poner el elemento <code>&lt;script&gt;</code> al final del body.</p> <p>Ejemplo</p> <pre><code>&lt;script src=\"my-js-file.js\" defer&gt;&lt;/script&gt;\n</code></pre>"},{"location":"elementos_html/#elementos-de-estructura-contenedores-o-envolturas","title":"Elementos de \"estructura\", \"contenedores\" o \"envolturas\"","text":"<p>Si bien la mayor\u00eda de los elementos del html se pueden anidar, exisiten algunos elementos que se usan para estructurar las distintas \u00e1ereas de la p\u00e1gina. Existen alungunos elementos que tienen un significado sem\u00e1ntico basado en su funcionalidad como por ejemplo <code>&lt;footer&gt;</code> que presentan sin ambig\u00fcedad los diferentes contenidos y otros elementos no-sem\u00e1nticos que tienen un uso generalista como por ejemplo <code>&lt;div&gt;</code> </p>"},{"location":"elementos_html/#elementos-semanticos","title":"Elementos sem\u00e1nticos","text":"<p>El conten\u00eddo sem\u00e1ntico permite que las tecnolog\u00edas de accesibilidad y los lectores de pantalla puedan reconocer esos elementos y asistir en tareas como encontrar el men\u00fa de navegaci\u00f3n, o encontrar el contenido principal. </p>"},{"location":"elementos_html/#body","title":"body","text":"<p>El elemento <code>&lt;body&gt;</code> contiene todo el contenido que se quiere mostrar en la p\u00e1gina y por lo tanto s\u00f3lo puede haber uno en cada p\u00e1gina.</p>"},{"location":"elementos_html/#header","title":"header","text":"<p>El elemento <code>&lt;header&gt;</code> representa un contenido introductorio del contenedor en el que se aloja. Si este es hijo de un elemento <code>&lt;body&gt;</code>, se convertir\u00e1 en el encabezado principal del sitio web, pero si es hijo de un elemento <code>&lt;article&gt;</code> o un elemento <code>&lt;section&gt;</code>, entonces simplemente ser\u00e1 el encabezado particular de cada secci\u00f3n.</p> <p>Al igual que ocurre con el footer, se suelen utilizar \u00fanicamente como la cabecera y pie de una p\u00e1gina (body) pero no se les da un uso habitual y debido en los article o section.</p> <p>Warning</p> <p>No confundir con el elemento <code>&lt;head&gt;</code> ni con t\u00edtulos y encabezados</p>"},{"location":"elementos_html/#footer","title":"footer","text":"<p>El elemento <code>&lt;footer&gt;</code> representa el contenido al pie de su elemento superior. Generalmente se usa como pie de p\u00e1gina. </p> <p>En general el footer incluye informaci\u00f3n del autor, enlaces a documentos relacionados, contacto, copyright y similares.</p>"},{"location":"elementos_html/#nav","title":"nav","text":"<p>El elemento <code>&lt;nav&gt;</code> o men\u00fa de navegaci\u00f3n contiene la funcionalidad de navegaci\u00f3n principal de la p\u00e1gina. Contiene enlaces a otras p\u00e1ginas o zonas de la p\u00e1gina. </p> <p>Hay que tener en cuenta que no deber\u00eda ser un listado de elementos, sino una zona de navegaci\u00f3n. Esto significa que no todos los enlaces de una p\u00e1gina han de encontrarse dentro de este elemento.</p>"},{"location":"elementos_html/#main","title":"main","text":"<p>El elemento <code>&lt;main&gt;</code> representa el contenido principal de la p\u00e1gina. Utilizaremos <code>&lt;main&gt;</code> solamente una vez para cada p\u00e1gina y lo situaremos directamente dentro del elemento <code>&lt;body&gt;</code>. Es mejor que no lo anidemos en otros elementos.</p> <p>Dentro del main encontraremos varias subsecciones (adem\u00e1s de la barra lateral <code>&lt;aside&gt;</code>) representadas por los elementos <code>&lt;article&gt;</code>, <code>&lt;section&gt;</code>, y <code>&lt;div&gt;</code>.</p>"},{"location":"elementos_html/#aside","title":"aside","text":"<p>El elemento <code>&lt;aside&gt;</code> o barra lateral incluye contenido que no est\u00e1 directamente relacionado con el contenido principal, pero que puede aportar informaci\u00f3n adicional relacionada indirectamente con \u00e9l (res\u00famenes, enlaces relacionados, etc.). A menudo se coloca dentro de <code>&lt;main&gt;</code></p>"},{"location":"elementos_html/#elementos-no-semanticos","title":"Elementos no sem\u00e1nticos","text":""},{"location":"elementos_html/#div","title":"div","text":"<p>El elemento <code>&lt;div&gt;</code> es un elemento de bloque y que se utiliza cuando no se tenemos un elementos sem\u00e1ntico en el que indicar el contenido o en el caso de que no se quiera dar ning\u00fan significado concreto. Es \u00e9l elemento comod\u00edn por exelencia.</p>"},{"location":"elementos_html/#span","title":"span","text":"<p>El elemento <code>&lt;span&gt;</code> es un elemento de linea (que se utiliza en el interior de una l\u00ednea) y que al igual que el *div se utiliza cuando no se tenemos un elementos sem\u00e1ntico en el que indicar el contenido o en el caso de que no se quiera dar ning\u00fan significado espec\u00edfico.</p> <p>Se usa frecuentemente para dar estilo a un texto dentro de una l\u00ednea. Por ejemplo</p> <pre><code>&lt;p&gt;Tengo un perro &lt;span style=\"color:green\"&gt;verde&lt;/span&gt; que tiene los ojos &lt;span style=\"color:blue\"&gt;azules&lt;/span&gt;&lt;/p&gt; \n</code></pre> <p>Tengo un perro verde que tiene los ojos azules</p>"},{"location":"elementos_html/#dar-estructura-a-nuestra-pagina","title":"Dar estructura a nuestra p\u00e1gina","text":"<p>En el c\u00e1pitulo anterior crearmos una p\u00e1gina web sencilla con la estructura m\u00ednima donde solo aparec\u00eda el texto \"Mi calculadora geod\u00e9sica\". Modificaremos la p\u00e1gina y le daremos una mejor estructura.</p> <ol> <li> <p>Abrir en el editor de texto el archivo index.html que se encuentra en la carpeta web-mgeo</p> </li> <li> <p>Agregar el autor y la descripci\u00f3n en el head. Para ello escribir lo siguiente</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"es\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"author\" content=\"[VUESTRO NOMBRE]\"&gt;\n    &lt;meta name=\"description\" content=\"Calculadora geod\u00e9sica que permite hacer la transformaci\u00f3n de coordenadas geogr\u00e1ficas en linea\"&gt;\n    &lt;title&gt;Mi calculadora geod\u00e9sica&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    Mi calculadora geod\u00e9sica\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> </li> <li> <p>Agregar el viewport para que la p\u00e1gina sea \"responsive\". </p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"es\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"author\" content=\"[VUESTRO NOMBRE]\"&gt;\n    &lt;meta name=\"description\" content=\"Calculadora geod\u00e9sica que permite hacer la transformaci\u00f3n de coordenadas geogr\u00e1ficas en linea\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;title&gt;Mi calculadora geod\u00e9sica&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    Mi calculadora geod\u00e9sica\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> </li> <li> <p>Agregar el favicon de la p\u00e1gina</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"es\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"author\" content=\"[VUESTRO NOMBRE]\"&gt;\n    &lt;meta name=\"description\" content=\"Calculadora geod\u00e9sica que permite hacer la transformaci\u00f3n de coordenadas geogr\u00e1ficas en linea\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;link href=\"https://www.icgc.cat/bundles/microblauicgc/img/favicon.ico\" rel=\"shortcut icon\" type=\"image/x-icon\"&gt;\n    &lt;title&gt;Mi calculadora geod\u00e9sica&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    Mi calculadora geod\u00e9sica\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> </li> <li> <p>Guardar y recargar la p\u00e1gina, veremos que aprece nuestro favicon en la pesta\u00f1a del navegador pero que el resto de nuestra p\u00e1gina sigue igual. Esto es debido a que como ya hemos mencionado los metadatos de la p\u00e1gina no son visibles.</p> </li> <li> <p>Agregar el header y footer a la pagina. Para ello escribimos lo siguiente en nuestro archivo index.html</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"es\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"author\" content=\"[VUESTRO NOMBRE]\"&gt;\n    &lt;meta name=\"description\" content=\"Calculadora geod\u00e9sica que permite hacer la transformaci\u00f3n de coordenadas geogr\u00e1ficas en linea\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;link href=\"https://www.icgc.cat/bundles/microblauicgc/img/favicon.ico\" rel=\"shortcut icon\" type=\"image/x-icon\"&gt;\n    &lt;title&gt;Mi calculadora geod\u00e9sica&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;header&gt;Mi calculadora geod\u00e9sica&lt;/header&gt;\n    &lt;footer&gt;\u00a9Copyright 2020 de nadie. Ning\u00fan derecho reservado.&lt;/footer&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> </li> <li> <p>Guardar y recargar la p\u00e1gina, veremos que nuestro texto no ha cambiado y que aparece el texto del footer. Esto es debido a que los elementos header y footer dan contexto sem\u00e1ntico pero no aplic\u00e1n ning\u00fan estilo. </p> </li> <li> <p>Crear el elemento principal de la p\u00e1gina</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"es\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"author\" content=\"[VUESTRO NOMBRE]\"&gt;\n    &lt;meta name=\"description\" content=\"Calculadora geod\u00e9sica que permite hacer la transformaci\u00f3n de coordenadas geogr\u00e1ficas en linea\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;link href=\"https://www.icgc.cat/bundles/microblauicgc/img/favicon.ico\" rel=\"shortcut icon\" type=\"image/x-icon\"&gt;\n    &lt;title&gt;Mi calculadora geod\u00e9sica&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;header&gt;Mi calculadora geod\u00e9sica&lt;/header&gt;\n    &lt;main&gt;\n        Aqui ir\u00e1 mi calculadora\n    &lt;/main&gt;\n    &lt;footer&gt;\u00a9Copyright 2020 de nadie. Ning\u00fan derecho reservado.&lt;/footer&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> </li> <li> <p>Guardar y recargar la p\u00e1gina para ver el contenido del elemento principal</p> </li> </ol>"},{"location":"elementos_html/#otros-elementos-importantes","title":"Otros elementos importantes","text":""},{"location":"elementos_html/#encabezado-o-titulo-hx","title":"Encabezado o t\u00edtulo <code>&lt;h[X]&gt;</code>","text":"<p>Hay seis elementos de encabezado: <code>&lt;h1&gt;</code>, <code>&lt;h2&gt;</code>, <code>&lt;h3&gt;</code>, <code>&lt;h4&gt;</code>, <code>&lt;h5&gt;</code> y <code>&lt;h6&gt;</code>. Se usan para establecer los niveles de contenido de la p\u00e1gina. Por ejemplo el <code>&lt;h1&gt;</code> representa el t\u00edtulo principal, <code>&lt;h2&gt;</code> ser\u00eda un subt\u00edtulo y as\u00ed sucesivamente. </p> <p>Preferiblemente se debe usar un solo <code>&lt;h1&gt;</code> por p\u00e1gina. Y se debe procuarar no usar m\u00e1s de tres niveles por p\u00e1gina.</p> <p>El uso de los encabezados favorece al SEO de las p\u00e1ginas. Los motores de b\u00fasqueda que indexan tu p\u00e1gina consideran el contenido de los t\u00edtulos como palabras clave importantes e influyen en la puntuaci\u00f3n de b\u00fasqueda de la p\u00e1gina.</p> <ol> <li> <p>Modificar el index.html para agregar el titulo</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"es\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"author\" content=\"[VUESTRO NOMBRE]\"&gt;\n    &lt;meta name=\"description\" content=\"Calculadora geod\u00e9sica que permite hacer la transformaci\u00f3n de coordenadas geogr\u00e1ficas en linea\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;link href=\"https://www.icgc.cat/bundles/microblauicgc/img/favicon.ico\" rel=\"shortcut icon\" type=\"image/x-icon\"&gt;\n    &lt;title&gt;Mi calculadora geod\u00e9sica&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;header&gt;&lt;h1&gt;Mi calculadora geod\u00e9sica&lt;/h1&gt;&lt;/header&gt;\n    &lt;main&gt;\n        Aqui ir\u00e1 mi calculadora\n    &lt;/main&gt;\n    &lt;footer&gt;\u00a9Copyright 2020 de nadie. Ning\u00fan derecho reservado.&lt;/footer&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> </li> <li> <p>Guardar y recargar la p\u00e1gina para ver como ha cambiado el estilo del t\u00edtulo de la p\u00e1gina</p> </li> </ol>"},{"location":"elementos_html/#listas","title":"Listas","text":"<p>Existen dos elementos para definir las lista dependiendo de si es una lista ordenada o no ordenada. Las listas no ordenadas se usan para marcar listas de art\u00edculos cuyo orden no es importante. Ejemplo la lista de compras. Por el contrario las listas ordenadas son aquellas en las que el orden de los elementos s\u00ed importa. Ejemplo una lista de instrucciones para seguir.</p> <p>Ambos elementos funcionan de igual forma lo que cambias es el elemento principal que define o delimita la lista. Para las listas ordenadas se usa el elemento <code>&lt;ol&gt;</code> y para los no ordenadas el <code>&lt;ul&gt;</code>.</p> <p>Para indicar cada item de la lista se usa el elemento <code>&lt;li&gt;</code></p> <p>Se pueden crear listas anidadas, para tener subelementos. En las listas anidadas se pueden combinar los tipos de lista.</p> <p>Ejemplo de lista ordenada</p> <pre><code>&lt;ol&gt;\n  &lt;li&gt;Conduce hasta el final de la calle&lt;/li&gt;\n  &lt;li&gt;Gira a la derecha&lt;/li&gt;\n  &lt;li&gt;Sigue derecho por las dos primeras glorietas&lt;/li&gt;\n  &lt;li&gt;Gira a la izquierda en la tercer glorieta&lt;/li&gt;\n  &lt;li&gt;El colegio est\u00e1 a tu derecha, 300 metros m\u00e1s adelante&lt;/li&gt;\n&lt;/ol&gt;\n</code></pre> <ol> <li>Conduce hasta el final de la calle</li> <li>Gira a la derecha</li> <li>Sigue derecho por las dos primeras glorietas</li> <li>Gira a la izquierda en la tercer glorieta</li> <li>El colegio est\u00e1 a tu derecha, 300 metros m\u00e1s adelante</li> </ol> <p>Ejemplo de lista no ordenada con lista ordenada anidada </p> <pre><code>&lt;ul&gt;\n  &lt;li&gt;leche&lt;/li&gt;\n  &lt;li&gt;hummus&lt;/li&gt;\n  &lt;ol&gt;\n      &lt;li&gt;ajo&lt;/li&gt;\n      &lt;li&gt;lim\u00f3n&lt;/li&gt;\n      &lt;li&gt;pimiento&lt;/li&gt;\n  &lt;/ol&gt;\n  &lt;li&gt;huevos&lt;/li&gt;\n  &lt;li&gt;pan&lt;/li&gt;\n&lt;/ul&gt;\n</code></pre> <ul> <li>leche</li> <li>hummus</li> <ol> <li>ajo</li> <li>lim\u00f3n</li> <li>pimiento</li> </ol> <li>huevos</li> <li>pan</li> </ul> <ol> <li> <p>Modificar el index.html para agregar un listado (no ordenado) de sistemas de referencia. Este listado lo crearemos en un barra lateral <code>&lt;aside&gt;</code>. </p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"es\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"author\" content=\"[VUESTRO NOMBRE]\"&gt;\n    &lt;meta name=\"description\" content=\"Calculadora geod\u00e9sica que permite hacer la transformaci\u00f3n de coordenadas geogr\u00e1ficas en linea\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;link href=\"https://www.icgc.cat/bundles/microblauicgc/img/favicon.ico\" rel=\"shortcut icon\" type=\"image/x-icon\"&gt;\n    &lt;title&gt;Mi calculadora geod\u00e9sica&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;header&gt;&lt;h1&gt;Mi calculadora geod\u00e9sica&lt;/h1&gt;&lt;/header&gt;\n    &lt;main&gt;\n        Aqui ir\u00e1 mi calculadora\n         &lt;aside&gt;\n            &lt;ul&gt;\n                &lt;li&gt;EPSG:4326&lt;/li&gt;\n                &lt;li&gt;EPSG:3857&lt;/li&gt;\n                &lt;li&gt;EPSG:25831&lt;/li&gt;\n                &lt;li&gt;EPSG:23031&lt;/li&gt;\n            &lt;/ul&gt;\n        &lt;/aside&gt;\n    &lt;/main&gt;\n    &lt;footer&gt;\u00a9Copyright 2020 de nadie. Ning\u00fan derecho reservado.&lt;/footer&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> </li> <li> <p>Guardar y recargar la p\u00e1gina para observar que aparece nuestro listado de sistemas de referencia.</p> </li> </ol>"},{"location":"elementos_html/#enfasis-cursiva-negrita-subrayado","title":"\u00c9nfasis, Cursiva, negrita, subrayado...","text":"<p>En el lenguaje humano, a menudo enfatizamos ciertas palabras para alterar el significado de una frase, y a menudo queremos destacar ciertas palabras como importantes o diferentes en alg\u00fan sentido. HTML nos dota de diversos elementos sem\u00e1nticos que nos permiten destacar contenido textual con tales efectos, y en esta secci\u00f3n veremos los m\u00e1s comunes.</p>"},{"location":"elementos_html/#negrita","title":"Negrita","text":"<p>Para el texto en negrita, use las etiquetas <code>&lt;strong&gt;</code> o <code>&lt;b&gt;</code>. La diferencia es sem\u00e1ntica, <code>&lt;strong&gt;</code> se utiliza para indicar que el texto es fundamental o sem\u00e1nticamente importante para el texto circundante, mientras que <code>&lt;b&gt;</code> no indica tal importancia y simplemente representa texto que debe estar en negrita.</p>"},{"location":"elementos_html/#cursiva","title":"Cursiva","text":"<p>Para poner el texto en cursiva, use las etiquetas <code>&lt;em&gt;</code> o <code>&lt;i&gt;</code>. Al igual que en las negritas la diferencia es sem\u00e1ntica. <code>&lt;em&gt;</code> se utiliza para indicar que el texto debe tener un \u00e9nfasis adicional que se debe resaltar, mientras que <code>&lt;i&gt;</code> simplemente representa el texto que se debe diferenciar del texto normal que lo rodea. </p>"},{"location":"elementos_html/#subrayado","title":"Subrayado","text":"<p>El elemento <code>&lt;u&gt;</code> se usa para representar una anotaci\u00f3n no textual no articulada (No es un hiperv\u00ednculo). Se usa para transmitir el significado que tradicionalmente conlleva el subrayado: nombres propios, errores ortogr\u00e1ficos...</p>"},{"location":"elementos_html/#hipervinculos-o-enlaces","title":"Hiperv\u00ednculos o enlaces","text":"<p>Los enlaces <code>&lt;a&gt;</code> son elementos verdaderamente importantes son los que hacen que la web sea web.</p> <p>Un enlace se crea incluyendo el texto o cualquier otro contenido que queramos convertir en un enlace usando un elemento <code>&lt;a&gt;</code>. Donde le daremos un atributo href que contendr\u00e1 la direcci\u00f3n web hacia d\u00f3nde queremos que apunte el enlace.</p> <p>Ejemplo</p> <p><pre><code>&lt;a href=\"https://www.mozilla.org/es-ES/\"&gt;la p\u00e1gina de inicio de Mozilla&lt;/a&gt;\n</code></pre> la p\u00e1gina de inicio de Mozilla</p> <p>Otro atributo que es recomendable agregar a los enlaces es el title. El t\u00edtulo contiene informaci\u00f3n adicional sobre el enlace. El t\u00edtulo se mostrar\u00e1 al pasar el rat\u00f3n sobre el texto del enlace.</p> <p>El atributo target es muy \u00fatil ya que en donde desplegar la URL enlazada. Por defecto si no se especifica los enlaces se abren en la ventana o pesta\u00f1a actual. Los valores mas usados para este atributo son:</p> <ul> <li>_self: Carga la URL en el mismo contexto de navegaci\u00f3n que el actual. Este es el comportamiento por defecto.</li> <li>_blank: Carga la URL en un nuevo contexto de navegaci\u00f3n. Usualmente es una pesta\u00f1a, sin embargo, los usuarios pueden configurar los navegadores para utilizar una ventana nueva en lugar de la pesta\u00f1a.</li> <li>_parent: Carga la URL en el contexto de navegaci\u00f3n padre (parent) del actual. Si no existe el padre, este se comporta del mismo modo que _self.</li> </ul> <p>Note</p> <p>Cuando se utiliza target, considera agregar rel=\"noopener noreferrer\" para evitar el uso de la API window.opener.</p> <p>Ejemplo</p> <p><pre><code>&lt;a href=\"https://www.mozilla.org/es-ES/\" title=\"El mejor lugar para encontrar m\u00e1s informaci\u00f3n acerca de la misi\u00f3n de Mozilla y c\u00f3mo contribuir\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;la p\u00e1gina de inicio de Mozilla&lt;/a&gt;\n</code></pre> la p\u00e1gina de inicio de Mozilla</p> <ol> <li> <p>Modificar el index.html para agregar enlaces al listado de sistemas de referencia</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"es\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"author\" content=\"[VUESTRO NOMBRE]\"&gt;\n    &lt;meta name=\"description\" content=\"Calculadora geod\u00e9sica que permite hacer la transformaci\u00f3n de coordenadas geogr\u00e1ficas en linea\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;link href=\"https://www.icgc.cat/bundles/microblauicgc/img/favicon.ico\" rel=\"shortcut icon\" type=\"image/x-icon\"&gt;\n    &lt;title&gt;Mi calculadora geod\u00e9sica&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;header&gt;&lt;h1&gt;Mi calculadora geod\u00e9sica&lt;/h1&gt;&lt;/header&gt;\n    &lt;main&gt;\n        Aqui ir\u00e1 mi calculadora\n         &lt;aside&gt;\n            &lt;ul&gt;\n                &lt;li&gt;&lt;a href=\"https://epsg.io/4326\" title=\"WGS 84 -- WGS84 - World Geodetic System 1984, used in GPS\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;EPSG:4326&lt;/a&gt;&lt;/li&gt;\n                &lt;li&gt;EPSG:3857&lt;/li&gt;\n                &lt;li&gt;EPSG:25831&lt;/li&gt;\n                &lt;li&gt;EPSG:23031&lt;/li&gt;\n            &lt;/ul&gt;\n        &lt;/aside&gt;\n    &lt;/main&gt;\n    &lt;footer&gt;\u00a9Copyright 2020 de nadie. Ning\u00fan derecho reservado.&lt;/footer&gt;\n&lt;/body&gt;\n &lt;/html&gt;\n</code></pre> </li> <li> <p>Guardar y recargar la p\u00e1gina para observar que aparece un enlace en el primer elemento del listado de sistemas de referencia.</p> </li> </ol>"},{"location":"elementos_html/#imagenes-y-multimedia","title":"Imagenes y multimedia","text":"<p>HTML soporta varios recursos multimedia como im\u00e1genes, audio, y video. En nuestro caso explicaremos \u00fanicamente las im\u00e1genes ya que son el elemento multimedia m\u00e1s utilizado.</p> <p>El elemento de imagen <code>&lt;img&gt;</code> representa una imagen en el documento.</p> <p>Una imagen se crea usando un elemento <code>&lt;img&gt;</code>. Donde le daremos un atributo src que contendr\u00e1 la direcci\u00f3n web donde est\u00e1 ubicada la imagen.</p> <p>Ejemplo </p> <p><pre><code>&lt;img src=\"https://sites.google.com/site/siggeografico/_/rsrc/1308667090074/helpdesk-reps/proyecciones.jpg\" /&gt;\n</code></pre> </p> <p>Un atributo que es recomendable agregar a las im\u00e1genes es el alt. Este atributo define el texto alternativo que describe la imagen, texto que los usuarios ver\u00e1n si la URL de la imagen es err\u00f3nea o la imagen tiene un formato no soportado o si la imagen a\u00fan no se ha descargado.</p> <p>Otros atributos comunes son el height (altura) y el width (ancho) para definir las dimensiones de la imagen.</p> <pre><code>&lt;img alt=\"Proyecciones geogr\u00e1ficas\" width=\"200\" height=\"100\" src=\"https://sites.google.com/site/siggeografico/_/rsrc/1308667090074/helpdesk-reps/proyecciones.jpg\" /&gt;\n</code></pre> <p></p> <ol> <li> <p>Modificar el index.html para agregar una imagen en el header de nuestra p\u00e1gina.</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"es\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"author\" content=\"[VUESTRO NOMBRE]\"&gt;\n    &lt;meta name=\"description\" content=\"Calculadora geod\u00e9sica que permite hacer la transformaci\u00f3n de coordenadas geogr\u00e1ficas en linea\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;link href=\"https://www.icgc.cat/bundles/microblauicgc/img/favicon.ico\" rel=\"shortcut icon\" type=\"image/x-icon\"&gt;\n    &lt;title&gt;Mi calculadora geod\u00e9sica&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;header&gt;\n        &lt;img src=\"https://www.uab.cat/servlet/BlobServer?blobtable=Imatge&amp;blobcol=urlimg&amp;blobheader=image/png&amp;blobkey=id&amp;blobwhere=1345709314986&amp;blobnocache=true\" alt=\"UAB\" style=\"height: 100px;\"&gt;\n        &lt;h1&gt;Mi calculadora geod\u00e9sica&lt;/h1&gt;\n    &lt;/header&gt;\n    &lt;main&gt;\n        Aqui ir\u00e1 mi calculadora\n         &lt;aside&gt;\n            &lt;ul&gt;\n                &lt;li&gt;&lt;a href=\"https://epsg.io/4326\" title=\"WGS 84 -- WGS84 - World Geodetic System 1984, used in GPS\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;EPSG:4326&lt;/a&gt;&lt;/li&gt;\n                &lt;li&gt;EPSG:3857&lt;/li&gt;\n                &lt;li&gt;EPSG:25831&lt;/li&gt;\n                &lt;li&gt;EPSG:23031&lt;/li&gt;\n            &lt;/ul&gt;\n        &lt;/aside&gt;\n    &lt;/main&gt;\n    &lt;footer&gt;\u00a9Copyright 2020 de nadie. Ning\u00fan derecho reservado.&lt;/footer&gt;\n&lt;/body&gt;\n &lt;/html&gt;\n</code></pre> </li> <li> <p>Guardar y recargar la p\u00e1gina para ver que aparece la imagen del logo de la UAB en nuestra p\u00e1gina.</p> </li> </ol>"},{"location":"elementos_html/#formularios","title":"Formularios","text":"<p>HTML provee un n\u00famero de elementos que pueden usarse conjuntamente para crear formularios los cuales el usuario puede completar y enviar informaci\u00f3n al sitio Web o a una aplicaci\u00f3n.</p> <p>El elemento form <code>&lt;form&gt;</code> representa una secci\u00f3n de un documento que contiene un formaulario con controles interactivos que permiten a un usuario enviar informaci\u00f3n a un servidor web. Es el contenedor del resto de elementos que forman el formulario.</p> <p>Sus principales atributos son:</p> <ul> <li>action: la URL a donde se va a enviar la informaci\u00f3n del formulario</li> <li>metod: el m\u00e9todo que el navegador usa para enviar el formulario. Sus valores posible son:<ul> <li>post: los datos del formulario son incluidos en el cuerpo del formulario y son enviados al servidor.</li> <li>get: los datos del formulario son adjuntados a la URI del atributo action , con un '?' como separador, y la URI resultante es enviada al servidor.</li> </ul> </li> <li>enctype: cuando el valor del atributo method es post, este atributo es el tipo MIME del contenido que es usado para enviar el formulario al servidor. Sus valores m\u00e1s usados son:<ul> <li>application/x-www-form-urlencoded: El valor por defecto si un atributo no est\u00e1 especificado.</li> <li>multipart/form-data: Usar este valor si se est\u00e1 enviando un archivo dentro del formulario</li> </ul> </li> </ul> <p>A continuaci\u00f3n veremos algunos de los elementos (o campos) m\u00e1s usados en los formularios</p>"},{"location":"elementos_html/#input","title":"input","text":"<p>El elemento <code>&lt;input&gt;</code> se usa para crear controles interactivos para formularios basados en la web con el fin de recibir datos del usuario. Hay disponible una amplia variedad de tipos de datos de entrada y widgets de control. Este elemento es uno de los m\u00e1s potentes y complejos en todo HTML debido a la gran cantidad de combinaciones de tipos y atributos de entrada.</p> <p>Los principales atributos de este elemento son:</p> <ul> <li>type: define el tipo de control a mostrar. Su valor predeterminado es text, si no se especifica este atributo. Los valores m\u00e1s frecuentes son:<ul> <li>checkbox: Casilla de selecci\u00f3n. Se debe usar el atributo value para definir el valor que se enviar\u00e1 por este elemento. Se usa el atributo checked para indicar si el elemento est\u00e1 seleccionado.</li> <li>color: Control para espicificar un color.</li> <li>date: Control para introducir una fecha (a\u00f1o, mes y d\u00eda, sin tiempo).</li> <li>datetime-local: Control para introducir fecha y hora, sin zona horaria espec\u00edfica.</li> <li>email: Campo para introducir una direcci\u00f3n de correo electr\u00f3nico. El valor introducido se valida para que contenga una cadena vac\u00eda o una direcci\u00f3n de correo v\u00e1lida antes de enviarse.</li> <li>file: Control que permite al usuario seleccionar un archivo. Se puede usar el atributo accept para definir los tipos de archivo que el control podr\u00e1 seleccionar</li> <li>hidden: Control que no es mostrado en pantalla, pero cuyo valor es enviado al servidor.</li> <li>number: Control para introducir un n\u00famero</li> <li>password: Control cuyo valor permanece oculto.</li> <li>radio: Bot\u00f3n radio. Se debe usar el atributo value para definir el valor que se enviar\u00e1 por este elemento. Se usa el atributo checked para indicar si el elemento est\u00e1 seleccionado de forma predeterminada. Los botones radio que tengan el mismo valor para su atributo name est\u00e1n dentro del mismo \"grupo de botones radio\". Solo un bot\u00f3n radio dentro de un grupo puede ser seleccionado a la vez</li> <li>submit: Bot\u00f3n que env\u00eda el formulario.</li> <li>text: Campo de texto de l\u00ednea simple. Los saltos de l\u00ednea son eliminados autom\u00e1ticamente del valor introducido.</li> <li>url: Campo para editar una URL. El valor introducido se valida para que contenga una cadena vac\u00eda o una ruta URL absoluta antes de enviarse</li> </ul> </li> <li>disabled: indica que el control no est\u00e1 disponible para interacci\u00f3n</li> <li>name: indica el nombre del control, el cual es enviado con los datos del formulario</li> <li>placeholder indica una pista para el usuario sobre lo que puede introducir en el control.</li> <li>value: indica el valor inicial del control</li> </ul> <p>Ejemplos de algunos controles</p> <pre><code>&lt;form action=\"\"&gt;\n    &lt;input type=\"text\" name=\"nombre\"&gt;\n    &lt;input type=\"email\" name=\"correo\" placeholder=\"introduce tu email\"&gt;\n    &lt;input type=\"hidden\" name=\"oculto\"&gt;\n    &lt;input type=\"password\" name=\"clave\" placeholder=\"introduce tu contrase\u00f1a\"&gt;\n    &lt;input type=\"radio\" name=\"sexo\" value=\"M\"&gt;\n    &lt;input type=\"radio\" name=\"sexo\" value=\"F\"&gt;\n    &lt;input type=\"checkbox\" name=\"condiciones\"&gt;\n&lt;/form&gt;\n</code></pre>"},{"location":"elementos_html/#textarea","title":"textarea","text":"<p>El elemento <code>&lt;textarea&gt;</code> representa un control para la edici\u00f3n mutil\u00ednea de texto sin formato. Para los entradas de texto de una sola l\u00ednea ya tenemos el <code>&lt;input type=\"text\"&gt;</code>.</p> <p>Sus principales atributos son:</p> <ul> <li>cols: indica la anchura visible del control de texto, en caracteres de anchura media. Si est\u00e1 definido debe ser positivo. Si no, por defecto, el valor es 20.</li> <li>rows: indica el n\u00famero de l\u00edneas visibles en el control</li> <li>maxlength: indica el n\u00famero m\u00e1ximo de caracteres que el usuario puede insertar. Si no est\u00e1 especificado entonces el usuario puede insertar un n\u00famero ilimitado de caracteres.</li> <li>disabled: indica que el control no est\u00e1 disponible para interacci\u00f3n</li> <li>name: indica el nombre del control, el cual es enviado con los datos del formulario</li> <li>placeholder indica una pista para el usuario sobre lo que puede introducir en el control.</li> </ul> <p>Note</p> <p>Este campo no tiene un atributo value</p> <p>Ejemplo</p> <pre><code>&lt;textarea name=\"textarea\" rows=\"10\" cols=\"50\"&gt;Escribe algo largo aqu\u00ed&lt;/textarea&gt;\n</code></pre> Escribe algo largo aqu\u00ed"},{"location":"elementos_html/#select","title":"select","text":"<p>El elemento select <code>&lt;select&gt;</code> representa un control que muestra un men\u00fa de opciones. Las opciones contenidas en el men\u00fa son representadas por elementos <code>&lt;option&gt;</code>, los cuales pueden ser agrupados por elementos <code>&lt;optgroup&gt;</code>.</p> <p>Ejemplo</p> <pre><code>&lt;select name=\"select\"&gt;\n  &lt;option value=\"value1\"&gt;Value 1&lt;/option&gt; \n  &lt;option value=\"value2\" selected&gt;Value 2&lt;/option&gt;\n  &lt;option value=\"value3\"&gt;Value 3&lt;/option&gt;\n&lt;/select&gt;\n</code></pre> <p> Value 1 Value 2 Value 3 <p></p>"},{"location":"elementos_html/#button","title":"button","text":"<p>La etiqueta <code>&lt;button&gt;</code> representa un elemento cliqueable de tipo bot\u00f3n que puede ser utilizado en formularios o en cualquier parte de la p\u00e1gina que necesite un bot\u00f3n est\u00e1ndar y simple de aplicar.</p> <p>El atributo type se puede usar para indicar el tipo de bot\u00f3n. Esto se usa principalmente cuando se utiliza dentro de un formulario. Sus valores pueden ser: button, submit o reset</p> <p>Ejemplo</p> <pre><code>&lt;button name=\"button\"&gt;Click me&lt;/button&gt;\n</code></pre>"},{"location":"elementos_html/#label","title":"label","text":"<p>El elemento <code>&lt;label&gt;</code> representa una etiqueta para un elemento en una interfaz de usuario. Este puede estar asociado con un control ya sea mediante la utilizacion del atributo for, o ubicando el control dentro del elemento label.</p> <p>Ejemplos</p> <pre><code>&lt;!-- Un simple ejemplo de un label con el atributo for --&gt;\n&lt;label for=\"Name\"&gt;Click me&lt;/label&gt;\n&lt;input type=\"text\" id=\"Name\" name=\"Name\" /&gt;\n\n&lt;!-- Aun mas simple --&gt;\n&lt;label&gt;Click me &lt;input type=\"text\" id=\"Name\" name=\"Name\" /&gt;&lt;/label&gt;\n</code></pre> <p>Click me </p> <p>Click me </p> <ol> <li> <p>Modificar el index.html para agregar un formulario en nuestra p\u00e1gina. Primero crear un par de controles <code>&lt;select&gt;</code> para seleccionar el sistema de referencia</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"es\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"author\" content=\"[VUESTRO NOMBRE]\"&gt;\n    &lt;meta name=\"description\" content=\"Calculadora geod\u00e9sica que permite hacer la transformaci\u00f3n de coordenadas geogr\u00e1ficas en linea\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;link href=\"https://www.icgc.cat/bundles/microblauicgc/img/favicon.ico\" rel=\"shortcut icon\" type=\"image/x-icon\"&gt;\n    &lt;title&gt;Mi calculadora geod\u00e9sica&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;header&gt;\n        &lt;img src=\"https://www.uab.cat/Imatge/635/883/logop.gif\" alt=\"UAB\"&gt;\n        &lt;h1&gt;Mi calculadora geod\u00e9sica&lt;/h1&gt;\n    &lt;/header&gt;\n    &lt;main&gt;\n        &lt;div&gt;\n            &lt;label for=\"origen\"&gt;Sistema de referencia de origen&lt;/label&gt;\n            &lt;select id=\"origen\"&gt;\n                &lt;option value=\"EPSG:4326\"&gt;EPSG:4326&lt;/option&gt; \n                &lt;option value=\"EPSG:3857\"&gt;EPSG:3857&lt;/option&gt;\n                &lt;option value=\"EPSG:25831\"&gt;EPSG:25831&lt;/option&gt;\n                &lt;option value=\"EPSG:23031\"&gt;EPSG:23031&lt;/option&gt;\n            &lt;/select&gt;\n\n            &lt;label for=\"destino\"&gt;Sistema de referencia de destino&lt;/label&gt;\n            &lt;select id=\"destino\"&gt;\n                &lt;option value=\"EPSG:4326\"&gt;EPSG:4326&lt;/option&gt; \n                &lt;option value=\"EPSG:3857\"&gt;EPSG:3857&lt;/option&gt;\n                &lt;option value=\"EPSG:25831\"&gt;EPSG:25831&lt;/option&gt;\n                &lt;option value=\"EPSG:23031\"&gt;EPSG:23031&lt;/option&gt;\n            &lt;/select&gt;\n        &lt;/div&gt;\n        &lt;aside&gt;\n            &lt;ul&gt;\n                &lt;li&gt;&lt;a href=\"https://epsg.io/4326\" title=\"WGS 84 -- WGS84 - World Geodetic System 1984, used in GPS\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;EPSG:4326&lt;/a&gt;&lt;/li&gt;\n                &lt;li&gt;EPSG:3857&lt;/li&gt;\n                &lt;li&gt;EPSG:25831&lt;/li&gt;\n                &lt;li&gt;EPSG:23031&lt;/li&gt;\n            &lt;/ul&gt;\n        &lt;/aside&gt;\n    &lt;/main&gt;\n    &lt;footer&gt;\u00a9Copyright 2020 de nadie. Ning\u00fan derecho reservado.&lt;/footer&gt;\n&lt;/body&gt;\n &lt;/html&gt;\n</code></pre> </li> <li> <p>Crear un par de campos para introducir las coordenadas de origen</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"es\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"author\" content=\"[VUESTRO NOMBRE]\"&gt;\n    &lt;meta name=\"description\" content=\"Calculadora geod\u00e9sica que permite hacer la transformaci\u00f3n de coordenadas geogr\u00e1ficas en linea\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;link href=\"https://www.icgc.cat/bundles/microblauicgc/img/favicon.ico\" rel=\"shortcut icon\" type=\"image/x-icon\"&gt;\n    &lt;title&gt;Mi calculadora geod\u00e9sica&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;header&gt;\n        &lt;img src=\"https://www.uab.cat/Imatge/635/883/logop.gif\" alt=\"UAB\"&gt;\n        &lt;h1&gt;Mi calculadora geod\u00e9sica&lt;/h1&gt;\n    &lt;/header&gt;\n    &lt;main&gt;\n        &lt;div&gt;\n            &lt;label for=\"origen\"&gt;Sistema de referencia de origen&lt;/label&gt;\n            &lt;select id=\"origen\"&gt;\n                &lt;option value=\"EPSG:4326\"&gt;EPSG:4326&lt;/option&gt; \n                &lt;option value=\"EPSG:3857\"&gt;EPSG:3857&lt;/option&gt;\n                &lt;option value=\"EPSG:25831\"&gt;EPSG:25831&lt;/option&gt;\n                &lt;option value=\"EPSG:23031\"&gt;EPSG:23031&lt;/option&gt;\n            &lt;/select&gt;\n\n            &lt;label for=\"destino\"&gt;Sistema de referencia de destino&lt;/label&gt;\n            &lt;select id=\"destino\"&gt;\n                &lt;option value=\"EPSG:4326\"&gt;EPSG:4326&lt;/option&gt; \n                &lt;option value=\"EPSG:3857\"&gt;EPSG:3857&lt;/option&gt;\n                &lt;option value=\"EPSG:25831\"&gt;EPSG:25831&lt;/option&gt;\n                &lt;option value=\"EPSG:23031\"&gt;EPSG:23031&lt;/option&gt;\n            &lt;/select&gt;\n\n            &lt;label for=\"lat\"&gt;Latitud&lt;/label&gt;\n            &lt;input type=\"text\" id=\"lat\"&gt;\n\n            &lt;label for=\"lng\"&gt;Longitud&lt;/label&gt;\n            &lt;input type=\"text\" id=\"lng\"&gt;\n        &lt;/div&gt;\n        &lt;aside&gt;\n            &lt;ul&gt;\n                &lt;li&gt;&lt;a href=\"https://epsg.io/4326\" title=\"WGS 84 -- WGS84 - World Geodetic System 1984, used in GPS\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;EPSG:4326&lt;/a&gt;&lt;/li&gt;\n                &lt;li&gt;EPSG:3857&lt;/li&gt;\n                &lt;li&gt;EPSG:25831&lt;/li&gt;\n                &lt;li&gt;EPSG:23031&lt;/li&gt;\n            &lt;/ul&gt;\n        &lt;/aside&gt;\n    &lt;/main&gt;\n    &lt;footer&gt;\u00a9Copyright 2020 de nadie. Ning\u00fan derecho reservado.&lt;/footer&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> </li> <li> <p>Crear un bot\u00f3n para hacer la transformaci\u00f3n</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"es\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"author\" content=\"[VUESTRO NOMBRE]\"&gt;\n    &lt;meta name=\"description\" content=\"Calculadora geod\u00e9sica que permite hacer la transformaci\u00f3n de coordenadas geogr\u00e1ficas en linea\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;link href=\"https://www.icgc.cat/bundles/microblauicgc/img/favicon.ico\" rel=\"shortcut icon\" type=\"image/x-icon\"&gt;\n    &lt;title&gt;Mi calculadora geod\u00e9sica&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;header&gt;\n        &lt;img src=\"https://www.uab.cat/Imatge/635/883/logop.gif\" alt=\"UAB\"&gt;\n        &lt;h1&gt;Mi calculadora geod\u00e9sica&lt;/h1&gt;\n    &lt;/header&gt;\n    &lt;main&gt;\n        &lt;div&gt;\n            &lt;label for=\"origen\"&gt;Sistema de referencia de origen&lt;/label&gt;\n            &lt;select id=\"origen\"&gt;\n                &lt;option value=\"EPSG:4326\"&gt;EPSG:4326&lt;/option&gt; \n                &lt;option value=\"EPSG:3857\"&gt;EPSG:3857&lt;/option&gt;\n                &lt;option value=\"EPSG:25831\"&gt;EPSG:25831&lt;/option&gt;\n                &lt;option value=\"EPSG:23031\"&gt;EPSG:23031&lt;/option&gt;\n            &lt;/select&gt;\n\n            &lt;label for=\"destino\"&gt;Sistema de referencia de destino&lt;/label&gt;\n            &lt;select id=\"destino\"&gt;\n                &lt;option value=\"EPSG:4326\"&gt;EPSG:4326&lt;/option&gt; \n                &lt;option value=\"EPSG:3857\"&gt;EPSG:3857&lt;/option&gt;\n                &lt;option value=\"EPSG:25831\"&gt;EPSG:25831&lt;/option&gt;\n                &lt;option value=\"EPSG:23031\"&gt;EPSG:23031&lt;/option&gt;\n            &lt;/select&gt;\n\n            &lt;label for=\"lat\"&gt;Latitud&lt;/label&gt;\n            &lt;input type=\"text\" id=\"lat\"&gt;\n\n            &lt;label for=\"lng\"&gt;Longitud&lt;/label&gt;\n            &lt;input type=\"text\" id=\"lng\"&gt;\n\n            &lt;button&gt;Transformar coordenadas&lt;/button&gt;\n        &lt;/div&gt;\n        &lt;aside&gt;\n            &lt;ul&gt;\n                &lt;li&gt;&lt;a href=\"https://epsg.io/4326\" title=\"WGS 84 -- WGS84 - World Geodetic System 1984, used in GPS\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;EPSG:4326&lt;/a&gt;&lt;/li&gt;\n                &lt;li&gt;EPSG:3857&lt;/li&gt;\n                &lt;li&gt;EPSG:25831&lt;/li&gt;\n                &lt;li&gt;EPSG:23031&lt;/li&gt;\n            &lt;/ul&gt;\n        &lt;/aside&gt;\n    &lt;/main&gt;\n    &lt;footer&gt;\u00a9Copyright 2020 de nadie. Ning\u00fan derecho reservado.&lt;/footer&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> </li> <li> <p>Guardar y recargar la p\u00e1gina para ver que aparece el formulario.</p> </li> </ol>"},{"location":"elementos_html/#tablas","title":"Tablas","text":"<p>El elemento <code>&lt;table&gt;</code> se usa para representar datos en dos o mas dimensiones. Permite organizar los datos en filas y columnas.  </p> <p>En documentos HTML una tabla puede ser considerada, como un grupo de filas donde cada una contiene a un grupo de celdas.</p> <p>Como muchas otras estructuras de HTML, las tablas son construidas utilizando elementos. En particular, una tabla b\u00e1sica puede ser declarada usando tres elementos, <code>&lt;table&gt;</code> (el contenedor principal), <code>&lt;tr&gt;</code> (representando a las filas contenedoras de las celdas) y <code>&lt;td&gt;</code> (representando a las celdas) <sup>4</sup></p> <p>Ejemplo</p> <pre><code>&lt;table&gt;\n  &lt;tr&gt;\n    &lt;td&gt;Celda 1&lt;/td&gt;\n    &lt;td&gt;Celda 2&lt;/td&gt;\n    &lt;td&gt;Celda 3&lt;/td&gt;\n  &lt;/tr&gt;\n  &lt;tr&gt;\n    &lt;td&gt;Celda 4&lt;/td&gt;\n    &lt;td&gt;Celda 5&lt;/td&gt;\n    &lt;td&gt;Celda 6&lt;/td&gt;\n  &lt;/tr&gt;\n&lt;/table&gt;\n</code></pre> Celda 1 Celda 2 Celda 3 Celda 4 Celda 5 Celda 6 <p>Conjuntamente con los elementos b\u00e1sicos de la tabla existen otros tipos de elementos que permiten hacer tablas m\u00e1s avanzadas. A continuaci\u00f3n veremos algunos de ellos.</p> <ul> <li>El elemento <code>&lt;th&gt;</code> es un tipo especial de celda y se usa para los encabezados.</li> <li>El elemento <code>&lt;caption&gt;</code> de ser insertado justo despu\u00e9s de la etiquete de apertura de la tabla y antes que todos los dem\u00e1s elementos. Se usa para definir el t\u00edtulo de la tabla.</li> </ul> <p>Ejemplo</p> <pre><code>&lt;table&gt;\n  &lt;caption&gt;Titulo de la tabla&lt;/caption&gt;\n  &lt;tr&gt;\n    &lt;th&gt;Encabezado 1&lt;/th&gt;\n    &lt;th&gt;Encabezado 2&lt;/th&gt;\n    &lt;th&gt;Encabezado 3&lt;/th&gt;\n  &lt;/tr&gt;\n  &lt;tr&gt;\n    &lt;td&gt;Celda 1&lt;/td&gt;\n    &lt;td&gt;Celda 2&lt;/td&gt;\n    &lt;td&gt;Celda 3&lt;/td&gt;\n  &lt;/tr&gt;\n  &lt;tr&gt;\n    &lt;td&gt;Celda 4&lt;/td&gt;\n    &lt;td&gt;Celda 5&lt;/td&gt;\n    &lt;td&gt;Celda 6&lt;/td&gt;\n  &lt;/tr&gt;\n&lt;/table&gt;\n</code></pre> Titulo de la tabla Encabezado 1 Encabezado 2 Encabezado 3 Celda 1 Celda 2 Celda 3 Celda 4 Celda 5 Celda 6 <p>La unificaci\u00f3n de celdas es un mecanismo mediante el cual se pueden combinar o fusionar dos o m\u00e1s celdas adyacentes en una tabla. Este efecto puede lograrse utilizando los atributos colspan, para unificaci\u00f3n horizontal, y rowspan, para unificaci\u00f3n vertical. Estos atributos pueden tomar un valor entero mayor a cero, que representa el n\u00famero de celdas que participar\u00e1n en la unificaci\u00f3n.</p> <p>Ejemplo</p> <pre><code>&lt;table&gt;\n  &lt;caption&gt;Titulo de la tabla&lt;/caption&gt;\n  &lt;tr&gt;\n    &lt;th&gt;Encabezado 1&lt;/th&gt;\n    &lt;th&gt;Encabezado 2&lt;/th&gt;\n    &lt;th&gt;Encabezado 3&lt;/th&gt;\n  &lt;/tr&gt;\n  &lt;tr&gt;\n    &lt;td&gt;Celda 1&lt;/td&gt;\n    &lt;td colspan=\"2\"&gt;Celda 2 y 3&lt;/td&gt;\n  &lt;/tr&gt;\n  &lt;tr&gt;\n    &lt;td&gt;Celda 4&lt;/td&gt;\n    &lt;td&gt;Celda 5&lt;/td&gt;\n    &lt;td&gt;Celda 6&lt;/td&gt;\n  &lt;/tr&gt;\n&lt;/table&gt;\n</code></pre> Titulo de la tabla Encabezado 1 Encabezado 2 Encabezado 3 Celda 1 Celda 2 y 3 Celda 4 Celda 5 Celda 6 <p>Tambi\u00e9n existen 3 elementos que pueden ayudar a organizar la informaci\u00f3n presentada en una tabla permitiendo una agrupaci\u00f3n sem\u00e1ntica de filas. \u00c9stos son: <code>&lt;thead&gt;</code> para agrupar las filas que presentan infromaci\u00f3n de encabezado; <code>&lt;tfoot&gt;</code> para contener a las filas que representan un pie o resumen; y <code>&lt;tbody&gt;</code> para representar un bloque de filas que consiste en un cuerpo de datos. Estos grupos tem\u00e1ticos son meramente sem\u00e1nticos, y se debe evitar su uso para temas de estilo.</p> <p>De igual forma existe un elemento <code>&lt;colgroup&gt;</code> para hacer agrupaciones sem\u00e1nticas de columnas.</p> <ol> <li> <p>Modificar el index.html para agregar una tabla para ordenar los campos del formulario en nuestra p\u00e1gina.</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"es\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"author\" content=\"[VUESTRO NOMBRE]\"&gt;\n    &lt;meta name=\"description\" content=\"Calculadora geod\u00e9sica que permite hacer la transformaci\u00f3n de coordenadas geogr\u00e1ficas en linea\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;link href=\"https://www.icgc.cat/bundles/microblauicgc/img/favicon.ico\" rel=\"shortcut icon\" type=\"image/x-icon\"&gt;\n    &lt;title&gt;Mi calculadora geod\u00e9sica&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;header&gt;\n        &lt;img src=\"https://www.uab.cat/Imatge/635/883/logop.gif\" alt=\"UAB\"&gt;\n        &lt;h1&gt;Mi calculadora geod\u00e9sica&lt;/h1&gt;\n    &lt;/header&gt;\n    &lt;main&gt;\n        &lt;div&gt;\n            &lt;table&gt;\n                &lt;tr&gt;\n                    &lt;th colspan=\"2\"&gt;&lt;label for=\"origen\"&gt;Sistema de referencia de origen&lt;/label&gt;&lt;/th&gt;\n                    &lt;th colspan=\"2\"&gt;&lt;label for=\"destino\"&gt;Sistema de referencia de destino&lt;/label&gt;&lt;/th&gt;\n                &lt;/tr&gt;\n                &lt;tr&gt;\n                    &lt;td colspan=\"2\"&gt;\n                        &lt;select id=\"origen\"&gt;\n                            &lt;option value=\"EPSG:4326\"&gt;EPSG:4326&lt;/option&gt; \n                            &lt;option value=\"EPSG:3857\"&gt;EPSG:3857&lt;/option&gt;\n                            &lt;option value=\"EPSG:25831\"&gt;EPSG:25831&lt;/option&gt;\n                            &lt;option value=\"EPSG:23031\"&gt;EPSG:23031&lt;/option&gt;\n                        &lt;/select&gt;\n                    &lt;/td&gt;\n                    &lt;td colspan=\"2\"&gt;\n                        &lt;select id=\"destino\"&gt;\n                            &lt;option value=\"EPSG:4326\"&gt;EPSG:4326&lt;/option&gt; \n                            &lt;option value=\"EPSG:3857\"&gt;EPSG:3857&lt;/option&gt;\n                            &lt;option value=\"EPSG:25831\"&gt;EPSG:25831&lt;/option&gt;\n                            &lt;option value=\"EPSG:23031\"&gt;EPSG:23031&lt;/option&gt;\n                        &lt;/select&gt;\n                    &lt;/td&gt;\n                &lt;/tr&gt;\n                &lt;tr&gt;\n                    &lt;td&gt;&lt;label for=\"lat\"&gt;Latitud&lt;/label&gt;&lt;/td&gt;\n                    &lt;td&gt;&lt;label for=\"lng\"&gt;Longitud&lt;/label&gt;&lt;/td&gt;\n                    &lt;td colspan=\"2\"&gt;&lt;/td&gt;\n                &lt;/tr&gt;\n                &lt;tr&gt;\n                    &lt;td&gt;&lt;input type=\"text\" id=\"lat\"&gt;&lt;/td&gt;\n                    &lt;td&gt;&lt;input type=\"text\" id=\"lng\"&gt;&lt;/td&gt;\n                    &lt;td colspan=\"2\"&gt;&lt;/td&gt;\n                &lt;/tr&gt;\n                &lt;tr&gt;\n                    &lt;td colspan=\"4\"&gt;&lt;button&gt;Transformar coordenadas&lt;/button&gt;&lt;/td&gt;\n                &lt;/tr&gt;\n            &lt;/table&gt;\n        &lt;/div&gt;\n        &lt;aside&gt;\n            &lt;ul&gt;\n                &lt;li&gt;&lt;a href=\"https://epsg.io/4326\" title=\"WGS 84 -- WGS84 - World Geodetic System 1984, used in GPS\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;EPSG:4326&lt;/a&gt;&lt;/li&gt;\n                &lt;li&gt;EPSG:3857&lt;/li&gt;\n                &lt;li&gt;EPSG:25831&lt;/li&gt;\n                &lt;li&gt;EPSG:23031&lt;/li&gt;\n            &lt;/ul&gt;\n        &lt;/aside&gt;\n    &lt;/main&gt;\n    &lt;footer&gt;\u00a9Copyright 2020 de nadie. Ning\u00fan derecho reservado.&lt;/footer&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> </li> <li> <p>Guardar y recargar la p\u00e1gina para ver que aparece el formulario ordenado dentro de la tabla.</p> </li> </ol> <p>Ejercicio 2.5 pt</p> <ol> <li>Cambiar el resto de elementos del listado de sistemas de referencia por el enlace correspondiente 0.5 pt.</li> <li>Hacer que la imagen del logo de la UAB sea un enlace que lleve a la web https://www.uab.cat/es/ y que se abra en una pesta\u00f1a/ventana nueva. 0.5 pt.</li> <li>Agregar un elemento <code>&lt;label&gt;</code> con el texto Respuesta en la celda que est\u00e1 junto a las celdas con las etiquetas Latitud y Longiud 0.5 pt.</li> <li>Agregar un elemento <code>&lt;textarea&gt;</code> en la celda que est\u00e1 junto a las celdas de los input de lat y lng 0.5 pt.</li> <li>Modificar la estructura de la \u00faltima fila de la tabla para agregar un bot\u00f3n con el texto \"Enviar resultado\" junto al bot\u00f3n de transformar coordenadas 0,5 pt.</li> </ol> <p>El resultado debe ser algo como esto </p>"},{"location":"elementos_html/#referencias","title":"Referencias","text":"<ol> <li> <p>https://developer.mozilla.org/es/docs/Web/HTML/Elemento/head \u21a9</p> </li> <li> <p>https://developer.mozilla.org/es/docs/Learn/HTML/Introduccion_a_HTML/Metados_en \u21a9</p> </li> <li> <p>https://developer.mozilla.org/es/docs/M%C3%B3vil/Viewport_meta_tag \u21a9</p> </li> <li> <p>https://www.htmlquick.com/es/tutorials/tables.html \u21a9</p> </li> </ol>"},{"location":"html/","title":"HTML - HyperText Markup Language - Lenguaje de Marcas de HipertextoHola Mundo!","text":"<p>HTML es un lenguaje de marcado que nos permite indicar la estructura de nuestro documento mediante etiquetas. Este lenguaje nos ofrece una gran adaptabilidad, una estructuraci\u00f3n l\u00f3gica y es f\u00e1cil de interpre\u00adtar tanto por humanos como por m\u00e1quinas. <sup>1</sup></p> <p>El HTML se escribe en forma de etiquetas, rodeadas por corchetes angulares (&lt;,&gt;,/). Ejemplo si escribimos <code>&lt;h1&gt;Hola Mundo!&lt;/h1&gt;</code> en nuestra p\u00e1gina veremos</p>"},{"location":"html/#elementos","title":"Elementos","text":"<p>Los elementos son la estructura b\u00e1sica de HTML. Los elementos tienen dos propiedades b\u00e1sicas: atributos y contenido. Cada atributo y contenido tiene ciertas restricciones para que se considere v\u00e1lido al documento HTML. Un elemento generalmente tiene una etiqueta de inicio (por ejemplo, <code>&lt;nombre-de-elemento&gt;</code>) y una etiqueta de cierre (por ejemplo, <code>&lt;/nombre-de-elemento&gt;</code>). Los atributos del elemento est\u00e1n contenidos en la etiqueta de inicio y el contenido est\u00e1 ubicado entre las dos etiquetas (por ejemplo, <code>&lt;nombre-de-elemento atributo=\"valor\"&gt;Contenido&lt;/nombre-de-elemento&gt;</code>). Algunos elementos, tales como <code>&lt;br&gt;</code>, no tienen contenido ni llevan una etiqueta de cierre</p> <p>Una p\u00e1gina que siempre hay que tener como referencia a la hora de consultar los elementos HTML es https://developer.mozilla.org/es/docs/Web/HTML</p>"},{"location":"html/#elementos-anidados","title":"Elementos anidados","text":"<p>Se pueden poner elementos dentro de otros elementos. Esto se llama anidamiento. Si quisi\u00e9ramos decir que nuestro gato es muy gru\u00f1\u00f3n, podr\u00edamos encerrar la palabra muy en un elemento <code>&lt;strong&gt;</code> para que aparezca destacada. Ejemplo <code>&lt;p&gt;Mi gato es &lt;strong&gt;muy&lt;/strong&gt; gru\u00f1\u00f3n.&lt;/p&gt;</code> nos da como resultado</p> <p>Mi gato es muy gru\u00f1\u00f3n.</p> <p>Hay una forma correcta e incorrecta de anidar. En el ejemplo anterior, primero abrimos el elemento p, luego abrimos el elemento strong. Para un anidamiento adecuado, primero debemos cerrar el elemento strong, antes de cerrar el p.</p> <p>El siguiente es un ejemplo de la forma incorrecta de anidar:</p> <pre><code>&lt;p&gt;Mi gato es &lt;strong&gt;muy gru\u00f1\u00f3n.&lt;/p&gt;&lt;/strong&gt;\n</code></pre>"},{"location":"html/#elementos-vacios","title":"Elementos vac\u00edos","text":"<p>No todos los elementos siguen el patr\u00f3n de etiqueta de apertura, contenido y etiqueta de cierre. Algunos elementos consisten solo en una etiqueta \u00fanica, que se utiliza generalmente para insertar/incrustar algo en el documento en el lugar donde se le quiere incluir. Por ejemplo, el elemento <code>&lt;img&gt;</code> inserta una imagen en la p\u00e1gina:</p> <pre><code>&lt;img src=\"https://raw.githubusercontent.com/mdn/beginner-html-site/gh-pages/images/firefox-icon.png\"&gt;\n</code></pre> <p>Este texto mostrar\u00e1 lo siguiente en tu p\u00e1gina:</p> <p></p>"},{"location":"html/#atributos","title":"Atributos","text":"<p>Los atributos contienen informaci\u00f3n extra sobre el elemento que no se mostrar\u00e1 en el contenido. En este caso, el atributo class asigna al elemento un identificador que se puede utilizar para dotarlo de informaci\u00f3n de estilo.</p> <p>Un atributo deber\u00eda tener:</p> <ul> <li>Un espacio entre este y el nombre del elemento. (Para un elemento con m\u00e1s de un atributo, los atributos tambi\u00e9n deben estar separados por espacios).</li> <li>El nombre del atributo, seguido por un signo igual.</li> <li>Un valor del atributo, rodeado de comillas de apertura y cierre.</li> </ul> <pre><code>&lt;a href=\"https://www.mozilla.org/\" title=\"La p\u00e1gina de inicio de Mozilla\" target=\"_blank\"&gt;Mozilla&lt;/a&gt;\n</code></pre>"},{"location":"html/#atributos-booleanos","title":"Atributos booleanos","text":"<p>En ocasiones puedes ver atributos escritos sin valor. Esto est\u00e1 permitido. Estos se denominan atributos booleanos. Los atributos booleanos solo pueden tener un valor, que generalmente es el mismo que el nombre del atributo.</p> <pre><code>&lt;input type=\"text\" disabled=\"disabled\"&gt;\n</code></pre> <p>Tambi\u00e9n se puede escribir de manera abreviada</p> <pre><code>&lt;input type=\"text\" disabled&gt;\n</code></pre>"},{"location":"html/#anatomia-de-un-html","title":"Anatom\u00eda de un HTML","text":""},{"location":"html/#estructura-basica-de-un-html","title":"Estructura b\u00e1sica de un HTML","text":"<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;meta charset=\"utf-8\"&gt;\n    &lt;title&gt;Mi p\u00e1gina de prueba&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;p&gt;Esta es mi p\u00e1gina&lt;/p&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <ol> <li><code>&lt;!DOCTYPE html&gt;</code>: anteriormente serv\u00eda para establecer el conjunto de reglas que la p\u00e1gina deb\u00eda seguir para que fuera considerado un buen HTML. En la actualidad se considera un legado hist\u00f3rico que hay que incluir para que todo funcione correctamente.</li> <li><code>&lt;html&gt;&lt;/html&gt;</code>: este elemento envuelve todo el contenido de la p\u00e1gina y se le conoce como elemento raiz.</li> <li><code>&lt;head&gt;&lt;/head&gt;</code>: es la cabecera y actua como contenedor para todos los par\u00e1metros que quieras incluir en el documento HTML que no ser\u00e1n visibles a los visitantes de la p\u00e1gina. Incluye cosas como palabras clave y la descripci\u00f3n de la p\u00e1gina que quieras mostrar en los resultados de b\u00fasqueda, as\u00ed como la hoja de estilo para formatear nuestro contenido, declaraciones de codificaci\u00f3n de caracteres y m\u00e1s.</li> <li><code>&lt;meta charset=\"utf-8\"&gt;</code>: estable la codificaci\u00f3n de caracteres que usar\u00e1 la p\u00e1gina. Ayuda a evitar problemas de caracteres especiales como los acentos</li> <li><code>&lt;title&gt;&lt;/title&gt;</code>: establece el t\u00edtulo de la p\u00e1gina, que es lo que aparece en la pesta\u00f1a del navegador.</li> <li><code>&lt;body&gt;&lt;/body&gt;</code>: contiene todo el contenido que se quiere mostrar en la p\u00e1gina</li> </ol>"},{"location":"html/#espacios-en-blanco-en-html","title":"Espacios en blanco en HTML","text":"<p>No importa cu\u00e1ntos espacios en blanco se utilicen (incluye tanto caracteres de espacio como saltos de l\u00ednea) el int\u00e9rprete de HTML reduce cada secuencia de espacio en blanco a un \u00fanico espacio al interpretar el c\u00f3digo. Entonces, \u00bfpor qu\u00e9 utilizar espacios en blanco? La respuesta est\u00e1 en la legibilidad.</p> <p>Los dos siguientes fragmentos de c\u00f3digo son equivalentes:</p> <pre><code>&lt;p&gt;M\u00e1ster Oficial en Geoinformaci\u00f3n.&lt;/p&gt;\n\n&lt;p&gt;M\u00e1ster    Oficial        en\n         Geoinformaci\u00f3n.&lt;/p&gt;\n</code></pre>"},{"location":"html/#caracteres-especiales-en-html","title":"Caracteres especiales en HTML","text":"<p>En HTML, los caracteres &lt;, &gt;,\",' y &amp; son caracteres especiales. Forman parte de la sintaxis HTML. Entonces, \u00bfc\u00f3mo incluye uno de estos caracteres especiales en tu texto? Por ejemplo, si deseas utilizar un menor que, y no hacer que se interprete como c\u00f3digo.</p> <p>Haces esto con referencias de caracteres. Estos son c\u00f3digos especiales que representan caracteres, para ser usados en estas circunstancias exactas. Cada referencia de caracter comienza con un signo de ampersand (&amp;) y finaliza con un punto y coma (;).</p> Caracter literal Equivalente de referencia de caracteres &lt; <code>&amp;lt;</code> &gt; <code>&amp;gt;</code> \" <code>&amp;quot;</code> ' <code>&amp;apos;</code> &amp; <code>&amp;amp;</code>"},{"location":"html/#comentarios-html","title":"Comentarios HTML","text":"<p>En HTML hay un mecanismo para escribir comentarios en el c\u00f3digo. Los comentarios son ignorados por el navegador y, por tanto, son invisibles para el usuario.</p> <p>Para convertir en un comentario una secci\u00f3n de contenido de tu archivo HTML, debes delimitarlo con los marcadores especiales <code>&lt;!--</code> y <code>--&gt;</code>. Por ejemplo:</p> <pre><code>&lt;p&gt;No soy un comentario&lt;/p&gt;\n\n&lt;!-- &lt;p&gt;\u00a1Yo s\u00ed!&lt;/p&gt; --&gt;\n</code></pre>"},{"location":"html/#idioma-principal","title":"Idioma principal","text":"<p>Merece la pena mencionar que puedes especificar el idioma de tu p\u00e1gina. Esto se puede hacer a\u00f1adiendo el atributo lang a la etiqueta de apertura del HTML. Para definir el idioma se usa el est\u00e1ndar ISO_639-1</p> <p>Esto resulta \u00fatil en muchos sentidos. Los motores de b\u00fasqueda indizar\u00e1n tu documento HTML de modo m\u00e1s efectivo si estableces el idioma, y resulta \u00fatil para que las personas con discapacidad visual que utilizan los lectores de pantalla.</p> <p>Ejemplo <pre><code>&lt;html lang=\"es\"&gt;\n</code></pre></p> <p>Tambi\u00e9n puedes establecer que las subsecciones de tu documento se reconozcan en diferentes idiomas. Por ejemplo, podemos establecer que nuestra secci\u00f3n de japon\u00e9s se reconozca como japon\u00e9s, de la siguiente manera:</p> <pre><code>&lt;p&gt;Ejemplo Japon\u00e9s: &lt;span lang=\"ja\"&gt;\u3054\u98ef\u304c\u71b1\u3044\u3002&lt;/span&gt;.&lt;/p&gt;\n</code></pre>"},{"location":"html/#elementos-de-bloque-vs-elementos-de-linea","title":"Elementos de bloque vs elementos de l\u00ednea","text":"<p>Un elemento de l\u00ednea es aquel que ocupa el espacio m\u00ednimo necesario en horizontal, y permite que otro elemento se coloque a su lado. En cambio un elemento de bloque, ocupa todo el ancho disponible y no permite que otro elemento se coloque a su lado (aunque tenga lugar suficiente).</p> <p>Ejemplo de elementos de linea</p> <pre><code>&lt;span&gt;hola &lt;/span&gt;\n&lt;span&gt;estamos&lt;/span&gt;\n&lt;span&gt;en l\u00ednea&lt;/span&gt;\n</code></pre> <p>Produce la siguiente salida</p> <p>hola  estamos en l\u00ednea</p> <p>Ejemplo de elementos de bloque</p> <pre><code>&lt;div&gt;hola &lt;/div&gt;&lt;div&gt;no estamos&lt;/div&gt;&lt;div&gt;en l\u00ednea&lt;/div&gt;\n</code></pre> <p>Produce la siguiente salida</p> hola  no estamos en l\u00ednea"},{"location":"html/#mi-primera-pagina","title":"Mi primera p\u00e1gina","text":"<ol> <li> <p>Crear una carpeta llamada web-mgeo</p> </li> <li> <p>Crear un archivo llamado index.html dentro de la carpeta web-mgeo</p> </li> <li> <p>Abrir el archivo con el editor de texto y escribir lo siguiente</p> </li> </ol> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"es\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;title&gt;Mi calculadora geod\u00e9sica&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    Mi calculadora geod\u00e9sica\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <ol> <li>Guardar el archivo y abrir la p\u00e1gina en el navegador para ver el resultado</li> </ol>"},{"location":"html/#referencias","title":"Referencias","text":"<ol> <li> <p>https://es.wikipedia.org/wiki/HTML \u21a9</p> </li> </ol>"},{"location":"introduccion_web/","title":"Introducci\u00f3n al desarrollo Web","text":""},{"location":"introduccion_web/#ciclo-peticionrespuesta","title":"Ciclo petici\u00f3n/respuesta","text":"<p>Cuando consultamos una p\u00e1gina Web existen tres elementos fundamentales que entran en juego: la propia red que hace de nexo entre sus elementos, nuestro ordenador que es el que realiza la petici\u00f3n de consulta, y la m\u00e1quina donde se encuentra almacenada esa p\u00e1gina que queremos consultar. <sup>1</sup></p> <p>Conocemos como servidor al elemento encargado de servir alg\u00fan tipo de contenido. En el ejemplo anterior, la m\u00e1quina que contiene la p\u00e1gina de inter\u00e9s es el servidor. Tambi\u00e9n se conoce como servidor el programa que, residiendo en esa m\u00e1quina, interpreta la petici\u00f3n y la procesa, sirviendo as\u00ed la p\u00e1gina.</p> <p>El cliente es responsable de pedir ese dato al servidor, tomarlo y trabajar con \u00e9l. Nuestro navegador Web es el cliente en este caso, ya que es el que realiza la petici\u00f3n.</p> <p>El proceso mediante el que podemos ver esa p\u00e1gina en un navegador Web comprende los cuatro pasos siguientes:</p> <ol> <li>El cliente realiza la petici\u00f3n.</li> <li>La petici\u00f3n se conduce a trav\u00e9s de la red hasta el servidor.</li> <li>El servidor busca la p\u00e1gina y la devuelve a trav\u00e9s de la red en caso de encontrarla, o devuelve una pagina de error en caso de no tenerla.</li> <li>El cliente recibe la p\u00e1gina y la representa.</li> </ol> <p> Ciclo petici\u00f3n/respuesta <sup>2</sup> <sub>Imagenes de Chaowalit Koetchuea, iconsmind.com, Alfredo @ IconsAlfredo.com.</sub></p>"},{"location":"introduccion_web/#front-end-y-back-end","title":"Front-End y Back-End","text":"<p>Front end y back end son t\u00e9rminos que se refieren a la separaci\u00f3n de intereses entre una capa de presentaci\u00f3n y una capa de acceso a datos, respectivamente. Seg\u00fan el contexto, para referirse a front end se usan otros t\u00e9rminos como frontal o interfaz de usuario,1\u200b mientras que a back end se le llama servidor, motor o modo administrador. <sup>3</sup></p>"},{"location":"introduccion_web/#programacion-por-capas","title":"Programaci\u00f3n por capas","text":"<p>La programaci\u00f3n por capas es un modelo de desarrollo software en el que el objetivo primordial es la separaci\u00f3n (desacoplamiento) de las partes que componen un sistema software o tambi\u00e9n una arquitectura cliente-servidor: l\u00f3gica de negocios, capa de presentaci\u00f3n y capa de datos. De esta forma, por ejemplo, es sencillo y mantenible crear diferentes interfaces sobre un mismo sistema sin requerirse cambio alguno en la capa de datos o l\u00f3gica. <sup>4</sup></p> <p>El m\u00e1s utilizado actualmente es el dise\u00f1o en tres niveles (o en tres capas).</p> <p> Arquitectura de tres capas</p>"},{"location":"introduccion_web/#capas","title":"Capas","text":"<ol> <li> <p>Capa de presentaci\u00f3n: la que ve el usuario, presenta el sistema al usuario, le comunica la informaci\u00f3n y captura la informaci\u00f3n del usuario. Tambi\u00e9n es conocida como interfaz gr\u00e1fica. Esta capa se comunica \u00fanicamente con la capa de negocio. (Front-End)</p> </li> <li> <p>Capa de negocio: es donde residen los programas que se ejecutan, se reciben las peticiones del usuario y se env\u00edan las respuestas tras el proceso. Se denomina capa de negocio o de l\u00f3gica del negocio porque es aqu\u00ed donde se establecen todas las reglas que deben cumplirse. Esta capa se comunica con la capa de presentaci\u00f3n, para recibir las solicitudes y presentar los resultados, y con la capa de datos, para solicitar al gestor de base de datos almacenar o recuperar datos de \u00e9l. (Back-End)</p> </li> <li> <p>Capa de datos: es donde residen los datos y es la encargada de acceder a los mismos. Est\u00e1 formada por uno o m\u00e1s gestores de bases de datos que realizan todo el almacenamiento de datos, reciben solicitudes de almacenamiento o recuperaci\u00f3n de informaci\u00f3n desde la capa de negocio. (Back-End)</p> </li> </ol> <p>Todas estas capas pueden residir en un \u00fanico ordenador, si bien lo m\u00e1s usual es que haya una multitud de ordenadores en donde reside la capa de presentaci\u00f3n (son los clientes de la arquitectura cliente/servidor). Las capas de negocio y de datos pueden residir en el mismo ordenador.</p>"},{"location":"introduccion_web/#que-hacen-htmlcssjs","title":"\u00bfQu\u00e9 hacen HTML/CSS/JS?","text":""},{"location":"introduccion_web/#the-white-cat-danced","title":"The White Cat Danced","text":"<p>The</p> <p>White = CSS - adjetivos/estilo</p> <p>Cat = HTML - sustantivos/estructura</p> <p>Danced = JS - verbos/acciones</p>"},{"location":"introduccion_web/#html","title":"HTML","text":"<p>HTML, siglas en ingl\u00e9s de HyperText Markup Language (\u2018lenguaje de marcas de hipertexto\u2019), hace referencia al lenguaje de marcado para la elaboraci\u00f3n de p\u00e1ginas web. Es un est\u00e1ndar que sirve de referencia del software que conecta con la elaboraci\u00f3n de p\u00e1ginas web en sus diferentes versiones, define una estructura b\u00e1sica y un c\u00f3digo (denominado c\u00f3digo HTML) para la definici\u00f3n de contenido de una p\u00e1gina web, como texto, im\u00e1genes, videos, juegos, entre otros.</p> <p>HTML es un lenguaje de marcado que nos permite indicar la estructura de nuestro documento mediante etiquetas. Este lenguaje nos ofrece una gran adaptabilidad, una estructuraci\u00f3n l\u00f3gica y es f\u00e1cil de interpre\u00adtar tanto por humanos como por m\u00e1quinas. <sup>5</sup></p> <p>\"Hipertexto\" se refiere a enlaces que conectan p\u00e1ginas web entre s\u00ed, ya sea dentro de un \u00fanico sitio web o entre sitios web. Los enlaces son un aspecto fundamental de la Web. <sup>6</sup></p>"},{"location":"introduccion_web/#css-o-hojas-de-estilo-en-cascada","title":"CSS o Hojas de estilo en cascada","text":"<p>CSS (siglas en ingl\u00e9s de Cascading Style Sheets), en espa\u00f1ol \u00abHojas de estilo en cascada\u00bb, es un lenguaje de dise\u00f1o gr\u00e1fico para definir y crear la presentaci\u00f3n de un documento estructurado escrito en un lenguaje de marcado.\u200b Es muy usado para establecer el dise\u00f1o visual de los documentos web, e interfaces de usuario escritas en HTML.</p> <p>CSS est\u00e1 dise\u00f1ado principalmente para marcar la separaci\u00f3n del contenido del documento y la forma de presentaci\u00f3n de este, caracter\u00edsticas tales como las capas o layouts, los colores y las fuentes. </p> <p>La especificaci\u00f3n CSS describe un esquema prioritario para determinar qu\u00e9 reglas de estilo se aplican si m\u00e1s de una regla coincide para un elemento en particular. Estas reglas son aplicadas con un sistema llamado de cascada, de modo que las prioridades son calculadas y asignadas a las reglas, as\u00ed que los resultados son predecibles. <sup>7</sup></p>"},{"location":"introduccion_web/#js-javascript","title":"JS (JavaScript)","text":"<p>JavaScript (abreviado com\u00fanmente JS) es un lenguaje de programaci\u00f3n interpretado, dialecto del est\u00e1ndar ECMAScript. Se define como orientado a objetos,\u200b basado en prototipos, imperativo, d\u00e9bilmente tipado y din\u00e1mico.</p> <p>Se utiliza principalmente del lado del cliente, implementado como parte de un navegador web permitiendo mejoras en la interfaz de usuario y p\u00e1ginas web din\u00e1micas y JavaScript del lado del servidor (Server-side JavaScript o SSJS). Su uso en aplicaciones externas a la web, por ejemplo en documentos PDF, aplicaciones de escritorio (mayoritariamente widgets) es tambi\u00e9n significativo. </p> <p>Note</p> <p>Java y JavaScript tienen sem\u00e1nticas y prop\u00f3sitos diferentes. </p> <p>Todos los navegadores modernos interpretan el c\u00f3digo JavaScript integrado en las p\u00e1ginas web. Para interactuar con una p\u00e1gina web se provee al lenguaje JavaScript de una implementaci\u00f3n del Document Object Model (DOM). <sup>8</sup></p>"},{"location":"introduccion_web/#document-object-model-dom","title":"Document Object Model (DOM)","text":"<p>Document Object Model o DOM ('Modelo de Objetos del Documento' o 'Modelo en Objetos para la Representaci\u00f3n de Documentos') es esencialmente una interfaz de plataforma que proporciona un conjunto est\u00e1ndar de objetos para representar documentos HTML, XHTML y XML, un modelo est\u00e1ndar sobre c\u00f3mo pueden combinarse dichos objetos, y una interfaz est\u00e1ndar para acceder a ellos y manipularlos. A trav\u00e9s del DOM, los programas pueden acceder y modificar el contenido, estructura y estilo de los documentos HTML y XML, que es para lo que se dise\u00f1\u00f3 principalmente. <sup>9</sup></p>"},{"location":"introduccion_web/#referencias","title":"Referencias","text":"<ol> <li> <p>https://volaya.github.io/libro-sig/chapters/Cliente_servidor.html \u21a9</p> </li> <li> <p>https://thenounproject.com \u21a9</p> </li> <li> <p>https://es.wikipedia.org/wiki/Front_end_y_back_end \u21a9</p> </li> <li> <p>https://es.wikipedia.org/wiki/Programaci%C3%B3n_por_capas \u21a9</p> </li> <li> <p>https://es.wikipedia.org/wiki/HTML \u21a9</p> </li> <li> <p>https://developer.mozilla.org/es/docs/Web/HTML \u21a9</p> </li> <li> <p>https://es.wikipedia.org/wiki/Hoja_de_estilos_en_cascada \u21a9</p> </li> <li> <p>https://es.wikipedia.org/wiki/JavaScript \u21a9</p> </li> <li> <p>https://es.wikipedia.org/wiki/Document_Object_Model \u21a9</p> </li> </ol>"},{"location":"js/","title":"JS - JavaScript","text":"<p>JavaScript (JS) es un lenguaje de programaci\u00f3n ligero, interpretado, o compilado justo-a-tiempo (just-in-time) con funciones de primera clase. Si bien es m\u00e1s conocido como un lenguaje de scripting (secuencias de comandos) para p\u00e1ginas web, y es usado en muchos entornos fuera del navegador, tal como Node.js, Apache CouchDB y Adobe Acrobat. JavaScript es un lenguaje de programaci\u00f3n basada en prototipos, multiparadigma, de un solo hilo, din\u00e1mico, con soporte para programaci\u00f3n orientada a objetos, imperativa y declarativa (por ejemplo programaci\u00f3n funcional). <sup>1</sup></p> <p>El est\u00e1ndar para JavaScript es ECMAScript. En 2015, ECMA International publico la sexta versi\u00f3n principal de ECMAScript, que oficialmente se llama ECMAScript 2015, y que inicialmente se denomin\u00f3 ECMAScript 6 o ES6. Desde entonces, los est\u00e1ndares ECMAScript est\u00e1n en ciclos de lanzamiento anuales. </p> <p>Note</p> <ul> <li>ECMAScript y JavaScript, a efectos pr\u00e1cticos son lo mismo</li> <li>La versi\u00f3n tradicional de JavaScript soportada por todos los navegadores, incluso los de hace 10 0 15 a\u00f1os, es ECMAScript 5.</li> <li>El gran cambio en el lenguaje se produjo con ECMAScript 2015 (que alguna gente llama ES6 aunque no es su nombre oficial).</li> <li>Sus n\u00fameros de versi\u00f3n que no coinciden con su nombre oficial. Por ejemplo la versi\u00f3n 7 ES7 su nombre oficial es ECMAScript 2016.</li> </ul> <p>Warning</p> <p>No confundas JavaScript con el lenguaje de programaci\u00f3n Java. Son dos lenguajes de programaci\u00f3n que tienen sintaxis, sem\u00e1ntica y usos muy diferentes.</p>"},{"location":"js/#que-podemos-hacer-con-javascript-en-el-navegador","title":"\u00bfQu\u00e9 podemos hacer con JavaScript en el navegador?","text":"<ul> <li>Almacenar valores \u00fatiles dentro de variables.</li> <li>Operaciones sobre fragmentos de texto, n\u00fameros, etc.</li> <li>Ejecutar c\u00f3digo en respuesta a ciertos eventos que ocurren en una p\u00e1gina web. Por ejemplo cu\u00e1ndo se hace click sobre un bot\u00f3n.</li> <li>Usar las APIs del navegador. Principalmente la API del DOM (Document Object Model) que te permite manipular HTML y CSS, crear, eliminar y cambiar el HTML, aplicar din\u00e1micamente nuevos estilos a tu p\u00e1gina, etc.</li> <li>Usar APIS de terceros. Por ejemplo la API de Google Maps, la API de Twitter, etc.</li> </ul> <p>Las API (interfaces de programaci\u00f3n de aplicaciones) son conjuntos de bloques de construcci\u00f3n de c\u00f3digo listos para usar que permiten a un desarrollador implementar programas que de otro modo ser\u00edan dif\u00edciles o imposibles de implementar. Hacen lo mismo para la programaci\u00f3n que los kits de muebles prefabricados para la construcci\u00f3n de viviendas \u2014 es mucho m\u00e1s f\u00e1cil tomar paneles precortados y atornillarlos para hacer una estanter\u00eda que elaborar el dise\u00f1o t\u00fa mismo, que ir y encontrar la madera correcta, cortar todos los paneles del tama\u00f1o y la forma correctos, buscar los tornillos del tama\u00f1o correcto y luego j\u00fantalos para hacer una estanter\u00eda.</p> <p>Un uso muy com\u00fan de JavaScript es modificar din\u00e1micamente HTML y CSS para actualizar una interfaz de usuario, a trav\u00e9s de la API del modelo de objetos del documento. Hay que tener en cuenta que el c\u00f3digo de tus documentos web generalmente se cargan y ejecutan en el orden en que aparece en la p\u00e1gina. Si JavaScript se carga e intenta ejecutarse antes de que se hayan cargado el HTML y el CSS al que afecta, pueden producirse errores, igualmente se produciran errores si queremos llamar a una API de terceros antes de cargarla. </p> <p>Note</p> <p>Cuando el navegador encuentra un bloque de JavaScript, generalmente lo ejecuta en orden, de arriba a abajo. Esto significa que debes tener cuidado con el orden en el que colocas las cosas.</p>"},{"location":"js/#como-agregas-javascript-a-tu-pagina","title":"\u00bfC\u00f3mo agregas JavaScript a tu p\u00e1gina?","text":"<p>JavaScript se aplica a tu p\u00e1gina HTML de manera similar a CSS. Mientras que CSS usa elementos <code>&lt;link&gt;</code> para aplicar hojas de estilo externas y elementos <code>&lt;style&gt;</code> para aplicar hojas de estilo internas a HTML, JavaScript solo necesita el elemento <code>&lt;script&gt;</code> tanto para la carga de JavaScript externo como el interno.</p> <p>Otra diferencia con respecto al CSS que se debe agregar en el <code>&lt;head&gt;</code> es que los elementos <code>&lt;script&gt;</code> se pueden agregar en cualquier parte de nuestra p\u00e1gina ya sea dentro del <code>&lt;head&gt;</code> o del <code>&lt;body&gt;</code>. Por norma general se agrega en el head al final de todo justo antes de la etiqueta de cierre <code>&lt;/head&gt;</code>, esto es despues de las declaraciones de estilo y/o al final del elemento body despues de todo nuestro codigo html justo antes de la etiqueta de cierre <code>&lt;/body&gt;</code>.   </p>"},{"location":"js/#javascript-interno","title":"JavaScript interno","text":"<p>Es el m\u00e9todo de ejecutar scripts m\u00e1s b\u00e1sico. En este caso se incluyen las instrucciones de c\u00f3digo dentro de la etiqueta <code>&lt;script&gt;</code>. Cuando el navegador lee la p\u00e1gina y encuentra un script va interpretando las l\u00edneas de c\u00f3digo y las va ejecutando una despu\u00e9s de otra.</p> <p>Ejemplo </p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"es\"&gt;\n&lt;head&gt;\n  &lt;meta charset=\"UTF-8\"&gt;\n  &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n  &lt;title&gt;Ejemplo ejecuci\u00f3n directa&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h1&gt;P\u00e1gina con Javascript&lt;/h1&gt;\n    &lt;p&gt;Esta p\u00e1gina tiene un cuadro de di\u00e1logo, que se mostrar\u00e1 nada m\u00e1s el navegador la procese.&lt;/p&gt;\n\n    &lt;script&gt;\n      var personas = 4;\n      var importeEntradas = 9.50;\n      alert('Necesitas ' + personas * importeEntradas + ' euros para que entren todos al cine');\n    &lt;/script&gt;\n\n    &lt;p&gt;Cuando el usuario pulse aceptar en el cuadro de di\u00e1logo, el navegador mostrar\u00e1 la p\u00e1gina completa.&lt;/p&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>En este ejemplo vemos como la ejecuci\u00f3n del c\u00f3digo bloquea la cargar de la p\u00e1gina.</p>"},{"location":"js/#javascript-externo","title":"JavaScript externo","text":"<p>La ventaja de utilizar un archivo externo de JavaScript reside en la posibilidad de compartir ese archivo entre un gran n\u00famero de documentos. Cuando un documento es cargado, el navegador detecta la referencia al archivo JavaScript y lo carga como si fueran parte del documento.</p> <p>Un archivo externo de c\u00f3digo puede ser insertando en el documento con el elemento <code>&lt;script&gt;</code>, teniendo el valor \"text/javascript\" en el atributo type (esto no es obligatorio en versiones modernas pero su uso es muy com\u00fan), y el URI del archivo JavaScript en el atributo src.</p> <pre><code>&lt;script src=\"archivo_externo.js\"&gt;&lt;/script&gt;\n&lt;script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\"&gt;&lt;/script&gt;\n</code></pre>"},{"location":"js/#estategias-para-la-carga-de-scripts","title":"Estategias para la carga de scripts","text":"<p>Hay una serie de problemas relacionados con la carga de los scripts en el momento adecuado. Un problema com\u00fan es que todo el HTML de una p\u00e1gina se carga en el orden en que aparece. Si est\u00e1s utilizando JavaScript para manipular elementos en la p\u00e1gina, tu c\u00f3digo no funcionar\u00e1 si el JavaScript se carga y procesa antes que el HTML que est\u00e1s intentando haga algo.</p> <p>Como vimos en el ejemplo anterior la ejecuci\u00f3n del c\u00f3digo Js bloquea la cargar de la p\u00e1gina. Por ejemplo si ponemos el JavaScript en el head el c\u00f3digo se carga y se ejecuta en el encabezado del documento, antes de analizar el cuerpo HTML, por lo que podr\u00edamos causar un error si intentamos acceder a alg\u00fan elemento del HTML.</p> <p>Una soluci\u00f3n pasada de moda (aunque se suele seguir usando) a este problema sol\u00eda ser colocar tu elemento script justo en la parte inferior del cuerpo (por ejemplo, justo antes de la etiqueta ), para que se cargara despu\u00e9s de haber procesado todo el HTML. El problema con esta soluci\u00f3n es que la carga/procesamiento del script est\u00e1 completamente bloqueado hasta que se haya cargado el DOM HTML. En sitios muy grandes con mucho JavaScript, esto puede causar un importante problema de rendimiento y ralentizar tu sitio.</p> <p>En realidad, hay dos formas \"modernas\" que podemos usar para evitar el problema del bloqueo de script: async y defer</p> <p>Los scripts cargados con el atributo async (ve m\u00e1s abajo) descargar\u00e1n el script sin bloquear el renderizado de la p\u00e1gina y lo ejecutar\u00e1 tan pronto como el script se termine de descargar. No tienes garant\u00eda de que los scripts se ejecuten en un orden espec\u00edfico, solo que no detendr\u00e1n la visualizaci\u00f3n del resto de la p\u00e1gina. Es mejor usar async cuando los scripts de la p\u00e1gina se ejecutan de forma independiente y no dependen de ning\u00fan otro script de la p\u00e1gina.</p> <pre><code>&lt;script async src=\"js/vendor/jquery.js\"&gt;&lt;/script&gt;\n\n&lt;script async src=\"js/script2.js\"&gt;&lt;/script&gt;\n\n&lt;script async src=\"js/script3.js\"&gt;&lt;/script&gt;\n</code></pre> <p>Usando async no puedes confiar en el orden en que se cargar\u00e1n los scripts. jquery.js se puede cargar antes o despu\u00e9s de script2.js y script3.js y si este es el caso, cualquier funci\u00f3n en esos scripts depende de jquery producir\u00e1 un error porque jquery no se ha cargado en el momento en que se ejecute el script.</p> <p>Los scripts cargados con el atributo defer se ejecutar\u00e1n en el orden en que aparecen en la p\u00e1gina y los ejecutar\u00e1 tan pronto como se descarguen el script y el contenido.</p> <pre><code>&lt;script defer src=\"js/vendor/jquery.js\"&gt;&lt;/script&gt;\n\n&lt;script defer src=\"js/script2.js\"&gt;&lt;/script&gt;\n\n&lt;script defer src=\"js/script3.js\"&gt;&lt;/script&gt;\n</code></pre> <p>Todos los scripts con el atributo defer se cargar\u00e1n en el orden en que aparecen en la p\u00e1gina. Entonces, en el segundo ejemplo, podemos estar seguros de que jquery.js se cargar\u00e1 antes que script2.js y script3.js y que script2.js se cargar\u00e1 antes de script3.js. No se ejecutar\u00e1n hasta que se haya cargado todo el contenido de la p\u00e1gina, lo cual es \u00fatil si tus scripts dependen de que el DOM est\u00e9 en su lugar (por ejemplo, modifican uno o m\u00e1s elementos de la p\u00e1gina).</p> <ul> <li>async y defer indican al navegador que descargue los scripts en un hilo separado, mientras que el resto de la p\u00e1gina (el DOM, etc.) se descarga, por lo que los scripts no bloquean la carga de la p\u00e1gina.</li> <li>Si tus scripts se deben ejecutar inmediatamente y no tienen ninguna dependencia, utiliza async.</li> <li>Si tus scripts necesitan esperar a ser procesados y dependen de otros scripts y/o del DOM en su lugar, c\u00e1rgalos usando defer y coloca tus elementos <code>&lt;script&gt;</code> correspondientes en el orden que desees que el navegador los ejecute.</li> </ul> <p>A continuaci\u00f3n vamos a agregar un archivo JavaScript (de momento vac\u00edo - sin c\u00f3digo) a nuestra calculadora</p> <ol> <li> <p>Crear una carpeta llamada js dentro de la carpeta web-mgeo</p> </li> <li> <p>Crear un archivo llamado script.js dentro de la carpeta js</p> </li> <li> <p>Modificar el index.html para agregar una JavaScript externo a nuestra calculadora</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"es\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"author\" content=\"[VUESTRO NOMBRE]\"&gt;\n    &lt;meta name=\"description\" content=\"Calculadora geod\u00e9sica que permite hacer la transformaci\u00f3n de coordenadas geogr\u00e1ficas en linea\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;link href=\"https://www.icgc.cat/bundles/microblauicgc/img/favicon.ico\" rel=\"shortcut icon\" type=\"image/x-icon\"&gt;\n    &lt;link rel=\"preconnect\" href=\"https://fonts.gstatic.com\"&gt;\n    &lt;link href=\"https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,300;0,400;0,700;1,400;1,700&amp;display=swap\" rel=\"stylesheet\"&gt;\n    &lt;link type=\"text/css\" href=\"css/estilos.css\" rel=\"stylesheet\"&gt;\n    &lt;title&gt;Mi calculadora geod\u00e9sica&lt;/title&gt;\n    &lt;script src=\"js/script.js\" defer&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;header&gt;\n        &lt;img src=\"https://www.uab.cat/Imatge/635/883/logop.gif\" alt=\"UAB\"&gt;\n        &lt;h1&gt;Mi calculadora geod\u00e9sica&lt;/h1&gt;\n    &lt;/header&gt;\n    &lt;main&gt;\n        &lt;div&gt;\n            &lt;table&gt;\n                &lt;tr&gt;\n                    &lt;th colspan=\"2\"&gt;&lt;label for=\"origen\"&gt;Sistema de referencia de origen&lt;/label&gt;&lt;/th&gt;\n                    &lt;th colspan=\"2\"&gt;&lt;label for=\"destino\"&gt;Sistema de referencia de destino&lt;/label&gt;&lt;/th&gt;\n                &lt;/tr&gt;\n                &lt;tr&gt;\n                    &lt;td colspan=\"2\"&gt;\n                        &lt;select id=\"origen\"&gt;\n                            &lt;option value=\"EPSG:4326\"&gt;EPSG:4326&lt;/option&gt; \n                            &lt;option value=\"EPSG:3857\"&gt;EPSG:3857&lt;/option&gt;\n                            &lt;option value=\"EPSG:25831\"&gt;EPSG:25831&lt;/option&gt;\n                            &lt;option value=\"EPSG:23031\"&gt;EPSG:23031&lt;/option&gt;\n                        &lt;/select&gt;\n                    &lt;/td&gt;\n                    &lt;td colspan=\"2\"&gt;\n                        &lt;select id=\"destino\"&gt;\n                            &lt;option value=\"EPSG:4326\"&gt;EPSG:4326&lt;/option&gt; \n                            &lt;option value=\"EPSG:3857\"&gt;EPSG:3857&lt;/option&gt;\n                            &lt;option value=\"EPSG:25831\"&gt;EPSG:25831&lt;/option&gt;\n                            &lt;option value=\"EPSG:23031\"&gt;EPSG:23031&lt;/option&gt;\n                        &lt;/select&gt;\n                    &lt;/td&gt;\n                &lt;/tr&gt;\n                &lt;tr&gt;\n                    &lt;td&gt;&lt;label for=\"lat\"&gt;Latitud&lt;/label&gt;&lt;/td&gt;\n                    &lt;td&gt;&lt;label for=\"lng\"&gt;Longitud&lt;/label&gt;&lt;/td&gt;\n                    &lt;td colspan=\"2\"&gt;&lt;/td&gt;\n                &lt;/tr&gt;\n                &lt;tr&gt;\n                    &lt;td&gt;&lt;input type=\"text\" id=\"lat\"&gt;&lt;/td&gt;\n                    &lt;td&gt;&lt;input type=\"text\" id=\"lng\"&gt;&lt;/td&gt;\n                    &lt;td colspan=\"2\"&gt;&lt;/td&gt;\n                &lt;/tr&gt;\n                &lt;tr&gt;\n                    &lt;td colspan=\"4\"&gt;&lt;button class=\"btn-tranformar\"&gt;Transformar coordenadas&lt;/button&gt;&lt;/td&gt;\n                &lt;/tr&gt;\n            &lt;/table&gt;\n        &lt;/div&gt;\n        &lt;aside&gt;\n            &lt;ul&gt;\n                &lt;li&gt;&lt;a href=\"https://epsg.io/4326\" title=\"WGS 84 -- WGS84 - World Geodetic System 1984, used in GPS\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;EPSG:4326&lt;/a&gt;&lt;/li&gt;\n                &lt;li&gt;EPSG:3857&lt;/li&gt;\n                &lt;li&gt;EPSG:25831&lt;/li&gt;\n                &lt;li&gt;EPSG:23031&lt;/li&gt;\n            &lt;/ul&gt;\n        &lt;/aside&gt;\n    &lt;/main&gt;\n    &lt;footer&gt;\u00a9Copyright 2020 de nadie. Ning\u00fan derecho reservado.&lt;/footer&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> </li> <li> <p>Guardar el archivo index.html</p> </li> </ol>"},{"location":"js/#comentarios","title":"Comentarios","text":"<p>Al igual que con HTML y CSS, es posible escribir comentarios en tu c\u00f3digo JavaScript que el navegador ignorar\u00e1 y que existen simplemente para proporcionar instrucciones a tus compa\u00f1eros desarrolladores sobre c\u00f3mo funciona el c\u00f3digo (y a ti, si regresas a tu c\u00f3digo despu\u00e9s de seis meses y no puedes recordar lo que hiciste). Los comentarios son muy \u00fatiles y deber\u00edas utilizarlos con frecuencia, especialmente para aplicaciones grandes. Hay dos tipos:</p> <ul> <li> <p>Un comentario de una sola l\u00ednea se escribe despu\u00e9s de una doble barra inclinada (//)</p> <pre><code>// soy un comentario\n</code></pre> </li> <li> <p>Un comentario de varias l\u00edneas se escribe entre las cadenas / y /</p> <pre><code>/*\nYo tambi\u00e9n soy\nun comentario\nde varias \nl\u00edneas\n*/\n</code></pre> </li> </ul>"},{"location":"js/#mayusculas-y-minusculas","title":"May\u00fasculas y min\u00fasculas","text":"<p>En Javascript se han de respetar las may\u00fasculas y las min\u00fasculas. Si nos equivocamos al utilizarlas el navegador responder\u00e1 con un mensaje de error, ya sea de sintaxis o de referencia indefinida. <sup>2</sup></p> <p>Por ejemplo, no es lo mismo la funci\u00f3n alert() que la funci\u00f3n Alert(). La primera muestra un texto en una caja de di\u00e1logo y la segunda (con la primera A may\u00fascula) simplemente no existe, a no ser que la definamos nosotros. Como se puede comprobar, para que la funci\u00f3n la reconozca JavaScript, se tiene que escribir toda en min\u00fascula. Otro claro ejemplo lo veremos cuando tratemos con variables, puesto que los nombres que damos a las variables tambi\u00e9n son sensibles a las may\u00fasculas y min\u00fasculas.</p>"},{"location":"js/#separacion-de-instrucciones","title":"Separaci\u00f3n de instrucciones","text":"<p>Las distintas instrucciones que contienen nuestros scripts se han de separar convenientemente para que el navegador no indique los correspondientes errores de sintaxis. Javascript tiene dos maneras de separar instrucciones. La primera es a trav\u00e9s del car\u00e1cter punto y coma (;) y la segunda es a trav\u00e9s de un salto de l\u00ednea.</p> <p>Por esta raz\u00f3n Las sentencias Javascript no necesitan acabar en punto y coma a no ser que coloquemos dos instrucciones en la misma l\u00ednea. No es una mala idea (principalmente cuando se est\u00e1 comenzando), acostumbrarse a utilizar el punto y coma despu\u00e9s de cada instrucci\u00f3n.</p>"},{"location":"js/#variables","title":"Variables","text":"<p>Una variable es un contenedor para un valor, como un n\u00famero que podr\u00edamos usar en una suma, o una cadena que podr\u00edamos usar como parte de una oraci\u00f3n. Pero una cosa especial acerca de las variables es que los valores que contienen pueden cambiar. Las variables pueden contener casi cualquier cosa, no solo cadenas y n\u00fameros. Las variables tambi\u00e9n pueden contener datos complejos e incluso funciones completas.</p> <p>Para usar una variable, primero debes crearla \u2014 precisamente, a esto lo llamamos declarar la variable. Para hacerlo, escribimos la palabra clave var o let seguida del nombre con el que deseas llamar a tu variable.</p> <pre><code>var miNombre;\nlet miEdad;\n</code></pre> <p>Una vez que hayas declarado una variable, la puedes iniciar con un valor. Para ello, escribe el nombre de la variable, seguido de un signo igual (=), seguido del valor que deseas darle.</p> <pre><code>miNombre = \"Pedro\";\nmiEdad = 39;\n</code></pre> <p>Puedes declarar e iniciar una variable al mismo tiempo. Esto es lo que har\u00e1s la mayor parte del tiempo, ya que es m\u00e1s r\u00e1pido que realizar las dos acciones en dos l\u00edneas separadas.</p> <pre><code>let miCoche = \"Toyota\";\n</code></pre> <p>JavaScript es un \"lenguaje tipado din\u00e1micamente\", lo cual significa que, a diferencia de otros lenguajes, no es necesario especificar qu\u00e9 tipo de datos contendr\u00e1 una variable (n\u00fameros, cadenas, matrices, etc.).</p> <p>Por ejemplo, si declaras una variable y le das un valor entre comillas, el navegador trata a la variable como una cadena (string), pero en cualquier momento se puede asignar otro valor.</p> <pre><code>let miVariable = \"Toyota\";\n...\n...\n...\nmiVariable = 400;\n</code></pre> <p>Se le llama \u00e1mbito de las variables al lugar donde estas est\u00e1n disponibles. Por lo general, cuando declaramos una variable hacemos que est\u00e9 disponible en el lugar donde se ha declarado. </p>"},{"location":"js/#variables-globales-y-locales","title":"Variables globales y locales","text":"<p>Las variables globales son las que est\u00e1n declaradas en el \u00e1mbito m\u00e1s amplio posible, que en Javascript es una p\u00e1gina web. Son accesibles desde cualquier lugar de la p\u00e1gina, es decir, desde el script donde se han declarado y todos los dem\u00e1s scripts de la p\u00e1gina.</p> <p>Tambi\u00e9n podremos declarar variables en lugares m\u00e1s acotados, como por ejemplo una funci\u00f3n. A estas variables les llamaremos locales. Cuando se declaren variables locales s\u00f3lo podremos acceder a ellas dentro del lugar donde se ha declarado, es decir, si la hab\u00edamos declarado en una funci\u00f3n solo podremos acceder a ella cuando estemos en esa funci\u00f3n. En general, son \u00e1mbitos locales cualquier lugar acotado por llaves.</p> <p>No hay problema en declarar una variable local con el mismo nombre que una global (aunque no es buena idea repetir nombres de variables), en este caso la variable global ser\u00e1 visible desde toda la p\u00e1gina, excepto en el \u00e1mbito donde est\u00e1 declarada la variable local ya que en este sitio ese nombre de variable est\u00e1 ocupado por la local.</p>"},{"location":"js/#diferencia-entre-var-y-let","title":"Diferencia entre var y let","text":"<p>Cuando se cre\u00f3 JavaScript por primera vez, solo exist\u00eda var que funciona bien en la mayor\u00eda de los casos, pero tiene algunos problemas en la forma en que trabaja. En versiones modernas de JavaScript ES6 se crea la nueva palabra clave let que funciona de manera algo diferente a var y soluciona los problemas que esta presenta.</p> <p>Algunas diferencias</p> <ul> <li>La elevaci\u00f3n (hoisting). Si usas var puedes acceder a la variable andes de declararla. Con let esto no funciona y da un error.</li> <li>Cuando usas var, puedes declarar la misma variable tantas veces como desees, pero con let no puedes.</li> <li>El scope (alcance) de la declaraci\u00f3n. Con var puedes terminar creando variables globales y reasignando valores sin darte cuenta.</li> </ul> <p>El uso de let mantendr\u00e1 tus funciones limpias y claras. Se dice que let es el nuevo var por lo tanto a partir de ES6 no hay razones para usar var.</p>"},{"location":"js/#constantes","title":"Constantes","text":"<p>Muchos lenguajes de programaci\u00f3n tienen el concepto de una constante \u2014 un valor que, una vez declarado no se puede cambiar. Hay muchas razones por las que querr\u00edas hacer esto, desde la seguridad (si un script de un tercero cambia dichos valores, podr\u00eda causar problemas) hasta la depuraci\u00f3n y la comprensi\u00f3n del c\u00f3digo (es m\u00e1s dif\u00edcil cambiar accidentalmente valores que no se deben cambiar y estropear cosas claras).</p> <p>En los primeros d\u00edas de JavaScript, las constantes no exist\u00edan. En JavaScript moderno ES6, tenemos la palabra clave const, que nos permite almacenar valores que nunca se pueden cambiar; funciona exactamente de la misma manera que let, excepto que a const no le puedes dar un nuevo valor.</p> <p>Si intentamos asignar un nuevo valor a una variable const nos dar\u00eda el siguiente error: \"Error Message : Uncaught TypeError: Assignment to constant variable.\".</p> <pre><code>const miCoche = \"Toyota\";\nmiCoche = \"Seat\";\n</code></pre> <p>Note</p> <p>Que no se puedan reasignar valores no significa que sean inmutables. Si el valor de una variable constante es \u00abalgo\u00bb mutable, como un array o un objeto, se pueden cambiar los valores de sus elementos.</p> <pre><code>const coches = [\"Toyota\", \"Seat\"];\ncoches[2] = \"Fiat\"; // es valido\ncoches = [\"Mercedes\", \"BMW\"]; // da error\n</code></pre>"},{"location":"js/#tipos-de-datos","title":"Tipos de datos","text":""},{"location":"js/#numerico","title":"Num\u00e9rico","text":"<p>S\u00f3lo existe un tipo de datos num\u00e9rico, al contrario que ocurre en la mayor\u00eda de los lenguajes m\u00e1s conocidos. Todos los n\u00fameros son por tanto del tipo num\u00e9rico, independientemente de la precisi\u00f3n que tengan o si son n\u00fameros reales o enteros.</p> <pre><code>let miEdad = 50;\n</code></pre>"},{"location":"js/#boleano","title":"Boleano","text":"<p>El tipo bolean, boolean en ingl\u00e9s, sirve para guardar un si o un no o dicho de otro modo, un verdadero o un falso. Se utiliza para realizar operaciones l\u00f3gicas, generalmente para realizar acciones si el contenido de una variable es verdadero (true) o falso (false). </p> <pre><code>let soyVerdadero = true;\n</code></pre>"},{"location":"js/#cadena-de-caracteres","title":"Cadena de caracteres","text":"<p>Javascript s\u00f3lo tiene un tipo de datos para guardar texto string y en el se pueden introducir cualquier n\u00famero de caracteres. Un texto puede estar compuesto de n\u00fameros, letras y cualquier otro tipo de caracteres y signos. Los textos se escriben entre comillas, dobles o simples.</p> <p>Todo lo que se coloca entre comillas es tratado como una cadena de caracteres independientemente de lo que coloquemos en el interior de las comillas. Por ejemplo, en una variable de texto podemos guardar n\u00fameros y en ese caso tenemos que tener en cuenta que las variables de tipo texto y las num\u00e9ricas no son la misma cosa y mientras que las de num\u00e9ricas nos sirven para hacer c\u00e1lculos matem\u00e1ticos las de texto no. </p> <pre><code>let soyTexto = \"500\";\nlet yoTambienTexto = \"Hola soy un texto compuesto por 41 letras\";\n</code></pre>"},{"location":"js/#caracteres-especiales","title":"Caracteres especiales","text":"<p>Hay una serie de caracteres especiales que sirven para expresar en una cadena de texto determinados controles como puede ser un salto de l\u00ednea o un tabulador. Estos son los caracteres de escape y se escriben con una notaci\u00f3n especial que comienza por una contra barra (una barra inclinada al rev\u00e9s de la normal '') y luego se coloca el c\u00f3digo del car\u00e1cter a mostrar.</p> <p>Un car\u00e1cter muy com\u00fan es el salto de l\u00ednea, que se consigue escribiendo \\n. Otro car\u00e1cter muy habitual es colocar unas comillas \\\", pues si colocamos unas comillas sin su car\u00e1cter especial nos cerrar\u00edan las comillas que colocamos para iniciar la cadena de caracteres.</p> <pre><code>let textoComillas = \"Hola soy un \\\"texto con comillas\\\"\";\nlet saltoDeLinea = \"Soy texto en \\n 2 l\u00edneas\";\n</code></pre>"},{"location":"js/#concatenar-cadenas","title":"Concatenar cadenas","text":"<p>Para unir cadenas en JavaScript el s\u00edmbolo de m\u00e1s (+), el mismo operador que usamos para sumar n\u00fameros, pero en este contexto hace algo diferente. Puedes unir texto con variables ya sean de texto o num\u00e9ricas.</p> <pre><code>let one = 'Hola, ';\nlet two = 'como est\u00e1s?';\nlet joined = one + two;\nlet miEdad = 45;\nlet miNombre = \"Carlos\";\nlet esMiEdad = \"Me llamo \" + miNombre + \" y tengo \" + miEdad + \" a\u00f1os.\";\nlet myFecha = \"19\" + \"67\"; //resultado \"1967\"\n</code></pre>"},{"location":"js/#plantillas-literales","title":"Plantillas literales","text":"<p>Las plantillas literales son cadenas literales que habilitan el uso de expresiones incrustadas. Con ellas, es posible utilizar cadenas de caracteres de m\u00e1s de una l\u00ednea, y funcionalidades de interpolaci\u00f3n de cadenas de caracteres. Las plantillas literales se delimitan con el caracter de comillas o tildes invertidas () (grave accent), en lugar de las comillas sencillas o dobles.</p> <p>Las plantillas de cadena de caracteres pueden contener marcadores, identificados por el signo de d\u00f3lar y envueltos en llaves (${expresi\u00f3n}). Las expresiones contenidas en los marcadores, junto con el texto entre ellas, son enviados como argumentos a una funci\u00f3n. La funci\u00f3n por defecto sencillamente concatena las partes para formar una \u00fanica cadena de caracteres. Para m\u00e1s informaci\u00f3n sobre plantilla etiquetadas, anidadas, etc. ver template_strings <sup>3</sup> </p> <pre><code>let expresion = \"literales\";\nlet cadena = `texto de cadena de caracteres ${expresion} texto adicional`;\n</code></pre> <p>Los caracteres de fin de l\u00ednea encontrados forman parte de la plantilla literal. Utilizando cadenas de caracteres normales, ser\u00eda necesario utilizar la siguiente sintaxes para producir cadenas de m\u00e1s de una l\u00ednea:</p> <pre><code>let multiLinea = 'l\u00ednea 1 de cadena de texto\\n' +\n'l\u00ednea 2 de cadena de texto');\n</code></pre> <p>Utilizando plantillas literales, se puede obtener el mismo resultado de la siguiente forma:</p> <pre><code>let multiLinea = `l\u00ednea 1 de la cadena de texto\nl\u00ednea 2 de la cadena de texto`);\n</code></pre> <p>Se pueden insetar expresiones dentro de cadenas de caracteres normales como por ejemplo:</p> <pre><code>let a = 5;\nlet b = 10;\nlet repuesta = `Quince es ${a + b} y\nno ${2 * a + b}.`;\n</code></pre> <p>En lineas generales es recomentable usar plantillas literales en lugar de la concatenaci\u00f3n de cadenas de caracteres.</p>"},{"location":"js/#matrices-o-arreglos","title":"Matrices o Arreglos","text":"<p>Las matrices Array son una manera ordenada de almacenar una lista de elementos de datos bajo un solo nombre de variable. Las matrices se describen como \"objetos tipo lista\"; b\u00e1sicamente son objetos individuales que contienen m\u00faltiples valores almacenados en una lista. Si no tuvieramos matrices, tendr\u00edamos que almacenar cada elemento en una variable separada.</p> <p>Las matrices se construyen con corchetes, que contiene una lista de elementos separdos por comas. Puedes almacenar cualquier elemento en una matriz \u2014 cadena, n\u00famero, objeto, otra variable, incluso otra matriz.</p> <pre><code>let compra = [\"pan\", \"leche\", \"queso\", \"hummus\", \"noodles\"];\nlet sequence = [1, 1, 2, 3, 5, 8, 13];\nlet random = [\"tree\", 795, [0, 1, 2]];\n</code></pre>"},{"location":"js/#acceder-y-modificar-elementos-de-la-matriz","title":"Acceder y modificar elementos de la matriz","text":"<p>Se puede acceder a elementos individuales en la matriz mediante la notaci\u00f3n de corchetes, indicando la posici\u00f3n del elemento que se quiera acceder</p> <p>Warning</p> <p>Las posiciones dentro de las matrices se comienzan a contar desde 0. El primer elementos de la matriz tiene la posici\u00f3n 0. </p> <pre><code>let compra = [\"pan\", \"leche\", \"jam\u00f3n\", \"hummus\", \"noodles\"];\nlet pan = compra[0];\nlet charcuteria = compra[2];\n</code></pre> <p>Puedes modificar un elemento en una matriz simplemente dando a un item de la matriz un nuevo valor.</p> <pre><code>let compra = [\"pan\", \"leche\", \"jam\u00f3n\", \"hummus\", \"noodles\"];\ncompra[0] = \"tomates\";\n</code></pre> <p>Ten en cuenta que una matriz dentro de otra matriz se llama matriz multidimensional. Puedes acceder a los elementos de una matriz que est\u00e9n dentro de otra, encadenando dos pares de corchetes.</p> <pre><code>let random = [\"tree\", 795, [0, 3, 2]];\nlet tres = random[2][1];\n</code></pre>"},{"location":"js/#funciones","title":"Funciones","text":"<p>En t\u00e9rminos generales, una funci\u00f3n es un \"subprograma\" que puede ser llamado por c\u00f3digo externo (o interno en caso de recursi\u00f3n) a la funci\u00f3n. Al igual que el programa en s\u00ed mismo, una funci\u00f3n se compone de una secuencia de declaraciones, que conforman el llamado cuerpo de la funci\u00f3n. Se pueden pasar valores a una funci\u00f3n, y la funci\u00f3n puede devolver un valor. <sup>4</sup></p> <p>En JavaScript, las funciones son objetos de primera clase, es decir, son objetos y se pueden manipular y transmitir al igual que cualquier otro objeto. Concretamente son objetos Function.</p> <p>JavaScript tiene integradas varias funciones de nivel superior como por ejemplo parseInt(), decodeURI(), etc.</p>"},{"location":"js/#declaracion-de-una-funcion","title":"Declaracion de una funci\u00f3n","text":"<p>Una definici\u00f3n de funci\u00f3n (tambi\u00e9n denominada declaraci\u00f3n de funci\u00f3n o expresi\u00f3n de funci\u00f3n) consta de la palabra clave function, seguida de:</p> <ul> <li>El nombre de la funci\u00f3n.</li> <li>Una lista de par\u00e1metros o argumentos de la funci\u00f3n, entre par\u00e9ntesis y separados por comas.</li> <li>Las declaraciones de JavaScript que definen la funci\u00f3n, encerradas entre llaves, { ... }.</li> </ul> <pre><code>function suma(a, b) {\n    return a + b;\n}\n</code></pre> <p>En el ejemplo anterior tenemos a la funci\u00f3n suma que toma 2 par\u00e1metros a y b y devuelve un valor con la suma de a+b. La instrucci\u00f3n return especifica el valor devuelto por la funci\u00f3n.</p> <p>Las funciones tambi\u00e9n se pueden crear mediante una expresi\u00f3n function. Esta funci\u00f3n puede ser an\u00f3nima; no tiene por qu\u00e9 tener un nombre. Por ejemplo, la funci\u00f3n suma se podr\u00eda haber definido como:</p> <pre><code>const suma = function(a, b) {\n    return a + b;\n}\n</code></pre> <p>Las expresi\u00f3n function son convenientes cuando se pasa una funci\u00f3n como argumento a otra funci\u00f3n.</p>"},{"location":"js/#parametros-de-una-funcion","title":"Par\u00e1metros de una funci\u00f3n","text":"<p>Existe una variable \"especial\" llamada arguments que es similar a una matriz. Esta variable guarda todos los argumentos de la funci\u00f3n. </p> <pre><code>const suma = function(a, b) {\n    let parametroB = arguments[1]; \n}\n</code></pre> <p>Usando el objeto arguments, puedes llamar a una funci\u00f3n con m\u00e1s argumentos de los que formalmente declara aceptar. Esto suele ser \u00fatil si no sabes de antemano cu\u00e1ntos argumentos se pasar\u00e1n a la funci\u00f3n.</p>"},{"location":"js/#parametros-predeterminados","title":"Par\u00e1metros predeterminados","text":"<p>En el pasado (pre ES6), la estrategia general para establecer valores predeterminados era probar los valores de los par\u00e1metros en el cuerpo de la funci\u00f3n y asignar un valor si eran undefined.</p> <p>Con par\u00e1metros predeterminados, ya no es necesaria una verificaci\u00f3n manual en el cuerpo de la funci\u00f3n. Simplemente puedes poner un valor predeterminado para alg\u00fan par\u00e1metro en el encabezado de la funci\u00f3n.</p> <pre><code>const suma = function(a, b = 2) {\n    return a + b;\n}\n</code></pre>"},{"location":"js/#parametros-rest","title":"Par\u00e1metros rest","text":"<p>La sintaxis del par\u00e1metro rest (resto de par\u00e1metros) nos permite representar un n\u00famero indefinido de argumentos como una matriz. Para ello ponemos tres puntos antes del nombre del par\u00e1metro</p> <pre><code>const suma = function(a, ...masParametros) {\n    ...\n    ...\n}\nsuma(1, 2, 4, 7); //en este caso ...masParametros ser\u00eda igual a [2, 4, 7]\n</code></pre>"},{"location":"js/#funciones-flecha","title":"Funciones flecha","text":"<p>Dos factores influyeron en la introducci\u00f3n de las funciones flecha son: funciones m\u00e1s cortas y no vinculantes de this.</p> <p>Hasta las funciones flecha, cada nueva funci\u00f3n defin\u00eda su propio valor this, lo que causaba algunos problemas. Para m\u00e1s detalles sobre funciones flecha https://developer.mozilla.org/es/docs/Web/JavaScript/Referencia/Funciones/Arrow_functions y https://hacks.mozilla.org/2015/06/es6-in-depth-arrow-functions/</p> <pre><code>const suma = (a, b) =&gt; {\n    return a + b;\n}\n\nconst resta = (a, b) =&gt; a - b;\n\nconst cuadrado = a =&gt; a * a;\n</code></pre>"},{"location":"js/#ejercicios-extras","title":"Ejercicios extras","text":"<ul> <li>W3 Schools JS Exercises</li> <li>Exercism</li> <li>JS Challenger</li> </ul>"},{"location":"js/#referencias","title":"Referencias","text":"<ol> <li> <p>https://developer.mozilla.org/es/docs/Web/JavaScript \u21a9</p> </li> <li> <p>https://desarrolloweb.com/articulos/507.php \u21a9</p> </li> <li> <p>https://developer.mozilla.org/es/docs/Web/JavaScript/Referencia/template_strings \u21a9</p> </li> <li> <p>https://developer.mozilla.org/es/docs/Web/JavaScript/Referencia/Funciones \u21a9</p> </li> </ol>"},{"location":"js_async/","title":"Programaci\u00f3n as\u00edncrona con JS","text":"<p>Normalmente, el c\u00f3digo de un programa determinado se ejecuta directamente, y solo sucede una cosa a la vez. Si una funci\u00f3n se basa en el resultado de otra funci\u00f3n, tiene que esperar a que la otra funci\u00f3n termine y regrese, y hasta que eso suceda, todo el programa se detiene esencialmente desde la perspectiva del usuario. </p> <p>Cuando una app web se ejeucta en el navegador y ejecuta un gran bloque de c\u00f3digo sin retornar el control al navegador, este mismo puede parecer que se congela. Esto es llamado blocking; el navegador es bloqueado para que el usuario no pueda seguir interactuando y realizando otras tareas hasta que la app web retorne el control sobre el procesador. <sup>1</sup></p> <p>JavaScript es tradicionalmente single-threaded. A\u00fan con m\u00faltiples procesadores, solo se puede ejecutar tareas en un solo hilo, llamado el hilo principal (main thread). Actualmente existen herramientas de JavaScript como los Web workers que permiten enviar parte del procesamiento a un hilo separado.</p> <p>Los web workers son muy \u00fatiles, pero tienen limitaciones. La mayor es que no pueden acceder al DOM \u2014 no se puede logar que un worker modifique directamente algo de la UI. El segundo problema es que a pesar de que el c\u00f3digo se ejecuta en un worker no es bloqueador, es simplemente sincr\u00f3nico. Esto se convierte en un problema cuando una funci\u00f3n depender en los resultados de m\u00faltiples procesos previos para funcionar.</p> <p>Para arreglar dichos problemas, los navegadores nos permiten ejecutar ciertas operaciones asincr\u00f3nicamente. Caracter\u00edsticas como las Promises permiten establecer la ejecuci\u00f3n de una operaci\u00f3n (por ejemplo, buscar una imagen desde un servidor), y luego esperar hasta que el resultado sea retornado antes de ejecutar otra operaci\u00f3n. Como la operaci\u00f3n est\u00e1 sucediendo en otro lugar, el hilo principal no est\u00e1 bloqueado mientras la operaci\u00f3n asincr\u00f3nica est\u00e1 siendo procesada.</p> <p>Podemos pensar en S\u00edncrono como algo bloqueante en donde toda la operaci\u00f3n se ejecuta de forma secuencial y por lo tanto, debemos esperar a que se complete para procesar el resultado. Por el contrario algo As\u00edncrono es no bloqueante donde la finalizaci\u00f3n de la operaci\u00f3n se se\u00f1ala m\u00e1s tarde lo que hace posible que la respuesta sea procesada en diferido. <sup>2</sup></p> <p>Ejemplo</p> <pre><code>function myGreeting() {\n\n   console.log(\"Antes\");\n\n  setTimeout(function() {\n    console.log('Hello, Mr. Universe!');\n  }, 2000);\n\n  console.log(\"Despues\");\n\n}\n\nmyGreeting();\n</code></pre>"},{"location":"js_async/#patrones-asincronos-en-js","title":"Patrones as\u00edncronos en JS","text":""},{"location":"js_async/#callbacks","title":"Callbacks","text":"<p>Los callbacks son la pieza clave para que Javascript pueda funcionar de forma as\u00edncrona. De hecho, el resto de patrones as\u00edncronos en Javascript est\u00e1 basado en callbacks de un modo u otro, simplemente cambian la sintaxis para trabajar con ellos m\u00e1s c\u00f3modamente.</p> <p>Un callback no es m\u00e1s que una funci\u00f3n que se pasa como argumento de otra funci\u00f3n, y que ser\u00e1 invocada para completar alg\u00fan tipo de acci\u00f3n. Generalmente la funci\u00f3n callback se ejecuta cuando la funci\u00f3n principal termina y normalmente hacemos uso de los valores que resultan de la funci\u00f3n principal.</p> <p>Ejemplo</p> <pre><code>setTimeout(function(){\n  console.log(\"Hola Mundo con retraso!\");\n}, 1000)\n\n//Tambi\u00e9n podemos pasar una variable que contenga una funci\u00f3n\nconst myCallback = () =&gt; console.log(\"Hola Mundo con retraso!\");\nsetTimeout(myCallback, 1000);\n</code></pre> <p>Otro ejemplo</p> <pre><code>function saludar(nombre, callback) {\n    const saludo = `Hola ${nombre}`;\n    callback(saludo); \n}\n\nsaludar(\"Pepe\", function(resultado){\n    console.log(resultado);\n});\n</code></pre>"},{"location":"js_async/#callback-hell","title":"Callback Hell","text":"<p>Los callbacks tambi\u00e9n pueden lanzar a su vez llamadas as\u00edncronas, asi que pueden anidarse tanto como se desee. Inconveniente, podemos acabar con c\u00f3digo como este:</p> <pre><code>setTimeout(function(){\n  console.log(\"Etapa 1 completada\");\n  setTimeout(function(){\n    console.log(\"Etapa 2 completada\");\n    setTimeout(function(){\n      console.log(\"Etapa 3 completada\");\n      setTimeout(function(){\n        console.log(\"Etapa 4 completada\");\n        // Podr\u00edamos continuar hasta el infinito...\n      }, 4000);\n    }, 3000);\n  }, 2000);\n}, 1000);\n</code></pre> <p>\u00c9ste es uno de los inconvenientes cl\u00e1sicos de los callbacks, adem\u00e1s de la indentaci\u00f3n, resta legibilidad, dificulta su mantenimiento y a\u00f1ade complejidad ciclom\u00e1tica. Al Callback Hell tambi\u00e9n se le conoce como Pyramid of Doom o Hadouken.</p> <p>Es muy com\u00fan caer en el Callback Hell cuando tenemos que usar valores calculados previamente por diferentes funciones as\u00edncronas.</p> <p>Ejemplo</p> <pre><code>function comprarTaquito(taquitosActuales, callback){\n  const taquitos = taquitosActuales + 1\n  callback(taquitos) \n}\n\nfunction comprarTresTaquitos(taquitosActuales, callback){\n  const taquitos = taquitosActuales + 3\n  callback(taquitos) \n}\n\nfunction comprarCincoTaquitos(taquitosActuales, callback){\n  const taquitos = taquitosActuales + 5\n  callback(taquitos) \n}\n\n// no tengo taquitos :( \nlet tacos = 0\n\n//compro 1 taco\ncomprarTaquito(tacos, function(primeraCompra){\n  console.log('taquitos: ' + primeraCompra)\n    //una vez compre mi primer taco, compro 3 m\u00e1s !\n    comprarTresTaquitos(primeraCompra, function(segundaCompra){\n      console.log('taquitos: ' + segundaCompra)\n        //una vez compre mi primer taco y 3 m\u00e1s, compro 5 extra :o\n        comprarCincoTaquitos(segundaCompra, function(tercerCompra){\n          console.log('taquitos: '+ tercerCompra)\n    })\n  })\n});\n</code></pre>"},{"location":"js_async/#promises","title":"Promises","text":"<p>Una promise (promesa) es un objeto que representa el resultado de una operaci\u00f3n as\u00edncrona, como comentamos anteriormente las promesas se basan en callbacks pero mejora la sintaxis. Cuando llamamos a una funci\u00f3n implementada con este patr\u00f3n, dicha funci\u00f3n nos retornar\u00e1 inmediatamente una promesa como garant\u00eda de que la operaci\u00f3n as\u00edncrona finalizara en alg\u00fan momento, ya sea con \u00e9xito o con un fallo. </p> <p>Una vez tenemos la promesa debemos usar un pas de callback: uno para el caso en el que todo va bien (resoluci\u00f3n de la promesa resolve) y otro para el caso en el que hay un fallo (rechazo de la promesa reject).</p> <p>Sintaxis</p> <pre><code>const promise = new Promise(function(resolve, reject) {\n  // codigo\n  if (/*si todo sale bien*/) {\n    resolve(\"Promesa resuelta\");\n  }\n  else {\n    reject(Error(\"Algo sali\u00f3 mal\"));\n  }\n});\n</code></pre> <p>Ejemplo</p> <pre><code>const promise = new Promise((resolve, reject) =&gt; {\n    const number = Math.floor(Math.random() * 10);\n\n    setTimeout(\n        () =&gt; number &gt; 5\n            ? resolve(number)\n            : reject(new Error('Menor a 5')),\n        1000\n    );\n});\n\npromise\n    .then(number =&gt; console.log(number))\n    .catch(error =&gt; console.error(error));\n</code></pre> <p>Una caracter\u00edstica interesante de las promesas es que pueden ser encadenadas. Esto es posible gracias a que la llamada .then() tambi\u00e9n devuelve una promesa. Esta nueva promesa devuelta ser\u00e1 resuelta con el valor que retorne el callback de resoluci\u00f3n original (el que hemos pasado al primer then()). Con esto evitamos el Callback Hell.</p> <p>Para evitar verbosidad, podemos encadenar las promesas de un modo mas corto, empleando el m\u00e9todo .catch(rejectCallback) para catpurar cualquier rechazo que ocurra en cualesquiera de las promesas encadenadas. Solo se necesita una \u00fanica sentencia catch() al final de una cadena de promesas.</p> <p>Ejemplo</p> <pre><code>fetch(document.URL.toString())\n  .then(result =&gt; {\n    console.log(result);\n    return \"Primer Then\"\n  })\n  .then((result) =&gt; console.log(`Fetch completado, p\u00e1gina mostrada despues de ${result}`))\n  .catch(e =&gt; console.log(`Error capturado:  ${e}`));\n</code></pre> <p>La plantilla t\u00edpica para crear funciones as\u00edncronas usando promesas es la siguiente:</p> <pre><code>const myAsyncFunction = () =&gt; {\n  return new Promise((resolve, reject) =&gt; {\n\n    // Carga de la promesa (normalmente tareas as\u00edncronas).\n\n    if ( /* eval\u00faa condici\u00f3n */ ) {\n      resolve(`\u00c9xito!`);\n    } else {\n      reject(`Fallo!`);\n    }\n  });\n}\n</code></pre> <p>Ejemplo</p> <pre><code>const checkServer = (url) =&gt; {\n  return new Promise((resolve, reject) =&gt; { \n    fetch(url)\n      .then(response =&gt; resolve(`Estado del Servidor: ${response.status === 200 ? \"OK\" : \"NOT OK\"}`))\n      .catch(() =&gt; reject(`Error al localizar URL`));\n  });\n}\n\ncheckServer(document.URL.toString())\n  .then(result =&gt; console.log(result))\n  .catch(e =&gt; console.log(e));\n</code></pre> <p>Es muy frecuente consumir m\u00e1s de una promesa a la vez y habitualmente es deseable que se ejecuten en paralelo. Es decir, lanzamos varias tareas as\u00edncronas al mismo tiempo y recogemos sus correspondientes promesas a la espera de que una, o todas, se resuelvan. Para estos casos contamos con dos herramientas de composici\u00f3n de gran utilidad: Promise.all() y Promise.race().</p>"},{"location":"js_async/#promiseall","title":"Promise.all()","text":"<p>Promise.all() acepta un array de promesas y devuelve una nueva promesa cuya resoluci\u00f3n se completar\u00e1 con \u00e9xito una vez que todas las promesas originales se hayan resuelto satisfactoriamente, o en caso de fallo, ser\u00e1 rechazada en cuanto una de las promesas originales sea rechazada. Esta promesa compuesta, adem\u00e1s, nos devolver\u00e1 un array con los resultados de cada una de las promesas originales.</p> <p>Ejemplo </p> <pre><code>const p1 = Promise.resolve(3);\nconst p2 = 1337;\nconst p3 = new Promise((resolve, reject) =&gt; {\n  setTimeout(resolve, 100, \"foo\");\n});\n\nPromise.all([p1, p2, p3]).then(values =&gt; {\n  console.log(values); // [3, 1337, \"foo\"]\n}).catch(reason =&gt; {\n  console.log(reason)\n});\n</code></pre>"},{"location":"js_async/#promiserace","title":"Promise.race()","text":"<p>Promise.race() es similar con la diferencia ser\u00e1 resuelta tan pronto como se resuelva alguna de las promesas originales, ya sea con \u00e9xito o fallo. De ah\u00ed el nombre del m\u00e9todo, es una competici\u00f3n, la primera en terminar gana.</p> <p>Ejemplo</p> <pre><code>const p1 = new Promise( (resolve, reject) =&gt; {\n    setTimeout(resolve, 500, \"uno\");\n});\nconst p2 = new Promise( (resolve, reject) =&gt; {\n    setTimeout(resolve, 100, \"dos\");\n});\n\nPromise.race([p1, p2]).then( value =&gt; {\n  console.log(value); // \"dos\"\n  // Ambas se resuelven, pero la p2 antes.\n}).catch(reason =&gt; {\n  console.log(reason)\n});\n</code></pre>"},{"location":"js_async/#async-await","title":"Async / Await","text":"<p>Las promesas supusieron un gran salto en Javascript al introducir una mejora sustancial sobre los callbacks y un manejo m\u00e1s elegante de nuestras tareas as\u00edncronas. Sin embargo, tambi\u00e9n pueden llegar a ser tediosas. Las funciones async y la palabra clave await surgieron para simplificar el manejo de las promesas. Son puro az\u00facar para hacer las promesas m\u00e1s amigables, escribir c\u00f3digo m\u00e1s sencillo, reducir el anidamiento y mejorar la trazabilidad al depurar. Pero recuerda, async \\ await y las promesas son lo mismo en el fondo.</p> <p>La palabra clave async declara una funci\u00f3n como as\u00edncrona e indica que una promesa ser\u00e1 autom\u00e1ticamente devuelta, se a\u00f1ade a las funciones para decirles que devuelvan una promesa en lugar de devolver directamente el valor.</p> <p>Ejemplo</p> <pre><code>async function hello() { return \"Hello\" };\n\nhello().then((value) =&gt; console.log(value));\n</code></pre> <p>La ventaja real de las funciones asincronas aparecen cuando las combinas con la palabra clave await, el await debe ser usado siempre dentro de una funci\u00f3n declarada como async. </p> <p>await esperar\u00e1 autom\u00e1ticamente (de forma as\u00edncrona y no bloqueante) a que una promesa se resuelva. await puede ser puesta frente a cualquier funcion async basada en una promesa para pausar tu codigo en esa linea hasta que se cumpla la promesa, entonces retorna el valor resultante. Mientras tanto, otro c\u00f3digo que puede estar esperando una oportunidad para ejecutarse, puede hacerlo.</p> <p>Ejemplo</p> <pre><code>const checkServerWithSugar = async (url) =&gt; {\n  const response = await fetch(url);\n  return `Estado del Servidor: ${response.status === 200 ? \"OK\" : \"NOT OK\"}`;\n}\n\ncheckServerWithSugar(document.URL.toString())\n  .then(result =&gt; console.log(result));\n</code></pre>"},{"location":"js_async/#manejo-de-errores","title":"Manejo de errores","text":"<p>Si una promesa gestionada por await es rechazada o un error se dispara dentro de la funci\u00f3n declarada como async, la promesa que autom\u00e1ticamente devuelve la funci\u00f3n async tambi\u00e9n ser\u00e1 rechazada. En este caso, podemos encadenar un .catch() para notificar el error</p> <pre><code>checkServerWithSugar(document.URL.toString())\n  .then(result =&gt; console.log(result))\n  .catch(e =&gt; console.log(`Error Capturado Fuera de la funci\u00f3n async: ${e}`));\n</code></pre> <p>Pero si necesit\u00e1ramos gestionar estos erroes internamente, en la propia funci\u00f3n async, deberemos envolver nuestro c\u00f3digo con un try / catch del siguiente modo</p> <pre><code>const checkServerWithSugar = async (url) =&gt; {\n  try {\n    const response = await fetch(url);\n    return `Estado del servidor: ${response.status === 200 ? \"OK\" : \"NOT OK\"}`;\n  } catch (e) {\n    throw `Manejo intero del error. Error original: ${e}`;\n  }\n}\n\ncheckServerWithSugar(document.URL.toString())\n  .then(result =&gt; console.log(result))\n  .catch(e =&gt; console.log(`Error Capturado Fuera de la funci\u00f3n async: ${e}`));\n</code></pre>"},{"location":"js_async/#multiples-awaits","title":"Multiples awaits","text":"<p>Presta mucha atenci\u00f3n cuando trabajes con m\u00faltiples promesas con el operador await. La mayor\u00eda de las veces querr\u00e1s evitar apilar sentencias await, a menos que una dependa de la otra. Apilar m\u00faltiples await es equivalente a lanzar una promesa cuando la anterior haya sido resuelta. Es decir, ejecutar las promesas encadenadamente, de forma secuencial. Y esto no siempre es lo deseable.</p> <p>Ejemplo de llamadas en serie (el segundo await tiene que esperar a que termine el primero)</p> <pre><code>const delay = time =&gt; new Promise(resolveCallback =&gt; setTimeout(resolveCallback, time));\n\nasync function wait() {\n  await delay(500);\n  await delay(500);\n  return \"Ha transcurrido, como m\u00ednimo, 1 segundo.\";\n};\n\nwait().then(result =&gt; console.log(result));\n</code></pre> <p>Sin embargo, podemos hacer una espera en paralelo del siguiente modo:</p> <pre><code>const delay = time =&gt; new Promise(resolveCallback =&gt; setTimeout(resolveCallback, time));\n\nasync function wait() {\n  const d1 = delay(500);\n  const d2 = delay(500);\n  await d1;\n  await d2;\n  return \"Ha transcurrido, como m\u00ednimo, 500ms.\";\n};\n\nwait().then(result =&gt; console.log(result));\n</code></pre> <p>Ejemplo de usar el valor de un await en la siguente funci\u00f3n</p> <pre><code>const p1 = function() {\n  return new Promise( (resolve, reject) =&gt; {\n    setTimeout(resolve, 500, \"uno\");\n  });\n}\n\nconst p2 = function (texto) {\n  return new Promise( (resolve, reject) =&gt; {\n    setTimeout(resolve, 100, `${texto}, dos`);\n  });\n}\n\nasync function contarEnTexto() {\n  const t1 = await p1();\n  const t2 = await p2(t1);\n  return t2;\n}\n\ncontarEnTexto().then(result =&gt; console.log(result));\n</code></pre> <p>Podemos ver un ejemplo de como usarlo en una clase https://developer.mozilla.org/es/docs/Learn/JavaScript/Asynchronous/Async_await#asyncawait_class_methods</p>"},{"location":"js_async/#fetch","title":"fetch","text":"<p>En algunos ejemplos anteriores hemos usado la funci\u00f3n fetch. Ahora veremos con m\u00e1s detalles para que se usa y su funcionamiento.</p> <p>La API Fetch proporciona una interfaz para recuperar recursos (incluso a trav\u00e9s de la red). Resultar\u00e1 familiar a cualquiera que haya usado XMLHttpRequest, pero la nueva API ofrece un conjunto de caracter\u00edsticas m\u00e1s potente y flexible. <sup>4</sup></p> <p>Una de las caracter\u00edsticas m\u00e1s importantes del API fetch es que utiliza promesas, es decir, devuelve un objeto con dos m\u00e9todos, uno then() y otro catch() a la que pasaremos una funci\u00f3n que ser\u00e1 invocada cuando se obtenga la respuesta o se produzca un error. <sup>5</sup></p> <p>Note</p> <p>Aqu\u00ed hay que aclarar un punto con los errores: si se devuelve un c\u00f3digo HTTP correspondiente a un error no se ejecutar\u00e1 el catch(), ya que se ha obtenido una respuesta v\u00e1lida, por lo que se ejecutar\u00e1 el then(). S\u00f3lo si hay un error de red o de otro tipo se ejecutar\u00e1 el catch().</p> <p>Otro aspecto importante que hay que comprender es que para obtener el body o cuerpo del mensaje devuelto por el servidor deberemos obtener una segunda promesa por medio de los m\u00e9todos del objeto Response. Por ello ser\u00e1 muy habitual ver dos promesas encadenadas, una para el fetch() y otra con el retorno del m\u00e9todo que utilicemos para obtener el body.</p> <p>Ejemplo</p> <pre><code>fetch('https://httpbin.org/ip')\n    .then(function(response) {\n        return response.text();\n    })\n    .then(function(data) {\n        console.log('data = ', data);\n    })\n    .catch(function(err) {\n        console.error(err);\n    });\n</code></pre>"},{"location":"js_async/#opciones-de-la-peticion","title":"Opciones de la petici\u00f3n","text":"<p>A la funci\u00f3n fetch(url, options) se le pasa por par\u00e1metro la url de la petici\u00f3n y, de forma opcional, un objeto options con opciones de la petici\u00f3n HTTP. En este objeto de opciones podemos definir varios detalles:</p> <p>Los valores m\u00e1s usados son:</p> <ul> <li>method: M\u00e9todo HTTP de la petici\u00f3n. Por defecto, GET. Otras opciones: HEAD, POST, etc.</li> <li>body: Cuerpo de la petici\u00f3n HTTP. Puede ser de varios tipos: String, FormData, Blob, etc.</li> <li>headers: Cabeceras HTTP. Por defecto, {}.</li> <li>credentials: Modo de credenciales. Por defecto, omit. Otras opciones: same-origin e include.</li> </ul> <p>Otros valores que podemos definir son:</p> <ul> <li>mode: modo del la solicitud: \u2018cors\u2019, \u2018no-cors\u2019, \u2018same-origin\u2019, \u2018navigate\u2019.</li> <li>cache: forma de utilizaci\u00f3n de la cach\u00e9: \u2018default\u2019, \u2018no-store\u2019, \u2018reload\u2019, \u2018no-cache\u2019, \u2018force-cache\u2019, \u2018only-if-cached\u2019.</li> <li>redirect: forma de gestionar la redirecci\u00f3n: \u2018follow\u2019, \u2018error\u2019, \u2018manual\u2019.</li> <li>referrer: valor utilizado como referrer: \u2018client\u2019, \u2018no-referrer\u2019 una URL.</li> <li>referrerPolicy: especifica el valor de la cabecera referer: \u2018no-referrer\u2019, \u2018no-referrer-when-downgrade\u2019, \u2018origin\u2019, \u2018origin-when-cross-origin\u2019, \u2018unsafe-url\u2019.</li> <li>integrity: valor de integridad de la solicitud.</li> </ul> <p>Ejemplo de enviar detos en formato JSON</p> <pre><code>fetch('https://httpbin.org/post',{\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\"a\": 1, \"b\": 2}),\n        cache: 'no-cache'\n    })\n    .then(function(response) {\n        return response.json();\n    })\n    .then(function(data) {\n        console.log('data = ', data);\n    })\n    .catch(function(err) {\n        console.error(err);\n    });\n</code></pre>"},{"location":"js_async/#propieadades-de-la-respuesta","title":"Propieadades de la respuesta","text":"<p>En la funci\u00f3n que pasamos a then() vamos a recibir un objeto Response. Este objeto contiene la respuesta que hace el servidor y dispone de una serie de propiedades con los valores de esa respuesta y m\u00e9todos que pueden resultarnos \u00fatiles al implementar nuestro c\u00f3digo.</p> <p>Por el lado de las propiedades, tenemos las siguientes:</p> <ul> <li>status: C\u00f3digo HTTP de la respuesta (100-599).</li> <li>statusText: Texto representativo del c\u00f3digo HTTP anterior.</li> <li>ok: Devuelve true si el c\u00f3digo HTTP es 200 (o empieza por 2).</li> <li>headers: Cabeceras de la respuesta.</li> <li>url: URL de la petici\u00f3n HTTP.</li> </ul> <p>Por el lado de los m\u00e9todos, tenemos los siguientes:</p> <ul> <li>response.text(): Devuelve el contenido en formato texto</li> <li>response.json(): Devuelve el contenido como objeto Javascript</li> <li>response.arrayBuffer(): Devuelve el contenido como ArrayBuffer</li> <li>response.blob(): Devuelve el contenido como valor que podemos manejar con URL.createObjectURL()</li> <li>response.formData(): Devuelve el contenido como FormData</li> <li>response.clone(): Crea y devuelve un clon de la instancia en cuesti\u00f3n.</li> </ul> <p>Note</p> <p>Una caracter\u00edstica que tenemos que tener en cuenta es que s\u00f3lo podemos hacer una obtenci\u00f3n de body, tras la cual ya no podemos volver solicitar otra conversi\u00f3n. Para resolver esta situaci\u00f3n el objeto Response tiene el m\u00e9todo clone() que nos permite duplicar el objeto y hacer m\u00faltiples gestiones de body. <sup>6</sup></p> <p>Ejemplo</p> <pre><code>fetch('https://httpbin.org/ip')\n    .then(function(response) {\n        console.log('response.body =', response.body);\n        console.log('response.bodyUsed =', response.bodyUsed);\n        console.log('response.headers =', response.headers);\n        console.log('response.ok =', response.ok);\n        console.log('response.status =', response.status);\n        console.log('response.statusText =', response.statusText);\n        console.log('response.type =', response.type);\n        console.log('response.url =', response.url);\n        return response.json();\n    })\n    .then(function(data) {\n        console.log('data = ', data);\n    })\n    .catch(function(err) {\n        console.error(err);\n    });\n</code></pre> <p>Es muy com\u00fan usar las arrow function con el fetch</p> <p>Ejemplo</p> <pre><code>fetch('https://httpbin.org/ip')\n    .then(response =&gt; response.text())\n    .then(data =&gt; {\n        /** Procesar los datos **/\n        console.log('data = ', data);\n    })\n    .catch(err =&gt; {\n        console.error(err);\n    });\n</code></pre> <p>Tambi\u00e9n lo podemos usar con async/await</p> <p>Ejemplo</p> <pre><code>const request = async (url) =&gt; {\n  const response = await fetch(url);\n  if (!response.ok)\n    throw new Error(\"WARN\", response.status);\n  const data = await response.json();\n  return data;\n}\n\nrequest('https://httpbin.org/ip').then(data =&gt; {\n    /** Procesar los datos **/\n    console.log(data);\n}).catch(err =&gt; {\n    console.error(err);\n});\n</code></pre>"},{"location":"js_async/#referencias","title":"Referencias","text":"<ol> <li> <p>https://developer.mozilla.org/es/docs/Learn/JavaScript/Asynchronous \u21a9</p> </li> <li> <p>https://lemoncode.net/lemoncode-blog/2018/1/29/javascript-asincrono \u21a9</p> </li> <li> <p>https://developer.mozilla.org/es/docs/Learn/JavaScript/Asynchronous/Async_await \u21a9</p> </li> <li> <p>https://developer.mozilla.org/es/docs/Web/API/Fetch_API/Utilizando_Fetch \u21a9</p> </li> <li> <p>https://www.todojs.com/api-fetch-el-nuevo-estandar-que-permite-hacer-llamadas-http/ \u21a9</p> </li> <li> <p>https://lenguajejs.com/javascript/peticiones-http/fetch/ \u21a9</p> </li> </ol>"},{"location":"js_dom/","title":"API del DOM","text":"<p>El modelo de objeto de documento (DOM) es una interfaz de programaci\u00f3n para los documentos HTML y XML. Facilita una representaci\u00f3n estructurada del documento y define de qu\u00e9 manera los programas pueden acceder, al fin de modificar, tanto su estructura, estilo y contenido. El DOM da una representaci\u00f3n del documento como un grupo de nodos y objetos estructurados que tienen propiedades y m\u00e9todos. Esencialmente, conecta las p\u00e1ginas web a scripts o lenguajes de programaci\u00f3n. <sup>1</sup></p> <p>El DOM no es un lenguaje de programaci\u00f3n pero sin \u00e9l, el lenguaje JavaScript no tiene ning\u00fan modelo o noci\u00f3n de las p\u00e1ginas web, de la p\u00e1ginas XML ni de los elementos con los cuales es usualmente relacionado.</p> <p>No se tiene que hacer nada especial para empezar a utilizar el DOM. Todos los navegadores web usan el modelo de objeto de documento para hacer accesibles las p\u00e1ginas web al script. Cuando se crea o se carga un script o inmediatamente est\u00e1 disponible para usarlo con el API del DOM.</p>"},{"location":"js_dom/#interfaces-esenciales-en-el-dom","title":"Interfaces esenciales en el DOM","text":"<p>document y window son objetos cuya interfaces son generalmente muy usadas en la programaci\u00f3n de DOM. En t\u00e9rmino simple, el objeto window representa algo como podr\u00eda ser el navegador, y el objeto document es la ra\u00edz del documento en s\u00ed. Element se refiere a un elemento o a un nodo de tipo de elemento \"element\" devuelto por un miembro del API de DOM, por ejemplo un <code>&lt;div&gt;</code></p>"},{"location":"js_dom/#acceso-a-elementos-del-dom","title":"Acceso a elementos del DOM","text":"<p>Para acceder a los diferentes elementos de una p\u00e1gina web podemos usar los siguientes m\u00e9todos</p> <pre><code>// Obtiene un elemento por id\ndocument.getElementById('algunid');\n\n// Obtiene una lista con los elementos que tienen esa clase\ndocument.getElementsByClassName('algunaclase');\n\n// Obtiene una HTMLCollection con los todos los elementos 'li'\ndocument.getElementsByTagName('li');\n\n// Devuelve el primer elemento del documento que cumpla la selecci\u00f3n (la notaci\u00f3n es como en CSS)\ndocument.querySelector('.someclass');\n\n// Devuelve una lista de elementos que cumplen con la selecci\u00f3n (notaci\u00f3n como en CSS)\ndocument.querySelectorAll('div.note, div.alert');\n</code></pre> <p>Una vez tenemos un elemento seleccionado podemos acceder a sus padres/hijos</p> <pre><code>var elem = document.getElementById('someid');\n// Obtener los hijos de un elemento\nvar hijos = elem.childNodes;\n\n// Su nodo padre\nvar padre = elem.parentNode;\n</code></pre>"},{"location":"js_dom/#crear-nuevos-elementos","title":"Crear nuevos elementos","text":"<p>Para crear elementos llamamos a createElement con el nombre del elemento</p> <pre><code>var nuevoH1 = document.createElement('h1');\nvar nuevoParrafo = document.createElement('p');\n</code></pre> <p>Para a\u00f1adir texto a los elementos podemos usar el m\u00e9todo createTextNode o tambi\u00e9n podemos asignar directamente el valor a la propiedad innerHTML</p> <pre><code>var nuevoH1 = document.createElement('h1');\nvar nuevoParrafo = document.createElement('p');\n\nvar textoH1 = document.createTextNode('Hola mundo!');\n// A\u00f1adir el texto a los elementos\nnuevoH1.appendChild(textoH1);\nnuevoParrafo.innerHTML = 'lorem ipsum...';\n</code></pre> <p>Nota</p> <p>Crear un elemento con el createElement no agrega directamente el elemento en nuestra p\u00e1gina. Para ello debemos agregarlo a alg\u00fan otro elemento con el m\u00e9doto appendChild</p>"},{"location":"js_dom/#anadireliminarmodificar-clases","title":"A\u00f1adir/eliminar/modificar Clases","text":"<p>Podemos acceder a las clases de un elemento y manipularas para cambiar el estilo del elememto</p> <pre><code>// Tomamos un elemento\nvar cabecera = document.getElementById('cabecera');\n\n// elimina una clase del elemento\ncabecera.classList.remove('foo');\n\n// A\u00f1ade una clase si no existe\ncabecera.classList.add('otra');\n\n// a\u00f1ade o elimina varias clases a la vez\ncabecera.classList.add('foo', 'bar');\ncabecera.classList.remove('foo', 'bar');\n\n// Si la clase existe la elimina, si no existe, la crea\ncabecera.classList.toggle('visible');\n\n// Devuelve true si el elemento contiene esa clase\ncabecera.classList.contains('foo');\n</code></pre>"},{"location":"js_dom/#manipular-el-estilo","title":"Manipular el estilo","text":"<p>Podemos agregar estilos en linea directamente a los elementos</p> <pre><code>// Tomamos un elemento\nvar cabecera = document.getElementById('cabecera');\n// Modificamos su estilo\ncabecera.style.color = 'white';\ncabecera.style.backgroundColor = 'black';\ncabecera.style.padding = '10px';\ncabecera.style.width = '250px';\ncabecera.style.textAlign = 'center';\n</code></pre>"},{"location":"js_dom/#eventos","title":"Eventos","text":"<p>Hay tres formas de registrar gestores de eventos para un elemento. <sup>2</sup></p>"},{"location":"js_dom/#atributo-html","title":"Atributo HTML","text":"<p>Debe evitarse esta forma. Hace que el HTMl sea m\u00e1s grande y menos legible. El contenido/estructura y el comportamiento no est\u00e1n bien separados, por lo que es m\u00e1s dif\u00edcil encontrar un error.</p> <p>Ejemplo</p> <pre><code>&lt;button onclick=\"alert('Hello world!')\"&gt;\n</code></pre>"},{"location":"js_dom/#propiedades-del-elemento","title":"Propiedades del elemento","text":"<p>El problema con este m\u00e9todo es que solo se puede establecer un gestor por elemento y por evento.</p> <p>Ejemplo</p> <pre><code>// Se supone que myButton es un elemento de bot\u00f3n\nmyButton.onclick = function(event){alert('Hello world');};\n</code></pre>"},{"location":"js_dom/#addeventlistener","title":"addEventListener","text":"<p>Este es el m\u00e9todo que debemos usar preferiblemente en lugar de los otros 2 m\u00e9todos</p> <p>Ejemplo</p> <pre><code>// Se supone que myButton es un elemento de bot\u00f3n\nmyButton.addEventListener('click', function(){alert('Hello world');}, false);\n</code></pre> <p>La sintaxis m\u00e1s usada es la siguiente <sup>3</sup></p> <pre><code>// Se supone que target es un elemento\ntarget.addEventListener(tipo, funcion listener [, opciones] );\n</code></pre> <p>Donde tipo es una cadena que representa un tipo de evento a escuchar. Algunos de los eventos m\u00e1s comunes son click, load, change, keypress. Para ver un listado de los eventos ir a https://developer.mozilla.org/es/docs/Web/Events</p> <p>Donde funcion listener es una funci\u00f3n que recibe como par\u00e1metro un evento. Si queremos pasar par\u00e1metros a la funci\u00f3n del listener, debes utilizar funciones an\u00f3nimas.</p> <p>Donde opciones es opcional y puede servir para indicar el useCapture indica que el usuario desea iniciar en evento en la captura o tamb\u00eden para especificar las caracter\u00edsticas del evento. </p> <p>Ejemplo</p> <pre><code>// Funcion para cambiar el contenido de t2\nfunction modifyText(new_text) {\n  var t2 = document.getElementById(\"t2\");\n  t2.firstChild.nodeValue = new_text;\n}\n\n// Funcion para agregar el evento a t\nfunction load() {\n  var el = document.getElementById(\"t\");\n  el.addEventListener(\"click\", function(){modifyText(\"four\")}, false);\n}\n</code></pre>"},{"location":"js_dom/#removeeventlistener","title":"removeEventListener","text":"<p>Si queremos quitar un evento previamente registrado debemos usar el m\u00e9todo removeEventListener. La sintaxis es igual a la del addEventListener</p> <p>Ejemplo</p> <pre><code>// Se supone que myButton es un elemento de bot\u00f3n\nmyButton.removeEventListener('click', function(){alert('Hello world');}, false);\n</code></pre>"},{"location":"js_dom/#dispatchevent","title":"dispatchEvent","text":"<p>Lanza un evento en el sistema de eventos. El evento est\u00e1 sujeto al mismo comportamiento y capacidades que si fuera un evento de lanzamiento directo.</p> <p>La sintaxis es la siguiente</p> <pre><code>element.dispatchEvent(event)\n</code></pre> <p>Event es un objeto de tipo evento.</p> <p>Ejemplo</p> <pre><code>// Se supone que myButton es un elemento de bot\u00f3n\nmyButton.dispatchEvent(new Event(\"click\"));\n</code></pre>"},{"location":"js_dom/#eventos-personalizados","title":"Eventos personalizados","text":"<p>Podemos crear eventos personalizados usando el constructor Event.</p> <p>Ejemplo</p> <pre><code>var event = new Event('myEvento');\n\n// Escucha para el evento.\nelem.addEventListener('myEvento', function (e) { ... }, false);\n\n// Disparar event.\nelem.dispatchEvent(event);\n</code></pre>"},{"location":"js_dom/#propagacion-de-eventos","title":"Propagaci\u00f3n de eventos","text":"<p>Cuando hay dos elementos superpuestos, y ambos tienen asociadas acciones para responder a un mismo evento, surge la duda de en qu\u00e9 orden se ejecutan las acciones. Por defecto el evento se va propagando desde el elemento m\u00e1s interno hacia afuera, hasta alcanzar el elemento m\u00e1s externo (fase bubble). Si queremos realizar alguna acci\u00f3n durante las dos fases anteriores deberemos declararlo del siguiente modo: <sup>4</sup></p> <pre><code>// Se supone que myButton es un elemento de bot\u00f3n\nmyButton.removeEventListener('click', function(){alert('Hello world');}, true);\n</code></pre> <p>Ejemplo </p> <pre><code>const body = document.querySelector('body');\nconst container = document.querySelector('#container'); \nconst button = document.querySelector('#dataSender');\nbody.addEventListener('click', function(event) { \n  console.log('body clicked');\n});\ncontainer.addEventListener('click', function(event) { \n  console.log('container clicked');\n});\nbutton.addEventListener('click', function(event) { \n  console.log('button clicked');\n});\nbutton.addEventListener('click', function(event) { \n  console.log('button clicked 2');\n});\n</code></pre> <p></p>"},{"location":"js_dom/#detener-la-propagacion","title":"Detener la propagaci\u00f3n","text":"<p>En el caso de que queramos detener la propagaci\u00f3n del evento en alg\u00fan punto determinado del DOM podremos emplear los m\u00e9todos event.stopPropagation() o event.stopImmediatePropagation()</p> <p>El event.stopPropagation() evita que el evento \"suba en burbuja\" pero si permite que se ejecuten m\u00e1s eventos asociados a ese elemento.</p> <p>Ejemplo. En este caso se ejecutarian el button clicked y el button clicked 2</p> <pre><code>const body = document.querySelector('body');\nconst container = document.querySelector('#container'); \nconst button = document.querySelector('#dataSender');\nbody.addEventListener('click', function(event) { \n  console.log('body clicked');\n});\ncontainer.addEventListener('click', function(event) { \n  console.log('container clicked');\n});\nbutton.addEventListener('click', function(event) {\n  event.stopPropagation();\n  console.log('button clicked');\n});\nbutton.addEventListener('click', function(event) { \n  console.log('button clicked 2');\n});\n</code></pre> <p>Sin embargo si queremos prevenir que se ejecuten otros eventos asociados al mismo elemento podemos emplear el m\u00e9todo event.stopImmediatePropagation().</p> <p>Ejemplo. En este caso s\u00f3lo se ejecutarian el button clicked</p> <pre><code>const body = document.querySelector('body');\nconst container = document.querySelector('#container'); \nconst button = document.querySelector('#dataSender');\nbody.addEventListener('click', function(event) { \n  console.log('body clicked');\n});\ncontainer.addEventListener('click', function(event) { \n  console.log('container clicked');\n});\nbutton.addEventListener('click', function(event) {\n  event.stopImmediatePropagation();\n  console.log('button clicked');\n});\nbutton.addEventListener('click', function(event) { \n  console.log('button clicked 2');\n});\n</code></pre> <p>Otro m\u00e9todo com\u00fan es el event.preventDefault() que se usa para evitar que el navegador ejecute el comportamiento por defecto del evento recibido. El caso m\u00e1s com\u00fan es en los elementos de enlaces <code>&lt;a&gt;</code> cuando queremos usarlos como botones en vez de como enlaces.</p> <p>Ejemplo. Prevenir que el navegador vaya hacia la url del enlace cuando el usuario haga click sobre \u00e9l</p> <pre><code>const link = document.querySelector('#myLink');\nlink.addEventListener('click', function(event) {\n  event.preventDefault();\n  // do something cool\n});\n</code></pre> <p>A continuaci\u00f3n vamos a modificar nuestro archivo script.js que se encuentra dentro de la carpeta js para agregar alguna funcionalidad a nuestra calculadora</p> <ol> <li> <p>Agregar un evento click al bot\u00f3n de tranformar coordenadas</p> <pre><code>const btnTransformar = document.querySelector(\".btn-tranformar\");\n\nbtnTransformar.addEventListener(\"click\", (evt) =&gt; {\n    console.log(\"Transformar coordenadas\");\n});\n</code></pre> </li> <li> <p>Crear una funci\u00f3n para transformar coordenadas</p> <pre><code>const btnTransformar = document.querySelector(\".btn-tranformar\");\n\nbtnTransformar.addEventListener(\"click\", (evt) =&gt; {\n    console.log(\"Transformar coordenadas\");\n});\n\nconst transformarCoordenadas = (lat, lon, epsg_in, epsg_out) =&gt; {\n\n    console.log(`Tranformar la coordenada ${lat},${lon} del ${epsg_in} al ${epsg_out}`);\n\n}\n</code></pre> </li> <li> <p>Llamar a la funci\u00f3n transformarCoordenadas cuando se hace click en el bot\u00f3n</p> <pre><code>const btnTransformar = document.querySelector(\".btn-tranformar\");\n\nbtnTransformar.addEventListener(\"click\", (evt) =&gt; {\n    console.log(\"Transformar coordenadas\");\n    transformarCoordenadas(41.5, 2, \"EPSG:4326\", \"EPSG:25831\");\n});\n\nconst transformarCoordenadas = (lat, lon, epsg_in, epsg_out) =&gt; {\n\n    console.log(`Tranformar la coordenada ${lat},${lon} del ${epsg_in} al ${epsg_out}`);\n\n}\n</code></pre> </li> <li> <p>Leer el valor del sistema de referencia de origen seleccionado</p> <p><pre><code>const btnTransformar = document.querySelector(\".btn-tranformar\");\n\nbtnTransformar.addEventListener(\"click\", (evt) =&gt; {\n    console.log(\"Transformar coordenadas\");\n    const srs_origen = document.getElementById(\"origen\").value;\n    transformarCoordenadas(41.5, 2, srs_origen, \"EPSG:25831\");\n});\n\nconst transformarCoordenadas = (lat, lon, epsg_in, epsg_out) =&gt; {\n\n    console.log(`Tranformar la coordenada ${lat},${lon} del ${epsg_in} al ${epsg_out}`);\n\n}\n</code></pre> 5. Modificar el archivo index.html para agregar un div donde mostrar el resultado de la transformaci\u00f3n</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"es\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"author\" content=\"[VUESTRO NOMBRE]\"&gt;\n    &lt;meta name=\"description\" content=\"Calculadora geod\u00e9sica que permite hacer la transformaci\u00f3n de coordenadas geogr\u00e1ficas en linea\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;link href=\"https://www.icgc.cat/bundles/microblauicgc/img/favicon.ico\" rel=\"shortcut icon\" type=\"image/x-icon\"&gt;\n    &lt;link rel=\"preconnect\" href=\"https://fonts.gstatic.com\"&gt;\n    &lt;link href=\"https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,300;0,400;0,700;1,400;1,700&amp;display=swap\" rel=\"stylesheet\"&gt;\n    &lt;link type=\"text/css\" href=\"css/estilos.css\" rel=\"stylesheet\"&gt;\n    &lt;title&gt;Mi calculadora geod\u00e9sica&lt;/title&gt;\n    &lt;script src=\"js/script.js\" defer&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;header&gt;\n        &lt;img src=\"https://www.uab.cat/Imatge/635/883/logop.gif\" alt=\"UAB\"&gt;\n        &lt;h1&gt;Mi calculadora geod\u00e9sica&lt;/h1&gt;\n    &lt;/header&gt;\n    &lt;main&gt;\n        &lt;div&gt;\n            &lt;table&gt;\n                &lt;tr&gt;\n                    &lt;th colspan=\"2\"&gt;&lt;label for=\"origen\"&gt;Sistema de referencia de origen&lt;/label&gt;&lt;/th&gt;\n                    &lt;th colspan=\"2\"&gt;&lt;label for=\"destino\"&gt;Sistema de referencia de destino&lt;/label&gt;&lt;/th&gt;\n                &lt;/tr&gt;\n                &lt;tr&gt;\n                    &lt;td colspan=\"2\"&gt;\n                        &lt;select id=\"origen\"&gt;\n                            &lt;option value=\"EPSG:4326\"&gt;EPSG:4326&lt;/option&gt; \n                            &lt;option value=\"EPSG:3857\"&gt;EPSG:3857&lt;/option&gt;\n                            &lt;option value=\"EPSG:25831\"&gt;EPSG:25831&lt;/option&gt;\n                            &lt;option value=\"EPSG:23031\"&gt;EPSG:23031&lt;/option&gt;\n                        &lt;/select&gt;\n                    &lt;/td&gt;\n                    &lt;td colspan=\"2\"&gt;\n                        &lt;select id=\"destino\"&gt;\n                            &lt;option value=\"EPSG:4326\"&gt;EPSG:4326&lt;/option&gt; \n                            &lt;option value=\"EPSG:3857\"&gt;EPSG:3857&lt;/option&gt;\n                            &lt;option value=\"EPSG:25831\"&gt;EPSG:25831&lt;/option&gt;\n                            &lt;option value=\"EPSG:23031\"&gt;EPSG:23031&lt;/option&gt;\n                        &lt;/select&gt;\n                    &lt;/td&gt;\n                &lt;/tr&gt;\n                &lt;tr&gt;\n                    &lt;td&gt;&lt;label for=\"lat\"&gt;Latitud&lt;/label&gt;&lt;/td&gt;\n                    &lt;td&gt;&lt;label for=\"lng\"&gt;Longitud&lt;/label&gt;&lt;/td&gt;\n                    &lt;td colspan=\"2\"&gt;&lt;/td&gt;\n                &lt;/tr&gt;\n                &lt;tr&gt;\n                    &lt;td&gt;&lt;input type=\"text\" id=\"lat\"&gt;&lt;/td&gt;\n                    &lt;td&gt;&lt;input type=\"text\" id=\"lng\"&gt;&lt;/td&gt;\n                    &lt;td colspan=\"2\"&gt;&lt;div id=\"respuesta\"&gt;&lt;/div&gt;&lt;/td&gt;\n                &lt;/tr&gt;\n                &lt;tr&gt;\n                    &lt;td colspan=\"4\"&gt;&lt;button class=\"btn-tranformar\"&gt;Transformar coordenadas&lt;/button&gt;&lt;/td&gt;\n                &lt;/tr&gt;\n            &lt;/table&gt;\n        &lt;/div&gt;\n        &lt;aside&gt;\n            &lt;ul&gt;\n                &lt;li&gt;&lt;a href=\"https://epsg.io/4326\" title=\"WGS 84 -- WGS84 - World Geodetic System 1984, used in GPS\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;EPSG:4326&lt;/a&gt;&lt;/li&gt;\n                &lt;li&gt;EPSG:3857&lt;/li&gt;\n                &lt;li&gt;EPSG:25831&lt;/li&gt;\n                &lt;li&gt;EPSG:23031&lt;/li&gt;\n            &lt;/ul&gt;\n        &lt;/aside&gt;\n    &lt;/main&gt;\n    &lt;footer&gt;\u00a9Copyright 2020 de nadie. Ning\u00fan derecho reservado.&lt;/footer&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> </li> <li> <p>Mostrar la repuesta de la transformaci\u00f3n</p> <pre><code>const btnTransformar = document.querySelector(\".btn-tranformar\");\n\nbtnTransformar.addEventListener(\"click\", (evt) =&gt; {\n    console.log(\"Transformar coordenadas\");\n    const srs_origen = document.getElementById(\"origen\").value;\n    const coordTransformada = transformarCoordenadas(41.5, 2, srs_origen, \"EPSG:25831\");\n    document.getElementById(\"respuesta\").innerHTML = coordTransformada;\n});\n\nconst transformarCoordenadas = (lat, lon, epsg_in, epsg_out) =&gt; {\n\n    return `Tranformar la coordenada ${lat},${lon} del ${epsg_in} al ${epsg_out}`;\n\n}\n</code></pre> </li> <li> <p>Guardar los archivos modificados y recargar la p\u00e1gina. Al presionar el bot\u00f3n de Transformar coordenadas debemos ver que nos aparece el texto con el valor del SRS de origen seleccionado.</p> </li> <li> <p>Cargar la librer\u00eda proj4 <sup>5</sup>. Esta librer\u00eda permite transformar coordenadas entre diferentes sistemas de referencia. Modificar el archivo index.html y agregar la librer\u00eda.</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"es\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"author\" content=\"[VUESTRO NOMBRE]\"&gt;\n    &lt;meta name=\"description\" content=\"Calculadora geod\u00e9sica que permite hacer la transformaci\u00f3n de coordenadas geogr\u00e1ficas en linea\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;link href=\"https://www.icgc.cat/bundles/microblauicgc/img/favicon.ico\" rel=\"shortcut icon\" type=\"image/x-icon\"&gt;\n    &lt;link rel=\"preconnect\" href=\"https://fonts.gstatic.com\"&gt;\n    &lt;link href=\"https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,300;0,400;0,700;1,400;1,700&amp;display=swap\" rel=\"stylesheet\"&gt;\n    &lt;link type=\"text/css\" href=\"css/estilos.css\" rel=\"stylesheet\"&gt;\n    &lt;title&gt;Mi calculadora geod\u00e9sica&lt;/title&gt;\n    &lt;script src=\"https://cdnjs.cloudflare.com/ajax/libs/proj4js/2.6.3/proj4.min.js\" crossorigin=\"anonymous\"&gt;&lt;/script&gt;\n    &lt;script src=\"js/script.js\" defer&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;header&gt;\n        &lt;img src=\"https://www.uab.cat/Imatge/635/883/logop.gif\" alt=\"UAB\"&gt;\n        &lt;h1&gt;Mi calculadora geod\u00e9sica&lt;/h1&gt;\n    &lt;/header&gt;\n    &lt;main&gt;\n        &lt;div&gt;\n            &lt;table&gt;\n                &lt;tr&gt;\n                    &lt;th colspan=\"2\"&gt;&lt;label for=\"origen\"&gt;Sistema de referencia de origen&lt;/label&gt;&lt;/th&gt;\n                    &lt;th colspan=\"2\"&gt;&lt;label for=\"destino\"&gt;Sistema de referencia de destino&lt;/label&gt;&lt;/th&gt;\n                &lt;/tr&gt;\n                &lt;tr&gt;\n                    &lt;td colspan=\"2\"&gt;\n                        &lt;select id=\"origen\"&gt;\n                            &lt;option value=\"EPSG:4326\"&gt;EPSG:4326&lt;/option&gt; \n                            &lt;option value=\"EPSG:3857\"&gt;EPSG:3857&lt;/option&gt;\n                            &lt;option value=\"EPSG:25831\"&gt;EPSG:25831&lt;/option&gt;\n                            &lt;option value=\"EPSG:23031\"&gt;EPSG:23031&lt;/option&gt;\n                        &lt;/select&gt;\n                    &lt;/td&gt;\n                    &lt;td colspan=\"2\"&gt;\n                        &lt;select id=\"destino\"&gt;\n                            &lt;option value=\"EPSG:4326\"&gt;EPSG:4326&lt;/option&gt; \n                            &lt;option value=\"EPSG:3857\"&gt;EPSG:3857&lt;/option&gt;\n                            &lt;option value=\"EPSG:25831\"&gt;EPSG:25831&lt;/option&gt;\n                            &lt;option value=\"EPSG:23031\"&gt;EPSG:23031&lt;/option&gt;\n                        &lt;/select&gt;\n                    &lt;/td&gt;\n                &lt;/tr&gt;\n                &lt;tr&gt;\n                    &lt;td&gt;&lt;label for=\"lat\"&gt;Latitud&lt;/label&gt;&lt;/td&gt;\n                    &lt;td&gt;&lt;label for=\"lng\"&gt;Longitud&lt;/label&gt;&lt;/td&gt;\n                    &lt;td colspan=\"2\"&gt;&lt;/td&gt;\n                &lt;/tr&gt;\n                &lt;tr&gt;\n                    &lt;td&gt;&lt;input type=\"text\" id=\"lat\"&gt;&lt;/td&gt;\n                    &lt;td&gt;&lt;input type=\"text\" id=\"lng\"&gt;&lt;/td&gt;\n                    &lt;td colspan=\"2\"&gt;&lt;div id=\"respuesta\"&gt;&lt;/div&gt;&lt;/td&gt;\n                &lt;/tr&gt;\n                &lt;tr&gt;\n                    &lt;td colspan=\"4\"&gt;&lt;button class=\"btn-tranformar\"&gt;Transformar coordenadas&lt;/button&gt;&lt;/td&gt;\n                &lt;/tr&gt;\n            &lt;/table&gt;\n        &lt;/div&gt;\n        &lt;aside&gt;\n            &lt;ul&gt;\n                &lt;li&gt;&lt;a href=\"https://epsg.io/4326\" title=\"WGS 84 -- WGS84 - World Geodetic System 1984, used in GPS\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;EPSG:4326&lt;/a&gt;&lt;/li&gt;\n                &lt;li&gt;EPSG:3857&lt;/li&gt;\n                &lt;li&gt;EPSG:25831&lt;/li&gt;\n                &lt;li&gt;EPSG:23031&lt;/li&gt;\n            &lt;/ul&gt;\n        &lt;/aside&gt;\n    &lt;/main&gt;\n    &lt;footer&gt;\u00a9Copyright 2020 de nadie. Ning\u00fan derecho reservado.&lt;/footer&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> </li> <li> <p>Utilizar la librer\u00eda de proj4 para transformar coordenadas al EPSG:3857</p> <pre><code>const btnTransformar = document.querySelector(\".btn-tranformar\");\n\nbtnTransformar.addEventListener(\"click\", (evt) =&gt; {\n    console.log(\"Transformar coordenadas\");\n    const srs_origen = document.getElementById(\"origen\").value;\n    const coordTransformada = transformarCoordenadas(41.5, 2, srs_origen, \"EPSG:3857\");\n    document.getElementById(\"respuesta\").innerHTML = coordTransformada;\n});\n\nconst transformarCoordenadas = (lat, lon, epsg_in, epsg_out) =&gt; {\n\n    const coordTransformada = proj4(epsg_in, epsg_out, [lon, lat]);\n\n    return `La coordenada ${lat},${lon} en ${epsg_in} corresponde a la coordenada ${coordTransformada[1]},${coordTransformada[0]} en ${epsg_out} `;\n\n}\n</code></pre> </li> <li> <p>Recargar la p\u00e1gina y seleccionar como origen el EPSG:4326 y presionar el bot\u00f3n de Transformar coordenadas. Nos debe aparecer el texto con la coordenada transformada. Si seleccionamos otro SRS de origen nos dar\u00e1 un error. Esto es debido a la librer\u00eda proj4 no tiene definidos todos los SRS.</p> <p>Note</p> <p>Por defecto el proj4 tiene definidos los siguientes SRS: EPSG:4326, EPSG:4269 y EPSG:3857</p> </li> <li> <p>Definir un nuevo SRS. Para encontrar la definici\u00f3n de un SRS podemos ir a https://epsg.io/ y buscar el SRS que queremos definir (Ej. https://epsg.io/25831). Vamos al apartado de Export de la p\u00e1gina y seleccionamos la opci\u00f3n de Proj4js. Copiamos el texto y lo agregamos a nuestra aplicaci\u00f3n.</p> <pre><code>proj4.defs(\"EPSG:25831\",\"+proj=utm +zone=31 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs\");\n\nconst btnTransformar = document.querySelector(\".btn-tranformar\");\n\nbtnTransformar.addEventListener(\"click\", (evt) =&gt; {\n    console.log(\"Transformar coordenadas\");\n    const srs_origen = document.getElementById(\"origen\").value;\n    const coordTransformada = transformarCoordenadas(41.5, 2, srs_origen, \"EPSG:3857\");\n    document.getElementById(\"respuesta\").innerHTML = coordTransformada;\n});\n\nconst transformarCoordenadas = (lat, lon, epsg_in, epsg_out) =&gt; {\n\n    const coordTransformada = proj4(epsg_in, epsg_out, [lon, lat]);\n\n    return `La coordenada ${lat},${lon} en ${epsg_in} corresponde a la coordenada ${coordTransformada[1]},${coordTransformada[0]} en ${epsg_out} `;\n\n}\n</code></pre> </li> </ol> <p>Ejercicio 2.5 pt</p> <ol> <li>Agregar un nuevo SRS a los selectores y al listado de la barra lateral y agregar la definici\u00f3n de proj4 de los SRS restantes para que la calculadora funcione. 0.5 pt</li> <li>Usar los valores de los campos Latitud y Longitud como coordendad de origen en lugar de la coordenada de origen que tenemos fijada en 41.5,2. y Usar el valor del selector de SRS de destino para hacer la transformaci\u00f3n en lugar del EPSG:3857 que tenemos fijado como destino. 0.5 pt </li> <li>Modificar la funci\u00f3n transformarCoordenadas para que retorne la coordenada transformada en lugar de texto actual. 0.5 pt</li> <li>Validar que el SRS de origen no sea igual al SRS de destino. En el caso de ser iguales mostrar un mensaje al usuario. El mensaje de error se debe mostrar en un nuevo div. En el caso de ser diferentes ocultar el div con el mensaje de error. 0.5 pt</li> <li>Agregar a la tabla un nuevo campo en la columna de origin del tipo textarea donde el usuario podra poner multiples coordenadas de origen separadas por \";\" (punto y comar) por Ejemplo 45.34,1.25;41.78,2.456. Al presionar el bot\u00f3n de transformar coordenadas validar si el nuevo campo tiene valores tambien realizar la transformaci\u00f3n de estos valores y retornarlos en la respuesta. 0.5 pt</li> </ol> <p>El resultado debe ser algo como esto </p>"},{"location":"js_dom/#referencias","title":"Referencias","text":"<ol> <li> <p>https://developer.mozilla.org/es/docs/Referencia_DOM_de_Gecko/Introducci%C3%B3n \u21a9</p> </li> <li> <p>https://developer.mozilla.org/es/docs/Referencia_DOM_de_Gecko/Eventos \u21a9</p> </li> <li> <p>https://developer.mozilla.org/es/docs/Web/API/EventTarget/addEventListener \u21a9</p> </li> <li> <p>https://latteandcode.medium.com/javascript-y-eventos-todo-lo-que-necesitas-saber-8b8ba4a2d4d4 \u21a9</p> </li> <li> <p>http://proj4js.org/ \u21a9</p> </li> </ol>"},{"location":"js_estructuras/","title":"Estructuras de control en JS","text":"<p>Para realizar cosas m\u00e1s complejas en nuestros scripts se utilizan las estructuras de control. Con ellas podemos realizar tomas de decisiones y bucles. <sup>1</sup></p>"},{"location":"js_estructuras/#toma-de-decisiones-control-de-flujo","title":"Toma de decisiones - control de flujo","text":"<p>Nos sirven para realizar unas acciones u otras en funci\u00f3n del estado de las variables. Es decir, tomar decisiones para ejecutar unas instrucciones u otras dependiendo de lo que est\u00e9 ocurriendo en ese instante en nuestros programas. Por ejemplo podemos mostrar cierta informaci\u00f3n dependiento del valor de una variable.</p> <p>En Javascript podemos tomar decisiones utilizando dos estructuras distintas. </p>"},{"location":"js_estructuras/#if-else","title":"if ... else","text":"<p>if es una estructura de control utilizada para tomar decisiones. Es un condicional que sirve para realizar unas u otras operaciones en funci\u00f3n de una expresi\u00f3n. Funciona de la siguiente manera, primero se eval\u00faa una expresi\u00f3n, si da resultado positivo se realizan las acciones relacionadas con el caso positivo.</p> <p>Ejecuta una sentencia si una condici\u00f3n espec\u00edficada es evaluada como verdadera. Si la condici\u00f3n es evaluada como falsa, otra sentencia puede ser ejecutada.</p> <p>La sintaxis es la siguiente</p> <pre><code>if (condici\u00f3n) sentencia1 [else sentencia2]\n</code></pre> <p>Ejemplos</p> <p>Ejecutar una sentencia si una condici\u00f3n espec\u00edficada es evaluada como verdadera</p> <pre><code>if (expresi\u00f3n) { \n   //acciones a realizar en caso positivo \n   //... \n}\n</code></pre> <p>Opcionalmente se pueden indicar acciones a realizar en caso de que la evaluaci\u00f3n de la sentencia devuelva resultados negativos. </p> <pre><code>if (expresi\u00f3n) { \n   //acciones a realizar en caso positivo \n   //... \n} else { \n   //acciones a realizar en caso negativo \n   //... \n}\n</code></pre> <p>Multiples sentencias if...else pueden ser anidadas para crear una cl\u00e1usula else if</p> <pre><code>if (condici\u00f3n1) {\n   //acciones a realizar en caso que la condici\u00f3n1 sea positiva \n   //...\n} else if (condici\u00f3n2) {\n   //acciones a realizar en caso que la condici\u00f3n2 sea positiva \n   //...\n} else if (condici\u00f3n3) {\n   //acciones a realizar en caso que la condici\u00f3n3 sea positiva \n   //...\n} else {\n   //acciones a realizar en caso que ninguna de las condiciones anteriores sea positiva \n   //...\n}\n</code></pre>"},{"location":"js_estructuras/#operador-if","title":"Operador if","text":"<p>Es una forma m\u00e1s esquem\u00e1tica de realizar algunos if sencillos. No s\u00f3lo realiza una comparaci\u00f3n de valores, adem\u00e1s asigna un valor a una variable. Lo que hace es evaluar la condici\u00f3n (colocada entre par\u00e9ntesis) y si es positiva asigna el valor1 a la variable y en caso contrario le asigna el valor2</p> <p>La sintaxis es la siguiente</p> <pre><code>variable = (condici\u00f3n) ? valor1 : valor2\n</code></pre> <p>Ejemplo</p> <pre><code>momento = (hora_actual &lt; 12) ? \"Antes del mediod\u00eda\" : \"Despu\u00e9s del mediod\u00eda\"\n</code></pre>"},{"location":"js_estructuras/#switch","title":"switch","text":"<p>switch es una estructura un poco m\u00e1s compleja que permite hacer m\u00faltiples operaciones dependiendo del estado de una variable. Sirve para tomar decisiones en funci\u00f3n de distintos estados de las variables. Esta expresi\u00f3n se utiliza cuando tenemos m\u00faltiples posibilidades como resultado de la evaluaci\u00f3n de una sentencia.</p> <p>La declaraci\u00f3n switch eval\u00faa una expresi\u00f3n, comparando el valor de esa expresi\u00f3n con una instancia case, y ejecuta declaraciones asociadas a ese case, as\u00ed como las declaraciones en los case que siguen.</p> <p>La sintaxis es la siguiente</p> <pre><code>switch (expresi\u00f3n) { \n    case valor1: \n        //Sentencias a ejecutar si la expresi\u00f3n tiene como valor a valor1 \n        break \n    case valor2: \n        //Sentencias a ejecutar si la expresi\u00f3n tiene como valor a valor2 \n        break \n    case valor3: \n        //Sentencias a ejecutar si la expresi\u00f3n tiene como valor a valor3 \n        break \n    default: \n        //Sentencias a ejecutar si el valor no es ninguno de los anteriores \n}\n</code></pre> <p>Note</p> <p>La palabra break es opcional, pero si no la ponemos a partir de que se encuentre coincidencia con un valor se ejecutar\u00e1n todas las sentencias relacionadas con este y todas las siguientes. Es decir, si en nuestro esquema anterior no hubiese ning\u00fan break y la expresi\u00f3n valiese valor1, se ejecutar\u00edan las sentencias relacionadas con valor1 y tambi\u00e9n las relacionadas con valor2, valor3 y default.</p> <p>Tambi\u00e9n es opcional la opci\u00f3n default u opci\u00f3n por defecto.</p> <p>Ejemplo</p> <pre><code>switch (dia_de_la_semana) { \n    case 1: \n        document.write(\"Es Lunes\") \n        break \n    case 2: \n        document.write(\"Es Martes\") \n        break \n    case 3: \n        document.write(\"Es Mi\u00e9rcoles\") \n        break \n    case 4: \n        document.write(\"Es Jueves\") \n        break \n    case 5: \n        document.write(\"Es viernes\") \n        break \n    case 6: \n    case 7: \n        document.write(\"Es fin de semana\") \n        break \n    default: \n        document.write(\"Ese d\u00eda no existe\") \n}\n</code></pre>"},{"location":"js_estructuras/#try-catch","title":"TRY ... CATCH","text":"<p>La declaraci\u00f3n try...catch se\u00f1ala un bloque de instrucciones a intentar (try), y especifica una respuesta si se produce una excepci\u00f3n (catch).</p> <p>La sentencia try consiste en un bloque try que contiene una o m\u00e1s sentencias. Las llaves {} se deben utilizar siempre, incluso para una bloques de una sola sentencia. Al menos un bloque catch o un bloque finally debe estar presente. Esto nos da tres formas posibles para la sentencia try:</p> <pre><code>try...catch\ntry...finally\ntry...catch...finally\n</code></pre> <p>Un bloque catch contiene sentencias que especifican que hacer si una excepci\u00f3n es lanzada en el bloque try. Si cualquier sentencia dentro del bloque try (o en una funcion llamada desde dentro del bloque try) lanza una excepci\u00f3n, el control cambia inmediatamente al bloque catch . Si no se lanza ninguna excepcion en el bloque try, el bloque catch se omite.</p> <p>La bloque finally se ejecuta despues del bloque try y el/los bloque(s) catch hayan finalizado su ejecuci\u00f3n. \u00c9ste bloque siempre se ejecuta, independientemente de si una excepci\u00f3n fue lanzada o capturada</p> <p>Ejemplo</p> <pre><code>try {\n   throw \"myException\"; // genera una excepci\u00f3n\n}\ncatch (e) {\n   // sentencias para manejar cualquier excepci\u00f3n\n   logMyErrors(e); // pasa el objeto de la excepci\u00f3n al manejador de errores\n}\n</code></pre>"},{"location":"js_estructuras/#bucles-iteraciones","title":"Bucles - iteraciones","text":"<p>Los bucles se utilizan para realizar ciertas acciones repetidamente. Son muy utilizados a todos los niveles en la programaci\u00f3n. Con un bucle podemos por ejemplo imprimir en una p\u00e1gina los n\u00fameros del 1 al 100 sin necesidad de escribir cien veces el la instrucci\u00f3n imprimir.</p> <p>En Javascript existen varios tipos de bucles, cada uno est\u00e1 indicado para un tipo de iteraci\u00f3n distinto y son los siguientes:</p> <p>https://developer.mozilla.org/es/docs/Web/JavaScript</p>"},{"location":"js_estructuras/#for","title":"for","text":"<p>El bucle for se utiliza para repetir una o m\u00e1s instrucciones un determinado n\u00famero de veces. De entre todos los bucles, el for se suele utilizar cuando sabemos seguro el n\u00famero de veces que queremos que se ejecute. </p> <p>La sintaxis es la siguiente</p> <pre><code>for (inicializaci\u00f3n; condici\u00f3n; actualizaci\u00f3n) { \n    //sentencias a ejecutar en cada iteraci\u00f3n \n}\n</code></pre> <p>El bucle for tiene tres partes incluidas entre los par\u00e9ntesis, que nos sirven para definir c\u00f3mo deseamos que se realicen las repeticiones. La primera parte es la inicializaci\u00f3n, que se ejecuta solamente al comenzar la primera iteraci\u00f3n del bucle. En esta parte se suele colocar la variable que utilizaremos para llevar la cuenta de las veces que se ejecuta el bucle.</p> <p>La segunda parte es la condici\u00f3n, que se evaluar\u00e1 cada vez que comience una iteraci\u00f3n del bucle. Contiene una expresi\u00f3n para decidir cu\u00e1ndo se ha de detener el bucle, o mejor dicho, la condici\u00f3n que se debe cumplir para que contin\u00fae la ejecuci\u00f3n del bucle.</p> <p>Por \u00faltimo tenemos la actualizaci\u00f3n, que sirve para indicar los cambios que queramos ejecutar en las variables cada vez que termina la iteraci\u00f3n del bucle, antes de comprobar si se debe seguir ejecutando.</p> <p>Ejemplo para escribir los n\u00famero del 1 al 10.</p> <pre><code>var i \nfor (i=0; i&lt;=10; i++) { \n    document.write(i)\n    document.write(\"&lt;br&gt;\") \n}\n</code></pre> <p>Por ejemplo si queremos escribir los n\u00famero del 500 al 1.000 de dos en dos se escribir\u00e1 el siguiente bucle.</p> <pre><code>var i \nfor (i=500; i&lt;=1000; i+=2) { \n    document.write(i)\n    document.write(\"&lt;br&gt;\") \n}\n</code></pre>"},{"location":"js_estructuras/#forin","title":"for...in","text":"<p>Un bucle for...in itera sobre las propiedades de un objeto en un orden arbitrario</p> <p>La sintaxis es la siguiente</p> <pre><code>for (variable in objeto) { \n    //sentencias a ejecutar en cada iteraci\u00f3n \n}\n</code></pre> <p>Ejemplo <pre><code>const object = { a: 1, b: 2, c: 3 };\n\nfor (const property in object) {\n  console.log(`${property}: ${object[property]}`);\n}\n</code></pre></p>"},{"location":"js_estructuras/#forof","title":"for...of","text":"<p>La sentencia for...of ejecuta un bloque de c\u00f3digo para cada elemento de un objeto iterable, como lo son: String, Array, TypedArray, Map, Set e iterables definidos por el usuario. La sintaxis de  for...of es espec\u00edfica para las colecciones, y no para todos los objetos. Esta Iterar\u00e1 sobre cualquiera de los elementos de una colecci\u00f3n. <sup>2</sup></p> <p>La sintaxis es la siguiente</p> <pre><code>for (variable of objeto) { \n    //sentencias a ejecutar en cada iteraci\u00f3n \n}\n</code></pre> <p>Ejemplo <pre><code>const iterable = [10, 20, 30];\n\nfor (const value of iterable) {\n  console.log(value);\n}\n</code></pre></p>"},{"location":"js_estructuras/#while","title":"while","text":"<p>Este bucle se utiliza cuando queremos repetir la ejecuci\u00f3n de unas sentencias un n\u00famero indefinido de veces, siempre que se cumpla una condici\u00f3n.</p> <p>La sintaxis es la siguiente</p> <pre><code>while (condici\u00f3n){ \n    //sentencias a ejecutar \n}\n</code></pre> <p>Ejemplo</p> <pre><code>let n = 0;\nlet x = 0;\nwhile (n &lt; 3) {\n  n ++;\n  x += n;\n}\n</code></pre> <p>Ejemplo. Lo que hace es pedir que el usuario introduzca un color y lo hace repetidas veces, mientras que el color introducido no sea rojo. </p> <pre><code>var color = \"\" \nwhile (color != \"rojo\"){ \n    color = prompt(\"dame un color (escribe rojo para salir)\",\"\") \n}\n</code></pre>"},{"location":"js_estructuras/#dowhile","title":"do...while","text":"<p>Es una variaci\u00f3n del bucle while visto anteriormente. Se utiliza generalmente cuando no sabemos cuantas veces se habr\u00e1 de ejecutar el bucle, igual que el bucle while, con la diferencia de que sabemos seguro que el bucle por lo menos se ejecutar\u00e1 una vez.</p> <p>La sintaxis es la siguiente</p> <pre><code>do { \n    //sentencias del bucle \n} while (condici\u00f3n)\n</code></pre> <p>Ejemplo. Este ejemplo funciona exactamente igual que el anterior, excepto que no tuvimos que inicializar la variable color antes de introducirnos en el bucle </p> <pre><code>var color \ndo { \n    color = prompt(\"dame un color (escribe rojo para salir)\",\"\") \n} while (color != \"rojo\")\n</code></pre>"},{"location":"js_estructuras/#operadores","title":"Operadores","text":"<p>Los operadores permiten manipular el valor de las variables, realizar operaciones matem\u00e1ticas con sus valores y comparar diferentes variables. De esta forma, los operadores permiten a los programas realizar c\u00e1lculos complejos y tomar decisiones l\u00f3gicas en funci\u00f3n de comparaciones y otros tipos de condiciones. <sup>3</sup></p> <p>JavaScript tiene una serie de operadores entre los m\u00e1s com\u00fanes est\u00e1n: operadores de asignaci\u00f3n, de comparaci\u00f3n, aritm\u00e9ticos y l\u00f3gicos. Se puede ver el listado completo de los operadores en https://developer.mozilla.org/es/docs/Web/JavaScript/Guide/Expressions_and_Operators </p> <p>Al igual que en las mat\u00e9maaticas los operadores tiene un orden de preferencia a la hora de evaluar una expresi\u00f3n. <sup>4</sup></p>"},{"location":"js_estructuras/#operadores-de-asignacion","title":"Operadores de asignaci\u00f3n","text":"<p>Un operador de asignaci\u00f3n asigna un valor a su operando izquierdo bas\u00e1ndose en el valor de su operando derecho. El operador de asignaci\u00f3n simple es igual (=), que asigna el valor de su operando derecho a su operando izquierdo. Es decir, x = y asigna el valor de y a x.</p> <p>Ejemplos</p> <pre><code>var color = \"rojo\";\nlet count = 23;\nconst frutas = [];\n</code></pre>"},{"location":"js_estructuras/#operadores-de-comparacion","title":"Operadores de comparaci\u00f3n","text":"<p>Un operador de comparaci\u00f3n compara sus operandos y devuelve un valor l\u00f3gico en funci\u00f3n de si la comparaci\u00f3n es verdadera (true) o falsa (false).</p> <p>Ejemplos</p> <pre><code>var var1 = 3;\nvar var2 = 4;\n\n//igual\n3 == var1;\n\"3\" == var1;\n//no igual\nvar1 != 4\nvar2 != var1\n//estrictamente igual\n3 === var1\n//estricatamente no igual\nvar1 !== \"3\"\n//mayor que\nvar2 &gt; var1\n//menor igual que\nvar1 &lt;= var2\n</code></pre>"},{"location":"js_estructuras/#operadores-aritmeticos","title":"Operadores aritm\u00e9ticos","text":"<p>Un operador aritm\u00e9tico toma valores num\u00e9ricos como sus operandos y devuelve un solo valor num\u00e9rico. Los operadores aritm\u00e9ticos est\u00e1ndar son suma (+), resta (-), multiplicaci\u00f3n (*) y divisi\u00f3n (/).</p> <p>Ejemplos</p> <pre><code>var var1 = 3;\nvar var2 = 4;\n\nvar1 + var2;\nvar2 * var1;\n</code></pre>"},{"location":"js_estructuras/#operadores-logicos","title":"Operadores l\u00f3gicos","text":"<p>Los operadores l\u00f3gicos se utilizan normalmente con valores booleanos (l\u00f3gicos); cuando lo son, devuelven un valor booleano.</p> Operador Uso Descripci\u00f3n AND L\u00f3gico (&amp;&amp;) expr1 &amp;&amp; expr2 Devuelve expr1 si se puede convertir a false; de lo contrario, devuelve expr2. Por lo tanto, cuando se usa con valores booleanos, &amp;&amp; devuelve true si ambos operandos son true; de lo contrario, devuelve false. OR l\u00f3gico (||) expr1 || expr2 Devuelve expr1 si se puede convertir a true; de lo contrario, devuelve expr2. Por lo tanto, cuando se usa con valores booleanos, || devuelve true si alguno de los operandos es true; si ambos son falsos, devuelve false. NOT l\u00f3gico (!) !expr Devuelve false si su \u00fanico operando se puede convertir a true; de lo contrario, devuelve true. <p>Ejemplos</p> <pre><code>var a1 =  true &amp;&amp; true;     // t &amp;&amp; t devuelve true\nvar a2 =  true &amp;&amp; false;    // t &amp;&amp; f devuelve false\nvar o1 =  true || true;     // t || t devuelve true\nvar o2 = false || true;     // f || t devuelve true\nvar o3 = false || false;     // f || f devuelve false\nvar n1 = !true;  // !t devuelve false\nvar n2 = !false; // !f devuelve true\n</code></pre>"},{"location":"js_estructuras/#referencias","title":"Referencias","text":"<ol> <li> <p>https://desarrolloweb.com/articulos/543.php \u21a9</p> </li> <li> <p>https://developer.mozilla.org/es/docs/Web/JavaScript/Referencia/Sentencias \u21a9</p> </li> <li> <p>https://uniwebsidad.com/libros/javascript/capitulo-3/operadores \u21a9</p> </li> <li> <p>https://developer.mozilla.org/es/docs/Web/JavaScript/Guide/Expressions_and_Operators#precedencia_de_los_operadores \u21a9</p> </li> </ol>"},{"location":"js_objetos/","title":"Objetos en JS","text":"<p>JavaScript est\u00e1 dise\u00f1ado en un paradigma simple basado en objetos. Un objeto es una colecci\u00f3n de propiedades, y una propiedad es una asociaci\u00f3n entre un nombre (o clave) y un valor. El valor de una propiedad puede ser una funci\u00f3n, en cuyo caso la propiedad es conocida como un m\u00e9todo. <sup>1</sup></p> <p>El concepto de Objetos se puede entender con objetos tangibles de la vida real. Por ejemplo una mesa es un objeto con propiedades. La mesa tiena color, un dese\u00f1o, material, n\u00famero de patas, etc. Otro ejemplo ser\u00eda un coche. El coche tiene uan serie de propiedades como la marca, modelo, color, etc. pero tambi\u00e9n tiene una serie de m\u00e9todos (funciones) como puede ser encender, girar, avanzar, etc.</p> <p>Debemos tener en cuenta que todo es un objeto en JavaScript.</p> <p>Por ejemplo si creamos una cadena de texto JS internamente crea un objeto de tipo String (cadena de texto).</p> <pre><code>const texto = \"Hola mundo!\";\n\n/// para ver su longitud podemos consultar la propiedad length\ntexto.length;\n/// podemos convertir todo el texto a may\u00fasculas usando el m\u00e9doto toUpperCase\ntexto.toUpperCase();\n</code></pre> <p>Para ver los m\u00e9todos m\u00e1s usados cuando se trabajan con cadenas de texto visitar https://developer.mozilla.org/es/docs/Learn/JavaScript/First_steps/Useful_string_methods. Aqu\u00ed podremos ver como acceder a una subcadena de caracteres, pasar el texto a may\u00fasculas, etc.</p> <p>En JavaScript se pueden crear nuevos objetos de diferentes maneras a continuaci\u00f3n veremos algunas.</p>"},{"location":"js_objetos/#iniciador-de-objeto","title":"Iniciador de objeto","text":"<p>Es la forma m\u00e1s simple de crear un objeto. Consiste en crear una lista delimitada por comas de cero o m\u00e1s pares de nombres de propiedad y valores asociados de un objeto, encerrados entre llaves ({}).</p> <p>Ejemplo</p> <pre><code>const miPerro = {\n    nombre: 'H\u00e9rcules',\n    raza: 'Malt\u00e9s',\n    edad: 5,\n    ladrar: function () {\n        console.log(\"guau\");\n    }\n};\n\nconst tuPerro = {\n    nombre: 'Rex',\n    raza: 'Pastor',\n    edad: 10,\n    ladrar: function () {\n        console.log(\"guau\");\n    }\n};\n</code></pre>"},{"location":"js_objetos/#funcion-constructora","title":"Funci\u00f3n constructora","text":"<p>Como alternativa, puedes crear un objeto con estos dos pasos:</p> <ol> <li>Definir el tipo de objeto escribiendo una funci\u00f3n constructora. Existe una fuerte convenci\u00f3n, con buena raz\u00f3n, para utilizar en may\u00fascula la letra inicial.</li> <li>Crear una instancia del objeto con el operador new.</li> </ol> <p>Ejemplo</p> <pre><code>function Perro(nombre, raza, edad) {\n    this.nombre = nombre;\n    this.raza = raza;\n    this.edad = edad;\n    this.ladrar = function () {\n        console.log(\"guau\");\n    }\n}\n\nconst myPerro = new Perro('H\u00e9rcules', 'Malt\u00e9s', 5);\nconst tuPerro = new Perro('Rex', 'Pastor', 10);\n</code></pre>"},{"location":"js_objetos/#acceder-a-las-propiedades","title":"Acceder a las propiedades","text":"<p>Podemos acceder a las prpopiedades de los objetos de 2 formas:</p> <ol> <li> <p>Usando la notaci\u00f3n de punto.</p> <p>Ejemplo </p> <pre><code>const myPerro = new Perro('H\u00e9rcules', 'Malt\u00e9s', 5);\n\nconsole.log(myPerro.nombre); //debe retornar H\u00e9rcules\n</code></pre> </li> <li> <p>Usando la notaci\u00f3n de corchetes.</p> <p>Ejemplo </p> <pre><code>const myPerro = new Perro('H\u00e9rcules', 'Malt\u00e9s', 5);\n\nconsole.log(myPerro[\"nombre\"]); //debe retornar H\u00e9rcules\n</code></pre> </li> </ol> <p>El nombre de la propiedad de un objeto puede ser cualquier cadena v\u00e1lida de JavaScript, o cualquier cosa que se pueda convertir en una cadena, incluyendo una cadena vac\u00eda. Sin embargo, cualquier nombre de propiedad que no sea un identificador v\u00e1lido de JavaScript (por ejemplo, el nombre de alguna propiedad que tenga un espacio o un gui\u00f3n, o comience con un n\u00famero) solo se puede acceder utilizando la notaci\u00f3n de corchetes. Esta notaci\u00f3n es muy \u00fatil tambi\u00e9n cuando los nombres de propiedades son determinados din\u00e1micamente.</p>"},{"location":"js_objetos/#modificar-o-crear-propiedades","title":"Modificar o crear propiedades","text":"<p>Igualmente que en el caso anterior podemos usar las dos notaciones. En este caso le asignaremos un nuevo valor a la propiedad. Si la propiedad ya existe se modifica su valor y si la propiedad no existe se crea esta nueva propiedad.</p> <p>Ejemplo </p> <pre><code>const myPerro = new Perro('H\u00e9rcules', 'Malt\u00e9s', 5);\n\n//modficar una propiedad\nmyPerro.edad = 6;\nmyPerro[\"raza\"] = \"Dogo\";\n\n//crear una propiedad\nmyPerro.color = \"Blanco\";\nmyPerro[\"peso-kg\"] = 64; \n</code></pre>"},{"location":"js_objetos/#clases","title":"Clases","text":"<p>Las clases de JavaScript proveen una sintaxis mucho m\u00e1s clara y simple para crear objetos y lidiar con la herencia. Las clases son \"funciones especiales\".</p>"},{"location":"js_objetos/#declaracion-de-clases","title":"Declaraci\u00f3n de clases","text":"<p>Una manera de definir una clase es mediante una declaraci\u00f3n de clase. Para declarar una clase, se utiliza la palabra reservada class y un nombre para la clase</p> <p>Ejemplo</p> <pre><code>class Rectangulo {\n  constructor(alto, ancho) {\n    this.alto = alto;\n    this.ancho = ancho;\n  }\n}\n</code></pre> <p>Warning</p> <p>Una importante diferencia entre las declaraciones de funciones y las declaraciones de clases es que las declaraciones de funciones son alojadas y las declaraciones de clases no lo son. En primer lugar necesitas declarar tu clase y luego acceder a ella, de otro modo el c\u00f3digo arrojar\u00e1 un error.</p> <p>Otra manera de definir una clase es mediante las expresiones de clase que pueden ser nombradas o an\u00f3nimas.</p> <p>Ejemplo</p> <pre><code>// Anonima\nlet Rectangulo = class {\n  constructor(alto, ancho) {\n    this.alto = alto;\n    this.ancho = ancho;\n  }\n};\n\nconsole.log(Rectangulo.name);\n// output: \"Rectangulo\"\n\n// Nombrada\nlet Rectangulo = class Rectangulo2 {\n  constructor(alto, ancho) {\n    this.alto = alto;\n    this.ancho = ancho;\n  }\n};\nconsole.log(Rectangulo.name);\n// output: \"Rectangulo2\"\n</code></pre>"},{"location":"js_objetos/#cuerpo-de-la-clase-y-definicion-de-metodos","title":"Cuerpo de la clase y definici\u00f3n de m\u00e9todos","text":"<p>El contenido de una clase es la parte que se encuentra entre las llaves {}. Este es el lugar se definen los miembros de clase, como los m\u00e9todos o constructores.</p> <p>El m\u00e9todo constructor es un m\u00e9todo especial para crear e inicializar un objeto creado con una clase. Solo puede haber un m\u00e9todo especial con el nombre \"constructor\" en una clase. Un constructor puede usar la palabra reservada super para llamar al constructor de una superclase.</p> <p>Ejemplo </p> <pre><code>class Rectangulo {\n  constructor (alto, ancho) {\n    this.alto = alto;\n    this.ancho = ancho;\n  }\n  // Getter\n  get area() {\n     return this.calcArea();\n   }\n  // M\u00e9todo\n  calcArea () {\n    return this.alto * this.ancho;\n  }\n}\n\nconst cuadrado = new Rectangulo(10, 10);\n\nconsole.log(cuadrado.area); // 100\nconsole.log(cuadrado.calcArea()); // 100\n</code></pre> <p>La palabra clave static define un m\u00e9todo est\u00e1tico para una clase. Los m\u00e9todos est\u00e1ticos son llamados sin instanciar su clase y no pueden ser llamados mediante una instancia de clase. Los m\u00e9todos est\u00e1ticos son a menudo usados para crear funciones de utilidad para una aplicaci\u00f3n.</p> <p>Ejemplo</p> <pre><code>class Calcula {\n\n    static suma (a, b) {\n        return a + b;\n    }\n\n    static resta (a, b) {\n        return a - b;\n    }\n}\n\nconsole.log (Calcula.suma(2, 3));\nconsole.log (Calcula.resta(20, 7));\n</code></pre>"},{"location":"js_objetos/#subclases","title":"Subclases","text":"<p>La palabra clave extends es usada en declaraciones de clase o expresiones de clase para crear una clase hija.</p> <p>Ejemplo</p> <pre><code>class Animal {\n  constructor(nombre) {\n    this.nombre = nombre;\n  }\n\n  hablar() {\n    console.log(this.nombre + ' hace un ruido.');\n  }\n}\n\nclass Perro extends Animal {\n  hablar() {\n    console.log(this.nombre + ' ladra.');\n  }\n}\n\nconst p = new Perro('Mitzie');\np.hablar();\n</code></pre>"},{"location":"js_objetos/#superclases","title":"S\u00faperclases","text":"<p>La palabra clave super es usada para llamar funciones del objeto padre.</p> <p>Ejemplo</p> <pre><code>class Animal {\n  constructor(nombre) {\n    this.nombre = nombre;\n  }\n\n  hablar() {\n    console.log(this.nombre + ' hace un ruido.');\n  }\n}\n\nclass Perro extends Animal {\n  hablar() {\n    super.hablar();\n    console.log(this.nombre + ' ladra.');\n  }\n}\n\nconst p = new Perro('Mitzie');\np.hablar();\n</code></pre>"},{"location":"js_objetos/#trabajar-con-matrices","title":"Trabajar con Matrices","text":"<p>Veremos algunos m\u00e9todos bastante \u00fatiles relacionados con matrices</p>"},{"location":"js_objetos/#agregar-y-eliminar-elementos-de-la-matriz","title":"Agregar y eliminar elementos de la matriz","text":"<p>Antes que nada, para a\u00f1dir o eliminar un elemento al final de una matriz podemos usar push() y pop() respectivamente.</p> <p>Ejemplo</p> <pre><code>let myArray = ['Manchester', 'London', 'Liverpool', 'Birmingham', 'Leeds', 'Carlisle'];\n//agregar un elemento\nmyArray.push('Cardiff');\nconsole.log(myArray);\n\n//eliminar el \u00faltimo elemento\nmyArray.pop();\nconsole.log(myArray);\n</code></pre> <p>Los m\u00e9todos unshift() y shift() funcionan exactamente igual de push() y pop(), respectivamente, excepto que funcionan al principio de la matriz, no al final.</p> <p>Ejemplo</p> <pre><code>let myArray = ['Manchester', 'London', 'Liverpool', 'Birmingham', 'Leeds', 'Carlisle'];\n//agregar un elemento\nmyArray.unshift('Cardiff');\nconsole.log(myArray);\n\n//eliminar el \u00faltimo elemento\nmyArray.shift();\nconsole.log(myArray);\n</code></pre> <p>Para var m\u00e1s metodos de agregar o eliminar elementos en una matriz ver https://developer.mozilla.org/es/docs/Web/JavaScript/Referencia/Objetos_globales/Array#operaciones_habituales</p>"},{"location":"js_objetos/#operadores-de-matrices","title":"Operadores de matrices","text":"<p>A menudo, nos encontramos en la necesidad de tomar un array y modificar cada elemento de la misma manera o filtrar los elementos de un array, etc. Para eso tenemos los siguientes m\u00e9todos. <sup>2</sup></p>"},{"location":"js_objetos/#foreach","title":"forEach","text":"<p>El m\u00e9todo forEach() ejecuta la funci\u00f3n indicada una vez por cada elemento del array.</p> <p>Ejemplo</p> <pre><code>const array1 = ['a', 'b', 'c'];\n\narray1.forEach(element =&gt; console.log(element));\n</code></pre>"},{"location":"js_objetos/#map","title":"map","text":"<p>El m\u00e9todo map() crea un nuevo array con los resultados de la llamada a la funci\u00f3n indicada aplicados a cada uno de sus elementos.</p> <p>Ejemplo</p> <pre><code>const numbers = [1, 5, 10, 15];\nconst doubles = numbers.map(function(x) {\n   return x * 2;\n});\n</code></pre>"},{"location":"js_objetos/#filter","title":"filter","text":"<p>El m\u00e9todo filter() crea un nuevo array con todos los elementos que cumplan la condici\u00f3n implementada por la funci\u00f3n dada.</p> <p>Ejemplo</p> <pre><code>const numbers = [1, 5, 10, 15];\nconst mayores = numbers.filter(function(x) {\n   return x &gt;= 10;\n});\n//usando la arrow function\nconst menores = numbers.filter(x =&gt; x &lt; 10);\nconsole.log(mayores);\nconsole.log(menores);\n</code></pre>"},{"location":"js_objetos/#reduce","title":"reduce","text":"<p>El m\u00e9todo reduce() ejecuta una funci\u00f3n reductora sobre cada elemento de un array, devolviendo como resultado un \u00fanico valor.</p> <p>Ejemplo</p> <pre><code>const array1 = [1, 2, 3, 4];\nconst reducer = (accumulator, currentValue) =&gt; accumulator + currentValue;\n\n// 1 + 2 + 3 + 4\nconsole.log(array1.reduce(reducer));\n// expected output: 10\n\n// 5 + 1 + 2 + 3 + 4\nconsole.log(array1.reduce(reducer, 5));\n// expected output: 15\n</code></pre> <p>Para ver m\u00e1s m\u00e9todos de las matrices ir a https://developer.mozilla.org/es/docs/Web/JavaScript/Referencia/Objetos_globales/Array#m%C3%A9todos_de_instancia</p>"},{"location":"js_objetos/#referencias","title":"Referencias","text":"<ol> <li> <p>https://developer.mozilla.org/es/docs/Web/JavaScript/Guide/Trabajando_con_objectos \u21a9</p> </li> <li> <p>https://code.tutsplus.com/es/tutorials/how-to-use-map-filter-reduce-in-javascript--cms-26209 \u21a9</p> </li> </ol>"},{"location":"js_servidor/","title":"JS en el servidor","text":"<p>Dentro del desarrollo web, el backend se encarga de todos los procesos necesarios para que la web funcione de forma correcta. Estos procesos o funciones no son visibles, pero tienen mucha importancia en el buen funcionamiento de un sitio web. Algunas de estas acciones que controla el backend son la conexi\u00f3n con la base de datos o la comunicaci\u00f3n con el servidor de hosting.</p> <p>El desarrollo del backend se puede hacer usando diferentes lenguajes de programaci\u00f3n como PHP, Java, .Net, Python, Node.js, etc. En nuestro caso usaremos Node.js<sup>1</sup> ya que es un entorno de ejecuci\u00f3n multiplataforma basado en JavaScript. </p> <p>Warning</p> <p>Este NO es un curso de Node.js. \u00fanicamente explicaremos un ejemplo de c\u00f3mo montar un servidor con Node.js que permita leer y escribir datos en una Base de datos con PostgreSQL. Tampoco es un curso de base de datos y se asume que ya se tienen conocimientos previos de trabajar con PostgreSQL.</p>"},{"location":"js_servidor/#servidor-nodejs","title":"Servidor Node.js","text":"<p>Para crear nuestro servidor con Node.js usaremos Express<sup>2</sup>. Express es una infraestructura de aplicaciones web Node.js m\u00ednima y flexible que proporciona un conjunto s\u00f3lido de caracter\u00edsticas para las aplicaciones web y m\u00f3viles.</p> <ol> <li> <p>Crear una carpeta llamada servidor</p> </li> <li> <p>Abrir un terminal dentro de esa carpeta y ejecutar el siguiente comando</p> <pre><code>npm init -y\n</code></pre> </li> <li> <p>A continuaci\u00f3n, instale Express en el directorio y gu\u00e1rdelo en la lista de dependencias.</p> <pre><code>npm i express\n</code></pre> </li> <li> <p>En el directorio servidor crear un archivo llamado app.js y copie el sigueinte c\u00f3digo:</p> <pre><code>const express = require('express');\nconst app = express();\nconst port = 3000;\n\napp.get('/', (req, res) =&gt; {\nres.send('Hello World!')\n});\n\napp.listen(port, () =&gt; {\nconsole.log(`Example app listening at http://localhost:${port}`)\n});\n</code></pre> </li> <li> <p>Guarde el archivo y abrir la pagina http://localhost:3000/ en el navegador para ver que el servidor est\u00e1 funcionando.</p> </li> <li> <p>Crear la base de datos, en PostgreSQL crear una nueva base de datos llamada node_ejemplo (o usar una existente). Dentro de esa base de datos crear una tabla llamada tranformacion. Esta tabla debe contener 6 columnas: srs_origen, x_origen, y_origen, srs_destino, x_destino, y_destino. Las columnas de srs deben ser de tipo texto y el resto de tipo num\u00e9rico</p> <pre><code>CREATE SEQUENCE transformacion_id_seq;\n\nCREATE TABLE public.transformacion\n(\n    srs_origen character varying(5) COLLATE pg_catalog.\"default\" NOT NULL,\n    x_origen numeric NOT NULL,\n    y_origen numeric NOT NULL,\n    srs_destino character varying(5) COLLATE pg_catalog.\"default\" NOT NULL,\n    x_destino numeric NOT NULL,\n    y_destino numeric NOT NULL,\n    id integer NOT NULL DEFAULT nextval('transformacion_id_seq'::regclass),\n    CONSTRAINT transformacion_pkey PRIMARY KEY (id)\n);\n\nALTER SEQUENCE transformacion_id_seq\nOWNED BY transformacion.id;\n</code></pre> </li> <li> <p>Instalar el node-postgres una librer\u00eda de Node.js que nos permite conectar con bases de datos de PostgreSQL</p> <pre><code>npm i pg\n</code></pre> </li> <li> <p>Crear el archivo de configuraci\u00f3n para conectar con la BD desde Node. Dentro de la carpeta servidor crear una nueva carpeta llamada db. Dentro de esta carpeta crear un archivo llamado db.js y copiar el siguiente c\u00f3digo</p> <pre><code>const { Pool } = require(\"pg\");\n\nconst config = {    \n    user: 'TU_USUARIO',\n    host: 'localhost',\n    database: 'node_ejemplo',\n    password: 'TU_CONTRASE\u00d1A',\n    port: 5432,\n};\n\nconst pool = new Pool(config);\n\nmodule.exports = {\n    query: (text, params) =&gt; pool.query(text, params),\n};\n</code></pre> </li> <li> <p>Instalar otras dependencias</p> <pre><code>npm i cors body-parser\n</code></pre> </li> <li> <p>Modificar el servidor para cargar el archivo de configuraci\u00f3n de la Bd y crear la ruta de la API. Modificar el archivo app.js y escribir lo siguiente</p> <pre><code>const express = require('express');\nconst bodyParser = require(\"body-parser\");\nconst cors = require(\"cors\");\nconst apiRoutes = require(\"./routes/api\");\n\nconst app = express();\nconst port = 3000;\n\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: false }));\napp.use(bodyParser.raw());\napp.use(cors());\n\napp.get('/', (request, response) =&gt; {\n    response.json({ info: 'Node.js, Express, and Postgres API' })\n});\n\napp.use(\"/api/\", apiRoutes());\n\napp.listen(port, () =&gt; {\nconsole.log(`Example app listening at http://localhost:${port}`)\n});\n</code></pre> </li> <li> <p>Crear el router para procesar las peticiones. Crear una carpeta llamada routes dentro de la carpeta servidor. Dentro de la carpeta routes crear un archivo llamado api.js y escribir lo siguiente:</p> <pre><code>const Router = require(\"express\").Router;\n\nmodule.exports = () =&gt; {\n\n    const api = new Router();\n\n    api.get(\"/transformaciones\", async (req, res) =&gt; {\n\n        res.json({repuesta: `se debe retornar el listado de todas las transformaciones`});\n\n    })\n\n    api.get(\"/transformaciones/:id\", async (req, res) =&gt; {\n\n        const { id } = req.params;\n        res.json({repuesta: `se debe retornar la transformaci\u00f3n con id = ${id}`});\n\n    });\n\n    api.post(\"/transformaciones\", async (req, res) =&gt; {\n\n        console.log(req.body);\n        const { srs_origen, x_origen, y_origen } = req.body;\n\n        res.json({repuesta: `llamada post para insertar nuevas transformaciones con origen ${srs_origen} y coordenadas lat: ${y_origen}, lon: ${x_origen}`});\n\n    });\n\n    return api;\n\n};\n</code></pre> </li> <li> <p>Reiniciar el servidor de Node.js y luego volverlo a arrancarlo para que los cambios hechos tengan efecto</p> <p>Ctrl+c</p> <pre><code>node app.js\n</code></pre> </li> <li> <p>Probar nuestra API. Para las peticiones GET podemos probarlas directamente desde nuestro navegador. Podemos escribir http://localhost:3000/api/transformaciones/24 o http://localhost:3000/api/transformaciones y debemos ver la respuesta correspondiente.</p> </li> <li> <p>Para probar la peticiones POST podemos abrir un navegador he ir a https://www.apirequest.io/. En el selector seleccionar la opci\u00f3n de POST y en el campo para la URL poner http://localhost:3000/api/transformaciones. Luego agregar el header \"Content-Type\"=application/json y en el Request Body copiar </p> <pre><code>{\n    \"srs_origen\": \"4326\",\n    \"x_origen\": 2,\n    \"y_origen\": 41.5,\n    \"srs_destino\": \"3857\",\n    \"x_destino\": 222638.9815,\n    \"y_destino\": 5086373.6492\n}\n</code></pre> <p></p> </li> <li> <p>Crear las funciones que realizan las querys a nuestra base de datos. Crear una nueva carpeta llamada services dentro de la carpeta servidor. Dentro de la nueva carpeta crear un archivo llamado transformaciones.js y copiar lo siguiente dentro del archivo</p> <pre><code>const db = require(\"../db/db\");\n\nclass TransformacionesService {\n\n    static async getTransformaciones() {\n\n        const SQL = \"SELECT * FROM public.transformacion\";\n\n        const {rows} = await db.query(SQL);\n\n        return rows;\n\n    }\n\n    static async getTransformacionById(id) {\n\n        const SQL = \"SELECT * FROM public.transformacion WHERE id = $1\";\n\n        const {rows} = await db.query(SQL, [id]);\n\n        return rows;\n\n    }\n\n\n    static async createTransformacion(srs_origen, x_origen, y_origen, srs_destino, x_destino, y_destino) {\n\n        const SQL = \"INSERT INTO public.transformacion (srs_origen, x_origen, y_origen, srs_destino, x_destino, y_destino) VALUES ($1, $2, $3, $4, $5, $6) RETURNING *\";\n\n        const {rows} = await db.query(SQL, [srs_origen, x_origen, y_origen, srs_destino, x_destino, y_destino]);\n\n        return rows;\n\n    }\n\n}\n\nmodule.exports = TransformacionesService;\n</code></pre> </li> <li> <p>Conectar nuestra API con la base de datos. Modificar el archivo api.js </p> <pre><code>const Router = require(\"express\").Router;\n\nconst TransformacionesService = require(\"../services/transformaciones\");\n\nmodule.exports = () =&gt; {\n\n    const api = new Router();\n\n    api.get(\"/transformaciones\", async (req, res) =&gt; {\n\n        res.json(await TransformacionesService.getTransformaciones());\n\n    })\n\n    api.get(\"/transformaciones/:id\", async (req, res) =&gt; {\n\n        const { id } = req.params;\n        res.json(await TransformacionesService.getTransformacionById(id));\n\n    });\n\n    api.post(\"/transformaciones\", async (req, res) =&gt; {\n\n        const { srs_origen, x_origen, y_origen, srs_destino, x_destino, y_destino } = req.body;\n        res.json(await TransformacionesService.createTransformacion(srs_origen, x_origen, y_origen, srs_destino, x_destino, y_destino));\n\n    });\n\n    return api;\n\n};\n</code></pre> </li> <li> <p>Probar nuestra API. Parar y arrancar el servidor de Node.js y volver a hacer la llamada POST desde el navegador. Se deber\u00eda crear un nuevo registro en la base de datos. Para consultar el registro podemos abrir http://localhost:3000/api/transformaciones o http://localhost:3000/api/transformaciones/1</p> </li> </ol> <p>Note</p> <p>Este servidor es un demostrador de la funcionalidad b\u00e1sica de la implementaci\u00f3n de una API. En el mismo no se hace control de errores, ni validaci\u00f3n de valores de entrada, etc. NO es un servidor para producci\u00f3n</p>"},{"location":"js_servidor/#modificar-la-calculadora","title":"Modificar la calculadora","text":"<ol> <li> <p>Modificar nuestra aplicaci\u00f3n para llamar a la API. Modificar nuestro archivo index.html que se encuentra en la carpeta web-mgeo y agregar un nuevo boton en el area de la respuesta. </p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"es\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"author\" content=\"[VUESTRO NOMBRE]\"&gt;\n    &lt;meta name=\"description\" content=\"Calculadora geod\u00e9sica que permite hacer la transformaci\u00f3n de coordenadas geogr\u00e1ficas en linea\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;link href=\"https://www.icgc.cat/bundles/microblauicgc/img/favicon.ico\" rel=\"shortcut icon\" type=\"image/x-icon\"&gt;\n    &lt;link rel=\"preconnect\" href=\"https://fonts.gstatic.com\"&gt;\n    &lt;link href=\"https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,300;0,400;0,700;1,400;1,700&amp;display=swap\" rel=\"stylesheet\"&gt;\n    &lt;link type=\"text/css\" href=\"css/estilos.css\" rel=\"stylesheet\"&gt;\n    &lt;title&gt;Mi calculadora geod\u00e9sica&lt;/title&gt;\n    &lt;script src=\"https://cdnjs.cloudflare.com/ajax/libs/proj4js/2.6.3/proj4.min.js\" integrity=\"sha512-TzmbpBIqcR0TyAdg+zJJfpbTeKVj24n+U3vvlP3yBDTOs26ELhrzA+TacRmMAuflTY8tU3zVwbCyfvM3QH58lA==\" crossorigin=\"anonymous\"&gt;&lt;/script&gt;\n    &lt;script src=\"js/script.js\" defer&gt;&lt;/script&gt;\n\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;header&gt;\n        &lt;img src=\"https://www.uab.cat/Imatge/635/883/logop.gif\" alt=\"UAB\"&gt;\n        &lt;h1&gt;Mi calculadora geod\u00e9sica&lt;/h1&gt;\n    &lt;/header&gt;\n    &lt;main&gt;\n        &lt;div&gt;\n            &lt;table&gt;\n                &lt;tr&gt;\n                    &lt;th colspan=\"2\"&gt;&lt;label for=\"origen\"&gt;Sistema de referencia de origen&lt;/label&gt;&lt;/th&gt;\n                    &lt;th colspan=\"2\"&gt;&lt;label for=\"destino\"&gt;Sistema de referencia de destino&lt;/label&gt;&lt;/th&gt;\n                &lt;/tr&gt;\n                &lt;tr&gt;\n                    &lt;td colspan=\"2\"&gt;\n                        &lt;select id=\"origen\"&gt;\n                            &lt;option value=\"EPSG:4326\"&gt;EPSG:4326&lt;/option&gt; \n                            &lt;option value=\"EPSG:3857\"&gt;EPSG:3857&lt;/option&gt;\n                            &lt;option value=\"EPSG:25831\"&gt;EPSG:25831&lt;/option&gt;\n                            &lt;option value=\"EPSG:23031\"&gt;EPSG:23031&lt;/option&gt;\n                        &lt;/select&gt;\n                    &lt;/td&gt;\n                    &lt;td colspan=\"2\"&gt;\n                        &lt;select id=\"destino\"&gt;\n                            &lt;option value=\"EPSG:4326\"&gt;EPSG:4326&lt;/option&gt; \n                            &lt;option value=\"EPSG:3857\"&gt;EPSG:3857&lt;/option&gt;\n                            &lt;option value=\"EPSG:25831\"&gt;EPSG:25831&lt;/option&gt;\n                            &lt;option value=\"EPSG:23031\"&gt;EPSG:23031&lt;/option&gt;\n                        &lt;/select&gt;\n                    &lt;/td&gt;\n                &lt;/tr&gt;\n                &lt;tr&gt;\n                    &lt;td&gt;&lt;label for=\"lat\"&gt;Latitud&lt;/label&gt;&lt;/td&gt;\n                    &lt;td&gt;&lt;label for=\"lng\"&gt;Longitud&lt;/label&gt;&lt;/td&gt;\n                    &lt;td colspan=\"2\"&gt;&lt;/td&gt;\n                &lt;/tr&gt;\n                &lt;tr&gt;\n                    &lt;td&gt;&lt;input type=\"text\" id=\"lat\"&gt;&lt;/td&gt;\n                    &lt;td&gt;&lt;input type=\"text\" id=\"lng\"&gt;&lt;/td&gt;\n                    &lt;td colspan=\"2\"&gt;&lt;div id=\"respuesta\"&gt;&lt;/div&gt;&lt;/td&gt;\n                &lt;/tr&gt;\n                &lt;tr&gt;\n                    &lt;td colspan=\"2\"&gt;&lt;button class=\"btn-tranformar\"&gt;Transformar coordenadas&lt;/button&gt;&lt;/td&gt;\n                    &lt;td colspan=\"2\"&gt;&lt;button class=\"btn-guardar\"&gt;Guardar transformaci\u00f3n&lt;/button&gt;&lt;/td&gt;\n                &lt;/tr&gt;\n            &lt;/table&gt;\n        &lt;/div&gt;\n        &lt;aside&gt;\n            &lt;ul&gt;\n                &lt;li&gt;&lt;a href=\"https://epsg.io/4326\" title=\"WGS 84 -- WGS84 - World Geodetic System 1984, used in GPS\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;EPSG:4326&lt;/a&gt;&lt;/li&gt;\n                &lt;li&gt;EPSG:3857&lt;/li&gt;\n                &lt;li&gt;EPSG:25831&lt;/li&gt;\n                &lt;li&gt;EPSG:23031&lt;/li&gt;\n            &lt;/ul&gt;\n        &lt;/aside&gt;\n    &lt;/main&gt;\n    &lt;footer&gt;\u00a9Copyright 2020 de nadie. Ning\u00fan derecho reservado.&lt;/footer&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> </li> <li> <p>Modificar el archivo script.js para hacer la llamada POST a nuestra API.</p> <pre><code>proj4.defs(\"EPSG:25831\",\"+proj=utm +zone=31 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs\");\n\nconst btnTransformar = document.querySelector(\".btn-tranformar\");\n\nbtnTransformar.addEventListener(\"click\", (evt) =&gt; {\n    console.log(\"Transformar coordenadas\");\n    const srs_origen = document.getElementById(\"origen\").value;\n    const coordTransformada = transformarCoordenadas(41.5, 2, srs_origen, \"EPSG:3857\");\n    document.getElementById(\"respuesta\").innerHTML = coordTransformada;\n});\n\nconst transformarCoordenadas = (lat, lon, epsg_in, epsg_out) =&gt; {\n\n    const coordTransformada = proj4(epsg_in, epsg_out, [lon, lat])\n\n    return coordTransformada;\n\n}\n\nconst btnGuardar = document.querySelector(\".btn-guardar\");\nbtnGuardar.addEventListener(\"click\", async (evt) =&gt; {\n    console.log(\"Guardar coordenadas\");\n    const srs_origen = document.getElementById(\"origen\").value;\n    const coordTransformada = transformarCoordenadas(41.5, 2, srs_origen, \"EPSG:3857\");\n\n    const codi_epsg_origen = srs_origen.replace(\"EPSG:\",\"\");\n    const response = await fetch(\"http://localhost:3000/api/transformaciones/\", {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            srs_origen: codi_epsg_origen,\n            x_origen: 2,\n            y_origen: 41.5,\n            srs_destino: \"3857\",\n            x_destino: coordTransformada[0],\n            y_destino: coordTransformada[1]\n        }),\n        cache: 'no-cache'\n    });\n\n    const data = await response.json();\n\n    console.log(data);\n});\n</code></pre> </li> </ol> <p>Ejercicio 2 pt</p> <ol> <li>Agregar a la calculadora un bot\u00f3n para recuperar todas las transformaciones que est\u00e1n en la base de datos y agregar un elemento para mostrar los registros de la base de datos. 0.5 pt</li> <li>Agregar un campo donde el usuarios pueda poner un id y recuperar el registro de la base de datos con dicho id. Agregar un elemento para mostrar el registro obtenido. 0.25 pt </li> <li>Implementar algunas mejoras a la calculadora, ya sean tanto de estilo, como de funcionalidad 1.25 pt</li> </ol> <p>El resultado debe ser algo como esto </p>"},{"location":"js_servidor/#referencias","title":"Referencias","text":"<ol> <li> <p>https://nodejs.org/ \u21a9</p> </li> <li> <p>https://expressjs.com/es/ \u21a9</p> </li> <li> <p>https://blog.logrocket.com/nodejs-expressjs-postgresql-crud-rest-api-example/ \u21a9</p> </li> </ol>"},{"location":"ejemplos/servidor/node_modules/accepts/","title":"accepts","text":"<p>Higher level content negotiation based on negotiator. Extracted from koa for general use.</p> <p>In addition to negotiator, it allows:</p> <ul> <li>Allows types as an array or arguments list, ie <code>(['text/html', 'application/json'])</code>   as well as <code>('text/html', 'application/json')</code>.</li> <li>Allows type shorthands such as <code>json</code>.</li> <li>Returns <code>false</code> when no types match</li> <li>Treats non-existent headers as <code>*</code></li> </ul>"},{"location":"ejemplos/servidor/node_modules/accepts/#installation","title":"Installation","text":"<p>This is a Node.js module available through the npm registry. Installation is done using the <code>npm install</code> command:</p> <pre><code>$ npm install accepts\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/accepts/#api","title":"API","text":"<pre><code>var accepts = require('accepts')\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/accepts/#acceptsreq","title":"accepts(req)","text":"<p>Create a new <code>Accepts</code> object for the given <code>req</code>.</p>"},{"location":"ejemplos/servidor/node_modules/accepts/#charsetcharsets","title":".charset(charsets)","text":"<p>Return the first accepted charset. If nothing in <code>charsets</code> is accepted, then <code>false</code> is returned.</p>"},{"location":"ejemplos/servidor/node_modules/accepts/#charsets","title":".charsets()","text":"<p>Return the charsets that the request accepts, in the order of the client's preference (most preferred first).</p>"},{"location":"ejemplos/servidor/node_modules/accepts/#encodingencodings","title":".encoding(encodings)","text":"<p>Return the first accepted encoding. If nothing in <code>encodings</code> is accepted, then <code>false</code> is returned.</p>"},{"location":"ejemplos/servidor/node_modules/accepts/#encodings","title":".encodings()","text":"<p>Return the encodings that the request accepts, in the order of the client's preference (most preferred first).</p>"},{"location":"ejemplos/servidor/node_modules/accepts/#languagelanguages","title":".language(languages)","text":"<p>Return the first accepted language. If nothing in <code>languages</code> is accepted, then <code>false</code> is returned.</p>"},{"location":"ejemplos/servidor/node_modules/accepts/#languages","title":".languages()","text":"<p>Return the languages that the request accepts, in the order of the client's preference (most preferred first).</p>"},{"location":"ejemplos/servidor/node_modules/accepts/#typetypes","title":".type(types)","text":"<p>Return the first accepted type (and it is returned as the same text as what appears in the <code>types</code> array). If nothing in <code>types</code> is accepted, then <code>false</code> is returned.</p> <p>The <code>types</code> array can contain full MIME types or file extensions. Any value that is not a full MIME types is passed to <code>require('mime-types').lookup</code>.</p>"},{"location":"ejemplos/servidor/node_modules/accepts/#types","title":".types()","text":"<p>Return the types that the request accepts, in the order of the client's preference (most preferred first).</p>"},{"location":"ejemplos/servidor/node_modules/accepts/#examples","title":"Examples","text":""},{"location":"ejemplos/servidor/node_modules/accepts/#simple-type-negotiation","title":"Simple type negotiation","text":"<p>This simple example shows how to use <code>accepts</code> to return a different typed respond body based on what the client wants to accept. The server lists it's preferences in order and will get back the best match between the client and server.</p> <pre><code>var accepts = require('accepts')\nvar http = require('http')\n\nfunction app (req, res) {\n  var accept = accepts(req)\n\n  // the order of this list is significant; should be server preferred order\n  switch (accept.type(['json', 'html'])) {\n    case 'json':\n      res.setHeader('Content-Type', 'application/json')\n      res.write('{\"hello\":\"world!\"}')\n      break\n    case 'html':\n      res.setHeader('Content-Type', 'text/html')\n      res.write('&lt;b&gt;hello, world!&lt;/b&gt;')\n      break\n    default:\n      // the fallback is text/plain, so no need to specify it above\n      res.setHeader('Content-Type', 'text/plain')\n      res.write('hello, world!')\n      break\n  }\n\n  res.end()\n}\n\nhttp.createServer(app).listen(3000)\n</code></pre> <p>You can test this out with the cURL program: <pre><code>curl -I -H'Accept: text/html' http://localhost:3000/\n</code></pre></p>"},{"location":"ejemplos/servidor/node_modules/accepts/#license","title":"License","text":"<p>MIT</p>"},{"location":"ejemplos/servidor/node_modules/accepts/HISTORY/","title":"1.3.7 / 2019-04-29","text":"<ul> <li>deps: negotiator@0.6.2<ul> <li>Fix sorting charset, encoding, and language with extra parameters</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/accepts/HISTORY/#136-2019-04-28","title":"1.3.6 / 2019-04-28","text":"<ul> <li>deps: mime-types@~2.1.24<ul> <li>deps: mime-db@~1.40.0</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/accepts/HISTORY/#135-2018-02-28","title":"1.3.5 / 2018-02-28","text":"<ul> <li>deps: mime-types@~2.1.18<ul> <li>deps: mime-db@~1.33.0</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/accepts/HISTORY/#134-2017-08-22","title":"1.3.4 / 2017-08-22","text":"<ul> <li>deps: mime-types@~2.1.16<ul> <li>deps: mime-db@~1.29.0</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/accepts/HISTORY/#133-2016-05-02","title":"1.3.3 / 2016-05-02","text":"<ul> <li>deps: mime-types@~2.1.11<ul> <li>deps: mime-db@~1.23.0</li> </ul> </li> <li>deps: negotiator@0.6.1<ul> <li>perf: improve <code>Accept</code> parsing speed</li> <li>perf: improve <code>Accept-Charset</code> parsing speed</li> <li>perf: improve <code>Accept-Encoding</code> parsing speed</li> <li>perf: improve <code>Accept-Language</code> parsing speed</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/accepts/HISTORY/#132-2016-03-08","title":"1.3.2 / 2016-03-08","text":"<ul> <li>deps: mime-types@~2.1.10<ul> <li>Fix extension of <code>application/dash+xml</code></li> <li>Update primary extension for <code>audio/mp4</code></li> <li>deps: mime-db@~1.22.0</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/accepts/HISTORY/#131-2016-01-19","title":"1.3.1 / 2016-01-19","text":"<ul> <li>deps: mime-types@~2.1.9<ul> <li>deps: mime-db@~1.21.0</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/accepts/HISTORY/#130-2015-09-29","title":"1.3.0 / 2015-09-29","text":"<ul> <li>deps: mime-types@~2.1.7<ul> <li>deps: mime-db@~1.19.0</li> </ul> </li> <li>deps: negotiator@0.6.0<ul> <li>Fix including type extensions in parameters in <code>Accept</code> parsing</li> <li>Fix parsing <code>Accept</code> parameters with quoted equals</li> <li>Fix parsing <code>Accept</code> parameters with quoted semicolons</li> <li>Lazy-load modules from main entry point</li> <li>perf: delay type concatenation until needed</li> <li>perf: enable strict mode</li> <li>perf: hoist regular expressions</li> <li>perf: remove closures getting spec properties</li> <li>perf: remove a closure from media type parsing</li> <li>perf: remove property delete from media type parsing</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/accepts/HISTORY/#1213-2015-09-06","title":"1.2.13 / 2015-09-06","text":"<ul> <li>deps: mime-types@~2.1.6<ul> <li>deps: mime-db@~1.18.0</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/accepts/HISTORY/#1212-2015-07-30","title":"1.2.12 / 2015-07-30","text":"<ul> <li>deps: mime-types@~2.1.4<ul> <li>deps: mime-db@~1.16.0</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/accepts/HISTORY/#1211-2015-07-16","title":"1.2.11 / 2015-07-16","text":"<ul> <li>deps: mime-types@~2.1.3<ul> <li>deps: mime-db@~1.15.0</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/accepts/HISTORY/#1210-2015-07-01","title":"1.2.10 / 2015-07-01","text":"<ul> <li>deps: mime-types@~2.1.2<ul> <li>deps: mime-db@~1.14.0</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/accepts/HISTORY/#129-2015-06-08","title":"1.2.9 / 2015-06-08","text":"<ul> <li>deps: mime-types@~2.1.1<ul> <li>perf: fix deopt during mapping</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/accepts/HISTORY/#128-2015-06-07","title":"1.2.8 / 2015-06-07","text":"<ul> <li>deps: mime-types@~2.1.0<ul> <li>deps: mime-db@~1.13.0</li> </ul> </li> <li>perf: avoid argument reassignment &amp; argument slice</li> <li>perf: avoid negotiator recursive construction</li> <li>perf: enable strict mode</li> <li>perf: remove unnecessary bitwise operator</li> </ul>"},{"location":"ejemplos/servidor/node_modules/accepts/HISTORY/#127-2015-05-10","title":"1.2.7 / 2015-05-10","text":"<ul> <li>deps: negotiator@0.5.3<ul> <li>Fix media type parameter matching to be case-insensitive</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/accepts/HISTORY/#126-2015-05-07","title":"1.2.6 / 2015-05-07","text":"<ul> <li>deps: mime-types@~2.0.11<ul> <li>deps: mime-db@~1.9.1</li> </ul> </li> <li>deps: negotiator@0.5.2<ul> <li>Fix comparing media types with quoted values</li> <li>Fix splitting media types with quoted commas</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/accepts/HISTORY/#125-2015-03-13","title":"1.2.5 / 2015-03-13","text":"<ul> <li>deps: mime-types@~2.0.10<ul> <li>deps: mime-db@~1.8.0</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/accepts/HISTORY/#124-2015-02-14","title":"1.2.4 / 2015-02-14","text":"<ul> <li>Support Node.js 0.6</li> <li>deps: mime-types@~2.0.9<ul> <li>deps: mime-db@~1.7.0</li> </ul> </li> <li>deps: negotiator@0.5.1<ul> <li>Fix preference sorting to be stable for long acceptable lists</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/accepts/HISTORY/#123-2015-01-31","title":"1.2.3 / 2015-01-31","text":"<ul> <li>deps: mime-types@~2.0.8<ul> <li>deps: mime-db@~1.6.0</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/accepts/HISTORY/#122-2014-12-30","title":"1.2.2 / 2014-12-30","text":"<ul> <li>deps: mime-types@~2.0.7<ul> <li>deps: mime-db@~1.5.0</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/accepts/HISTORY/#121-2014-12-30","title":"1.2.1 / 2014-12-30","text":"<ul> <li>deps: mime-types@~2.0.5<ul> <li>deps: mime-db@~1.3.1</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/accepts/HISTORY/#120-2014-12-19","title":"1.2.0 / 2014-12-19","text":"<ul> <li>deps: negotiator@0.5.0<ul> <li>Fix list return order when large accepted list</li> <li>Fix missing identity encoding when q=0 exists</li> <li>Remove dynamic building of Negotiator class</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/accepts/HISTORY/#114-2014-12-10","title":"1.1.4 / 2014-12-10","text":"<ul> <li>deps: mime-types@~2.0.4<ul> <li>deps: mime-db@~1.3.0</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/accepts/HISTORY/#113-2014-11-09","title":"1.1.3 / 2014-11-09","text":"<ul> <li>deps: mime-types@~2.0.3<ul> <li>deps: mime-db@~1.2.0</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/accepts/HISTORY/#112-2014-10-14","title":"1.1.2 / 2014-10-14","text":"<ul> <li>deps: negotiator@0.4.9<ul> <li>Fix error when media type has invalid parameter</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/accepts/HISTORY/#111-2014-09-28","title":"1.1.1 / 2014-09-28","text":"<ul> <li>deps: mime-types@~2.0.2<ul> <li>deps: mime-db@~1.1.0</li> </ul> </li> <li>deps: negotiator@0.4.8<ul> <li>Fix all negotiations to be case-insensitive</li> <li>Stable sort preferences of same quality according to client order</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/accepts/HISTORY/#110-2014-09-02","title":"1.1.0 / 2014-09-02","text":"<ul> <li>update <code>mime-types</code></li> </ul>"},{"location":"ejemplos/servidor/node_modules/accepts/HISTORY/#107-2014-07-04","title":"1.0.7 / 2014-07-04","text":"<ul> <li>Fix wrong type returned from <code>type</code> when match after unknown extension</li> </ul>"},{"location":"ejemplos/servidor/node_modules/accepts/HISTORY/#106-2014-06-24","title":"1.0.6 / 2014-06-24","text":"<ul> <li>deps: negotiator@0.4.7</li> </ul>"},{"location":"ejemplos/servidor/node_modules/accepts/HISTORY/#105-2014-06-20","title":"1.0.5 / 2014-06-20","text":"<ul> <li>fix crash when unknown extension given</li> </ul>"},{"location":"ejemplos/servidor/node_modules/accepts/HISTORY/#104-2014-06-19","title":"1.0.4 / 2014-06-19","text":"<ul> <li>use <code>mime-types</code></li> </ul>"},{"location":"ejemplos/servidor/node_modules/accepts/HISTORY/#103-2014-06-11","title":"1.0.3 / 2014-06-11","text":"<ul> <li>deps: negotiator@0.4.6<ul> <li>Order by specificity when quality is the same</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/accepts/HISTORY/#102-2014-05-29","title":"1.0.2 / 2014-05-29","text":"<ul> <li>Fix interpretation when header not in request</li> <li>deps: pin negotiator@0.4.5</li> </ul>"},{"location":"ejemplos/servidor/node_modules/accepts/HISTORY/#101-2014-01-18","title":"1.0.1 / 2014-01-18","text":"<ul> <li>Identity encoding isn't always acceptable</li> <li>deps: negotiator@~0.4.0</li> </ul>"},{"location":"ejemplos/servidor/node_modules/accepts/HISTORY/#100-2013-12-27","title":"1.0.0 / 2013-12-27","text":"<ul> <li>Genesis</li> </ul>"},{"location":"ejemplos/servidor/node_modules/array-flatten/","title":"Array Flatten","text":"<p>Flatten an array of nested arrays into a single flat array. Accepts an optional depth.</p>"},{"location":"ejemplos/servidor/node_modules/array-flatten/#installation","title":"Installation","text":"<pre><code>npm install array-flatten --save\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/array-flatten/#usage","title":"Usage","text":"<pre><code>var flatten = require('array-flatten')\n\nflatten([1, [2, [3, [4, [5], 6], 7], 8], 9])\n//=&gt; [1, 2, 3, 4, 5, 6, 7, 8, 9]\n\nflatten([1, [2, [3, [4, [5], 6], 7], 8], 9], 2)\n//=&gt; [1, 2, 3, [4, [5], 6], 7, 8, 9]\n\n(function () {\n  flatten(arguments) //=&gt; [1, 2, 3]\n})(1, [2, 3])\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/array-flatten/#license","title":"License","text":"<p>MIT</p>"},{"location":"ejemplos/servidor/node_modules/body-parser/","title":"body-parser","text":"<p>Node.js body parsing middleware.</p> <p>Parse incoming request bodies in a middleware before your handlers, available under the <code>req.body</code> property.</p> <p>Note As <code>req.body</code>'s shape is based on user-controlled input, all properties and values in this object are untrusted and should be validated before trusting. For example, <code>req.body.foo.toString()</code> may fail in multiple ways, for example the <code>foo</code> property may not be there or may not be a string, and <code>toString</code> may not be a function and instead a string or other user input.</p> <p>Learn about the anatomy of an HTTP transaction in Node.js.</p> <p>This does not handle multipart bodies, due to their complex and typically large nature. For multipart bodies, you may be interested in the following modules:</p> <ul> <li>busboy and     connect-busboy</li> <li>multiparty and     connect-multiparty</li> <li>formidable</li> <li>multer</li> </ul> <p>This module provides the following parsers:</p> <ul> <li>JSON body parser</li> <li>Raw body parser</li> <li>Text body parser</li> <li>URL-encoded form body parser</li> </ul> <p>Other body parsers you might be interested in:</p> <ul> <li>body</li> <li>co-body</li> </ul>"},{"location":"ejemplos/servidor/node_modules/body-parser/#installation","title":"Installation","text":"<pre><code>$ npm install body-parser\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/body-parser/#api","title":"API","text":"<pre><code>var bodyParser = require('body-parser')\n</code></pre> <p>The <code>bodyParser</code> object exposes various factories to create middlewares. All middlewares will populate the <code>req.body</code> property with the parsed body when the <code>Content-Type</code> request header matches the <code>type</code> option, or an empty object (<code>{}</code>) if there was no body to parse, the <code>Content-Type</code> was not matched, or an error occurred.</p> <p>The various errors returned by this module are described in the errors section.</p>"},{"location":"ejemplos/servidor/node_modules/body-parser/#bodyparserjsonoptions","title":"bodyParser.json([options])","text":"<p>Returns middleware that only parses <code>json</code> and only looks at requests where the <code>Content-Type</code> header matches the <code>type</code> option. This parser accepts any Unicode encoding of the body and supports automatic inflation of <code>gzip</code> and <code>deflate</code> encodings.</p> <p>A new <code>body</code> object containing the parsed data is populated on the <code>request</code> object after the middleware (i.e. <code>req.body</code>).</p>"},{"location":"ejemplos/servidor/node_modules/body-parser/#options","title":"Options","text":"<p>The <code>json</code> function takes an optional <code>options</code> object that may contain any of the following keys:</p>"},{"location":"ejemplos/servidor/node_modules/body-parser/#inflate","title":"inflate","text":"<p>When set to <code>true</code>, then deflated (compressed) bodies will be inflated; when <code>false</code>, deflated bodies are rejected. Defaults to <code>true</code>.</p>"},{"location":"ejemplos/servidor/node_modules/body-parser/#limit","title":"limit","text":"<p>Controls the maximum request body size. If this is a number, then the value specifies the number of bytes; if it is a string, the value is passed to the bytes library for parsing. Defaults to <code>'100kb'</code>.</p>"},{"location":"ejemplos/servidor/node_modules/body-parser/#reviver","title":"reviver","text":"<p>The <code>reviver</code> option is passed directly to <code>JSON.parse</code> as the second argument. You can find more information on this argument in the MDN documentation about JSON.parse.</p>"},{"location":"ejemplos/servidor/node_modules/body-parser/#strict","title":"strict","text":"<p>When set to <code>true</code>, will only accept arrays and objects; when <code>false</code> will accept anything <code>JSON.parse</code> accepts. Defaults to <code>true</code>.</p>"},{"location":"ejemplos/servidor/node_modules/body-parser/#type","title":"type","text":"<p>The <code>type</code> option is used to determine what media type the middleware will parse. This option can be a string, array of strings, or a function. If not a function, <code>type</code> option is passed directly to the type-is library and this can be an extension name (like <code>json</code>), a mime type (like <code>application/json</code>), or a mime type with a wildcard (like <code>*/*</code> or <code>*/json</code>). If a function, the <code>type</code> option is called as <code>fn(req)</code> and the request is parsed if it returns a truthy value. Defaults to <code>application/json</code>.</p>"},{"location":"ejemplos/servidor/node_modules/body-parser/#verify","title":"verify","text":"<p>The <code>verify</code> option, if supplied, is called as <code>verify(req, res, buf, encoding)</code>, where <code>buf</code> is a <code>Buffer</code> of the raw request body and <code>encoding</code> is the encoding of the request. The parsing can be aborted by throwing an error.</p>"},{"location":"ejemplos/servidor/node_modules/body-parser/#bodyparserrawoptions","title":"bodyParser.raw([options])","text":"<p>Returns middleware that parses all bodies as a <code>Buffer</code> and only looks at requests where the <code>Content-Type</code> header matches the <code>type</code> option. This parser supports automatic inflation of <code>gzip</code> and <code>deflate</code> encodings.</p> <p>A new <code>body</code> object containing the parsed data is populated on the <code>request</code> object after the middleware (i.e. <code>req.body</code>). This will be a <code>Buffer</code> object of the body.</p>"},{"location":"ejemplos/servidor/node_modules/body-parser/#options_1","title":"Options","text":"<p>The <code>raw</code> function takes an optional <code>options</code> object that may contain any of the following keys:</p>"},{"location":"ejemplos/servidor/node_modules/body-parser/#inflate_1","title":"inflate","text":"<p>When set to <code>true</code>, then deflated (compressed) bodies will be inflated; when <code>false</code>, deflated bodies are rejected. Defaults to <code>true</code>.</p>"},{"location":"ejemplos/servidor/node_modules/body-parser/#limit_1","title":"limit","text":"<p>Controls the maximum request body size. If this is a number, then the value specifies the number of bytes; if it is a string, the value is passed to the bytes library for parsing. Defaults to <code>'100kb'</code>.</p>"},{"location":"ejemplos/servidor/node_modules/body-parser/#type_1","title":"type","text":"<p>The <code>type</code> option is used to determine what media type the middleware will parse. This option can be a string, array of strings, or a function. If not a function, <code>type</code> option is passed directly to the type-is library and this can be an extension name (like <code>bin</code>), a mime type (like <code>application/octet-stream</code>), or a mime type with a wildcard (like <code>*/*</code> or <code>application/*</code>). If a function, the <code>type</code> option is called as <code>fn(req)</code> and the request is parsed if it returns a truthy value. Defaults to <code>application/octet-stream</code>.</p>"},{"location":"ejemplos/servidor/node_modules/body-parser/#verify_1","title":"verify","text":"<p>The <code>verify</code> option, if supplied, is called as <code>verify(req, res, buf, encoding)</code>, where <code>buf</code> is a <code>Buffer</code> of the raw request body and <code>encoding</code> is the encoding of the request. The parsing can be aborted by throwing an error.</p>"},{"location":"ejemplos/servidor/node_modules/body-parser/#bodyparsertextoptions","title":"bodyParser.text([options])","text":"<p>Returns middleware that parses all bodies as a string and only looks at requests where the <code>Content-Type</code> header matches the <code>type</code> option. This parser supports automatic inflation of <code>gzip</code> and <code>deflate</code> encodings.</p> <p>A new <code>body</code> string containing the parsed data is populated on the <code>request</code> object after the middleware (i.e. <code>req.body</code>). This will be a string of the body.</p>"},{"location":"ejemplos/servidor/node_modules/body-parser/#options_2","title":"Options","text":"<p>The <code>text</code> function takes an optional <code>options</code> object that may contain any of the following keys:</p>"},{"location":"ejemplos/servidor/node_modules/body-parser/#defaultcharset","title":"defaultCharset","text":"<p>Specify the default character set for the text content if the charset is not specified in the <code>Content-Type</code> header of the request. Defaults to <code>utf-8</code>.</p>"},{"location":"ejemplos/servidor/node_modules/body-parser/#inflate_2","title":"inflate","text":"<p>When set to <code>true</code>, then deflated (compressed) bodies will be inflated; when <code>false</code>, deflated bodies are rejected. Defaults to <code>true</code>.</p>"},{"location":"ejemplos/servidor/node_modules/body-parser/#limit_2","title":"limit","text":"<p>Controls the maximum request body size. If this is a number, then the value specifies the number of bytes; if it is a string, the value is passed to the bytes library for parsing. Defaults to <code>'100kb'</code>.</p>"},{"location":"ejemplos/servidor/node_modules/body-parser/#type_2","title":"type","text":"<p>The <code>type</code> option is used to determine what media type the middleware will parse. This option can be a string, array of strings, or a function. If not a function, <code>type</code> option is passed directly to the type-is library and this can be an extension name (like <code>txt</code>), a mime type (like <code>text/plain</code>), or a mime type with a wildcard (like <code>*/*</code> or <code>text/*</code>). If a function, the <code>type</code> option is called as <code>fn(req)</code> and the request is parsed if it returns a truthy value. Defaults to <code>text/plain</code>.</p>"},{"location":"ejemplos/servidor/node_modules/body-parser/#verify_2","title":"verify","text":"<p>The <code>verify</code> option, if supplied, is called as <code>verify(req, res, buf, encoding)</code>, where <code>buf</code> is a <code>Buffer</code> of the raw request body and <code>encoding</code> is the encoding of the request. The parsing can be aborted by throwing an error.</p>"},{"location":"ejemplos/servidor/node_modules/body-parser/#bodyparserurlencodedoptions","title":"bodyParser.urlencoded([options])","text":"<p>Returns middleware that only parses <code>urlencoded</code> bodies and only looks at requests where the <code>Content-Type</code> header matches the <code>type</code> option. This parser accepts only UTF-8 encoding of the body and supports automatic inflation of <code>gzip</code> and <code>deflate</code> encodings.</p> <p>A new <code>body</code> object containing the parsed data is populated on the <code>request</code> object after the middleware (i.e. <code>req.body</code>). This object will contain key-value pairs, where the value can be a string or array (when <code>extended</code> is <code>false</code>), or any type (when <code>extended</code> is <code>true</code>).</p>"},{"location":"ejemplos/servidor/node_modules/body-parser/#options_3","title":"Options","text":"<p>The <code>urlencoded</code> function takes an optional <code>options</code> object that may contain any of the following keys:</p>"},{"location":"ejemplos/servidor/node_modules/body-parser/#extended","title":"extended","text":"<p>The <code>extended</code> option allows to choose between parsing the URL-encoded data with the <code>querystring</code> library (when <code>false</code>) or the <code>qs</code> library (when <code>true</code>). The \"extended\" syntax allows for rich objects and arrays to be encoded into the URL-encoded format, allowing for a JSON-like experience with URL-encoded. For more information, please see the qs library.</p> <p>Defaults to <code>true</code>, but using the default has been deprecated. Please research into the difference between <code>qs</code> and <code>querystring</code> and choose the appropriate setting.</p>"},{"location":"ejemplos/servidor/node_modules/body-parser/#inflate_3","title":"inflate","text":"<p>When set to <code>true</code>, then deflated (compressed) bodies will be inflated; when <code>false</code>, deflated bodies are rejected. Defaults to <code>true</code>.</p>"},{"location":"ejemplos/servidor/node_modules/body-parser/#limit_3","title":"limit","text":"<p>Controls the maximum request body size. If this is a number, then the value specifies the number of bytes; if it is a string, the value is passed to the bytes library for parsing. Defaults to <code>'100kb'</code>.</p>"},{"location":"ejemplos/servidor/node_modules/body-parser/#parameterlimit","title":"parameterLimit","text":"<p>The <code>parameterLimit</code> option controls the maximum number of parameters that are allowed in the URL-encoded data. If a request contains more parameters than this value, a 413 will be returned to the client. Defaults to <code>1000</code>.</p>"},{"location":"ejemplos/servidor/node_modules/body-parser/#type_3","title":"type","text":"<p>The <code>type</code> option is used to determine what media type the middleware will parse. This option can be a string, array of strings, or a function. If not a function, <code>type</code> option is passed directly to the type-is library and this can be an extension name (like <code>urlencoded</code>), a mime type (like <code>application/x-www-form-urlencoded</code>), or a mime type with a wildcard (like <code>*/x-www-form-urlencoded</code>). If a function, the <code>type</code> option is called as <code>fn(req)</code> and the request is parsed if it returns a truthy value. Defaults to <code>application/x-www-form-urlencoded</code>.</p>"},{"location":"ejemplos/servidor/node_modules/body-parser/#verify_3","title":"verify","text":"<p>The <code>verify</code> option, if supplied, is called as <code>verify(req, res, buf, encoding)</code>, where <code>buf</code> is a <code>Buffer</code> of the raw request body and <code>encoding</code> is the encoding of the request. The parsing can be aborted by throwing an error.</p>"},{"location":"ejemplos/servidor/node_modules/body-parser/#errors","title":"Errors","text":"<p>The middlewares provided by this module create errors depending on the error condition during parsing. The errors will typically have a <code>status</code>/<code>statusCode</code> property that contains the suggested HTTP response code, an <code>expose</code> property to determine if the <code>message</code> property should be displayed to the client, a <code>type</code> property to determine the type of error without matching against the <code>message</code>, and a <code>body</code> property containing the read body, if available.</p> <p>The following are the common errors emitted, though any error can come through for various reasons.</p>"},{"location":"ejemplos/servidor/node_modules/body-parser/#content-encoding-unsupported","title":"content encoding unsupported","text":"<p>This error will occur when the request had a <code>Content-Encoding</code> header that contained an encoding but the \"inflation\" option was set to <code>false</code>. The <code>status</code> property is set to <code>415</code>, the <code>type</code> property is set to <code>'encoding.unsupported'</code>, and the <code>charset</code> property will be set to the encoding that is unsupported.</p>"},{"location":"ejemplos/servidor/node_modules/body-parser/#request-aborted","title":"request aborted","text":"<p>This error will occur when the request is aborted by the client before reading the body has finished. The <code>received</code> property will be set to the number of bytes received before the request was aborted and the <code>expected</code> property is set to the number of expected bytes. The <code>status</code> property is set to <code>400</code> and <code>type</code> property is set to <code>'request.aborted'</code>.</p>"},{"location":"ejemplos/servidor/node_modules/body-parser/#request-entity-too-large","title":"request entity too large","text":"<p>This error will occur when the request body's size is larger than the \"limit\" option. The <code>limit</code> property will be set to the byte limit and the <code>length</code> property will be set to the request body's length. The <code>status</code> property is set to <code>413</code> and the <code>type</code> property is set to <code>'entity.too.large'</code>.</p>"},{"location":"ejemplos/servidor/node_modules/body-parser/#request-size-did-not-match-content-length","title":"request size did not match content length","text":"<p>This error will occur when the request's length did not match the length from the <code>Content-Length</code> header. This typically occurs when the request is malformed, typically when the <code>Content-Length</code> header was calculated based on characters instead of bytes. The <code>status</code> property is set to <code>400</code> and the <code>type</code> property is set to <code>'request.size.invalid'</code>.</p>"},{"location":"ejemplos/servidor/node_modules/body-parser/#stream-encoding-should-not-be-set","title":"stream encoding should not be set","text":"<p>This error will occur when something called the <code>req.setEncoding</code> method prior to this middleware. This module operates directly on bytes only and you cannot call <code>req.setEncoding</code> when using this module. The <code>status</code> property is set to <code>500</code> and the <code>type</code> property is set to <code>'stream.encoding.set'</code>.</p>"},{"location":"ejemplos/servidor/node_modules/body-parser/#too-many-parameters","title":"too many parameters","text":"<p>This error will occur when the content of the request exceeds the configured <code>parameterLimit</code> for the <code>urlencoded</code> parser. The <code>status</code> property is set to <code>413</code> and the <code>type</code> property is set to <code>'parameters.too.many'</code>.</p>"},{"location":"ejemplos/servidor/node_modules/body-parser/#unsupported-charset-bogus","title":"unsupported charset \"BOGUS\"","text":"<p>This error will occur when the request had a charset parameter in the <code>Content-Type</code> header, but the <code>iconv-lite</code> module does not support it OR the parser does not support it. The charset is contained in the message as well as in the <code>charset</code> property. The <code>status</code> property is set to <code>415</code>, the <code>type</code> property is set to <code>'charset.unsupported'</code>, and the <code>charset</code> property is set to the charset that is unsupported.</p>"},{"location":"ejemplos/servidor/node_modules/body-parser/#unsupported-content-encoding-bogus","title":"unsupported content encoding \"bogus\"","text":"<p>This error will occur when the request had a <code>Content-Encoding</code> header that contained an unsupported encoding. The encoding is contained in the message as well as in the <code>encoding</code> property. The <code>status</code> property is set to <code>415</code>, the <code>type</code> property is set to <code>'encoding.unsupported'</code>, and the <code>encoding</code> property is set to the encoding that is unsupported.</p>"},{"location":"ejemplos/servidor/node_modules/body-parser/#examples","title":"Examples","text":""},{"location":"ejemplos/servidor/node_modules/body-parser/#expressconnect-top-level-generic","title":"Express/Connect top-level generic","text":"<p>This example demonstrates adding a generic JSON and URL-encoded parser as a top-level middleware, which will parse the bodies of all incoming requests. This is the simplest setup.</p> <pre><code>var express = require('express')\nvar bodyParser = require('body-parser')\n\nvar app = express()\n\n// parse application/x-www-form-urlencoded\napp.use(bodyParser.urlencoded({ extended: false }))\n\n// parse application/json\napp.use(bodyParser.json())\n\napp.use(function (req, res) {\n  res.setHeader('Content-Type', 'text/plain')\n  res.write('you posted:\\n')\n  res.end(JSON.stringify(req.body, null, 2))\n})\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/body-parser/#express-route-specific","title":"Express route-specific","text":"<p>This example demonstrates adding body parsers specifically to the routes that need them. In general, this is the most recommended way to use body-parser with Express.</p> <pre><code>var express = require('express')\nvar bodyParser = require('body-parser')\n\nvar app = express()\n\n// create application/json parser\nvar jsonParser = bodyParser.json()\n\n// create application/x-www-form-urlencoded parser\nvar urlencodedParser = bodyParser.urlencoded({ extended: false })\n\n// POST /login gets urlencoded bodies\napp.post('/login', urlencodedParser, function (req, res) {\n  res.send('welcome, ' + req.body.username)\n})\n\n// POST /api/users gets JSON bodies\napp.post('/api/users', jsonParser, function (req, res) {\n  // create user in req.body\n})\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/body-parser/#change-accepted-type-for-parsers","title":"Change accepted type for parsers","text":"<p>All the parsers accept a <code>type</code> option which allows you to change the <code>Content-Type</code> that the middleware will parse.</p> <pre><code>var express = require('express')\nvar bodyParser = require('body-parser')\n\nvar app = express()\n\n// parse various different custom JSON types as JSON\napp.use(bodyParser.json({ type: 'application/*+json' }))\n\n// parse some custom thing into a Buffer\napp.use(bodyParser.raw({ type: 'application/vnd.custom-type' }))\n\n// parse an HTML body into a string\napp.use(bodyParser.text({ type: 'text/html' }))\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/body-parser/#license","title":"License","text":"<p>MIT</p>"},{"location":"ejemplos/servidor/node_modules/body-parser/HISTORY/","title":"1.19.0 / 2019-04-25","text":"<ul> <li>deps: bytes@3.1.0<ul> <li>Add petabyte (<code>pb</code>) support</li> </ul> </li> <li>deps: http-errors@1.7.2<ul> <li>Set constructor name when possible</li> <li>deps: setprototypeof@1.1.1</li> <li>deps: statuses@'&gt;= 1.5.0 &lt; 2'</li> </ul> </li> <li>deps: iconv-lite@0.4.24<ul> <li>Added encoding MIK</li> </ul> </li> <li>deps: qs@6.7.0<ul> <li>Fix parsing array brackets after index</li> </ul> </li> <li>deps: raw-body@2.4.0<ul> <li>deps: bytes@3.1.0</li> <li>deps: http-errors@1.7.2</li> <li>deps: iconv-lite@0.4.24</li> </ul> </li> <li>deps: type-is@~1.6.17<ul> <li>deps: mime-types@~2.1.24</li> <li>perf: prevent internal <code>throw</code> on invalid type</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/body-parser/HISTORY/#1183-2018-05-14","title":"1.18.3 / 2018-05-14","text":"<ul> <li>Fix stack trace for strict json parse error</li> <li>deps: depd@~1.1.2<ul> <li>perf: remove argument reassignment</li> </ul> </li> <li>deps: http-errors@~1.6.3<ul> <li>deps: depd@~1.1.2</li> <li>deps: setprototypeof@1.1.0</li> <li>deps: statuses@'&gt;= 1.3.1 &lt; 2'</li> </ul> </li> <li>deps: iconv-lite@0.4.23<ul> <li>Fix loading encoding with year appended</li> <li>Fix deprecation warnings on Node.js 10+</li> </ul> </li> <li>deps: qs@6.5.2</li> <li>deps: raw-body@2.3.3<ul> <li>deps: http-errors@1.6.3</li> <li>deps: iconv-lite@0.4.23</li> </ul> </li> <li>deps: type-is@~1.6.16<ul> <li>deps: mime-types@~2.1.18</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/body-parser/HISTORY/#1182-2017-09-22","title":"1.18.2 / 2017-09-22","text":"<ul> <li>deps: debug@2.6.9</li> <li>perf: remove argument reassignment</li> </ul>"},{"location":"ejemplos/servidor/node_modules/body-parser/HISTORY/#1181-2017-09-12","title":"1.18.1 / 2017-09-12","text":"<ul> <li>deps: content-type@~1.0.4<ul> <li>perf: remove argument reassignment</li> <li>perf: skip parameter parsing when no parameters</li> </ul> </li> <li>deps: iconv-lite@0.4.19<ul> <li>Fix ISO-8859-1 regression</li> <li>Update Windows-1255</li> </ul> </li> <li>deps: qs@6.5.1<ul> <li>Fix parsing &amp; compacting very deep objects</li> </ul> </li> <li>deps: raw-body@2.3.2<ul> <li>deps: iconv-lite@0.4.19</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/body-parser/HISTORY/#1180-2017-09-08","title":"1.18.0 / 2017-09-08","text":"<ul> <li>Fix JSON strict violation error to match native parse error</li> <li>Include the <code>body</code> property on verify errors</li> <li>Include the <code>type</code> property on all generated errors</li> <li>Use <code>http-errors</code> to set status code on errors</li> <li>deps: bytes@3.0.0</li> <li>deps: debug@2.6.8</li> <li>deps: depd@~1.1.1<ul> <li>Remove unnecessary <code>Buffer</code> loading</li> </ul> </li> <li>deps: http-errors@~1.6.2<ul> <li>deps: depd@1.1.1</li> </ul> </li> <li>deps: iconv-lite@0.4.18<ul> <li>Add support for React Native</li> <li>Add a warning if not loaded as utf-8</li> <li>Fix CESU-8 decoding in Node.js 8</li> <li>Improve speed of ISO-8859-1 encoding</li> </ul> </li> <li>deps: qs@6.5.0</li> <li>deps: raw-body@2.3.1<ul> <li>Use <code>http-errors</code> for standard emitted errors</li> <li>deps: bytes@3.0.0</li> <li>deps: iconv-lite@0.4.18</li> <li>perf: skip buffer decoding on overage chunk</li> </ul> </li> <li>perf: prevent internal <code>throw</code> when missing charset</li> </ul>"},{"location":"ejemplos/servidor/node_modules/body-parser/HISTORY/#1172-2017-05-17","title":"1.17.2 / 2017-05-17","text":"<ul> <li>deps: debug@2.6.7<ul> <li>Fix <code>DEBUG_MAX_ARRAY_LENGTH</code></li> <li>deps: ms@2.0.0</li> </ul> </li> <li>deps: type-is@~1.6.15<ul> <li>deps: mime-types@~2.1.15</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/body-parser/HISTORY/#1171-2017-03-06","title":"1.17.1 / 2017-03-06","text":"<ul> <li>deps: qs@6.4.0<ul> <li>Fix regression parsing keys starting with <code>[</code></li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/body-parser/HISTORY/#1170-2017-03-01","title":"1.17.0 / 2017-03-01","text":"<ul> <li>deps: http-errors@~1.6.1<ul> <li>Make <code>message</code> property enumerable for <code>HttpError</code>s</li> <li>deps: setprototypeof@1.0.3</li> </ul> </li> <li>deps: qs@6.3.1<ul> <li>Fix compacting nested arrays</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/body-parser/HISTORY/#1161-2017-02-10","title":"1.16.1 / 2017-02-10","text":"<ul> <li>deps: debug@2.6.1<ul> <li>Fix deprecation messages in WebStorm and other editors</li> <li>Undeprecate <code>DEBUG_FD</code> set to <code>1</code> or <code>2</code></li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/body-parser/HISTORY/#1160-2017-01-17","title":"1.16.0 / 2017-01-17","text":"<ul> <li>deps: debug@2.6.0<ul> <li>Allow colors in workers</li> <li>Deprecated <code>DEBUG_FD</code> environment variable</li> <li>Fix error when running under React Native</li> <li>Use same color for same namespace</li> <li>deps: ms@0.7.2</li> </ul> </li> <li>deps: http-errors@~1.5.1<ul> <li>deps: inherits@2.0.3</li> <li>deps: setprototypeof@1.0.2</li> <li>deps: statuses@'&gt;= 1.3.1 &lt; 2'</li> </ul> </li> <li>deps: iconv-lite@0.4.15<ul> <li>Added encoding MS-31J</li> <li>Added encoding MS-932</li> <li>Added encoding MS-936</li> <li>Added encoding MS-949</li> <li>Added encoding MS-950</li> <li>Fix GBK/GB18030 handling of Euro character</li> </ul> </li> <li>deps: qs@6.2.1<ul> <li>Fix array parsing from skipping empty values</li> </ul> </li> <li>deps: raw-body@~2.2.0<ul> <li>deps: iconv-lite@0.4.15</li> </ul> </li> <li>deps: type-is@~1.6.14<ul> <li>deps: mime-types@~2.1.13</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/body-parser/HISTORY/#1152-2016-06-19","title":"1.15.2 / 2016-06-19","text":"<ul> <li>deps: bytes@2.4.0</li> <li>deps: content-type@~1.0.2<ul> <li>perf: enable strict mode</li> </ul> </li> <li>deps: http-errors@~1.5.0<ul> <li>Use <code>setprototypeof</code> module to replace <code>__proto__</code> setting</li> <li>deps: statuses@'&gt;= 1.3.0 &lt; 2'</li> <li>perf: enable strict mode</li> </ul> </li> <li>deps: qs@6.2.0</li> <li>deps: raw-body@~2.1.7<ul> <li>deps: bytes@2.4.0</li> <li>perf: remove double-cleanup on happy path</li> </ul> </li> <li>deps: type-is@~1.6.13<ul> <li>deps: mime-types@~2.1.11</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/body-parser/HISTORY/#1151-2016-05-05","title":"1.15.1 / 2016-05-05","text":"<ul> <li>deps: bytes@2.3.0<ul> <li>Drop partial bytes on all parsed units</li> <li>Fix parsing byte string that looks like hex</li> </ul> </li> <li>deps: raw-body@~2.1.6<ul> <li>deps: bytes@2.3.0</li> </ul> </li> <li>deps: type-is@~1.6.12<ul> <li>deps: mime-types@~2.1.10</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/body-parser/HISTORY/#1150-2016-02-10","title":"1.15.0 / 2016-02-10","text":"<ul> <li>deps: http-errors@~1.4.0<ul> <li>Add <code>HttpError</code> export, for <code>err instanceof createError.HttpError</code></li> <li>deps: inherits@2.0.1</li> <li>deps: statuses@'&gt;= 1.2.1 &lt; 2'</li> </ul> </li> <li>deps: qs@6.1.0</li> <li>deps: type-is@~1.6.11<ul> <li>deps: mime-types@~2.1.9</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/body-parser/HISTORY/#1142-2015-12-16","title":"1.14.2 / 2015-12-16","text":"<ul> <li>deps: bytes@2.2.0</li> <li>deps: iconv-lite@0.4.13</li> <li>deps: qs@5.2.0</li> <li>deps: raw-body@~2.1.5<ul> <li>deps: bytes@2.2.0</li> <li>deps: iconv-lite@0.4.13</li> </ul> </li> <li>deps: type-is@~1.6.10<ul> <li>deps: mime-types@~2.1.8</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/body-parser/HISTORY/#1141-2015-09-27","title":"1.14.1 / 2015-09-27","text":"<ul> <li>Fix issue where invalid charset results in 400 when <code>verify</code> used</li> <li>deps: iconv-lite@0.4.12<ul> <li>Fix CESU-8 decoding in Node.js 4.x</li> </ul> </li> <li>deps: raw-body@~2.1.4<ul> <li>Fix masking critical errors from <code>iconv-lite</code></li> <li>deps: iconv-lite@0.4.12</li> </ul> </li> <li>deps: type-is@~1.6.9<ul> <li>deps: mime-types@~2.1.7</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/body-parser/HISTORY/#1140-2015-09-16","title":"1.14.0 / 2015-09-16","text":"<ul> <li>Fix JSON strict parse error to match syntax errors</li> <li>Provide static <code>require</code> analysis in <code>urlencoded</code> parser</li> <li>deps: depd@~1.1.0<ul> <li>Support web browser loading</li> </ul> </li> <li>deps: qs@5.1.0</li> <li>deps: raw-body@~2.1.3<ul> <li>Fix sync callback when attaching data listener causes sync read</li> </ul> </li> <li>deps: type-is@~1.6.8<ul> <li>Fix type error when given invalid type to match against</li> <li>deps: mime-types@~2.1.6</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/body-parser/HISTORY/#1133-2015-07-31","title":"1.13.3 / 2015-07-31","text":"<ul> <li>deps: type-is@~1.6.6<ul> <li>deps: mime-types@~2.1.4</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/body-parser/HISTORY/#1132-2015-07-05","title":"1.13.2 / 2015-07-05","text":"<ul> <li>deps: iconv-lite@0.4.11</li> <li>deps: qs@4.0.0<ul> <li>Fix dropping parameters like <code>hasOwnProperty</code></li> <li>Fix user-visible incompatibilities from 3.1.0</li> <li>Fix various parsing edge cases</li> </ul> </li> <li>deps: raw-body@~2.1.2<ul> <li>Fix error stack traces to skip <code>makeError</code></li> <li>deps: iconv-lite@0.4.11</li> </ul> </li> <li>deps: type-is@~1.6.4<ul> <li>deps: mime-types@~2.1.2</li> <li>perf: enable strict mode</li> <li>perf: remove argument reassignment</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/body-parser/HISTORY/#1131-2015-06-16","title":"1.13.1 / 2015-06-16","text":"<ul> <li>deps: qs@2.4.2<ul> <li>Downgraded from 3.1.0 because of user-visible incompatibilities</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/body-parser/HISTORY/#1130-2015-06-14","title":"1.13.0 / 2015-06-14","text":"<ul> <li>Add <code>statusCode</code> property on <code>Error</code>s, in addition to <code>status</code></li> <li>Change <code>type</code> default to <code>application/json</code> for JSON parser</li> <li>Change <code>type</code> default to <code>application/x-www-form-urlencoded</code> for urlencoded parser</li> <li>Provide static <code>require</code> analysis</li> <li>Use the <code>http-errors</code> module to generate errors</li> <li>deps: bytes@2.1.0<ul> <li>Slight optimizations</li> </ul> </li> <li>deps: iconv-lite@0.4.10<ul> <li>The encoding UTF-16 without BOM now defaults to UTF-16LE when detection fails</li> <li>Leading BOM is now removed when decoding</li> </ul> </li> <li>deps: on-finished@~2.3.0<ul> <li>Add defined behavior for HTTP <code>CONNECT</code> requests</li> <li>Add defined behavior for HTTP <code>Upgrade</code> requests</li> <li>deps: ee-first@1.1.1</li> </ul> </li> <li>deps: qs@3.1.0<ul> <li>Fix dropping parameters like <code>hasOwnProperty</code></li> <li>Fix various parsing edge cases</li> <li>Parsed object now has <code>null</code> prototype</li> </ul> </li> <li>deps: raw-body@~2.1.1<ul> <li>Use <code>unpipe</code> module for unpiping requests</li> <li>deps: iconv-lite@0.4.10</li> </ul> </li> <li>deps: type-is@~1.6.3<ul> <li>deps: mime-types@~2.1.1</li> <li>perf: reduce try block size</li> <li>perf: remove bitwise operations</li> </ul> </li> <li>perf: enable strict mode</li> <li>perf: remove argument reassignment</li> <li>perf: remove delete call</li> </ul>"},{"location":"ejemplos/servidor/node_modules/body-parser/HISTORY/#1124-2015-05-10","title":"1.12.4 / 2015-05-10","text":"<ul> <li>deps: debug@~2.2.0</li> <li>deps: qs@2.4.2<ul> <li>Fix allowing parameters like <code>constructor</code></li> </ul> </li> <li>deps: on-finished@~2.2.1</li> <li>deps: raw-body@~2.0.1<ul> <li>Fix a false-positive when unpiping in Node.js 0.8</li> <li>deps: bytes@2.0.1</li> </ul> </li> <li>deps: type-is@~1.6.2<ul> <li>deps: mime-types@~2.0.11</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/body-parser/HISTORY/#1123-2015-04-15","title":"1.12.3 / 2015-04-15","text":"<ul> <li>Slight efficiency improvement when not debugging</li> <li>deps: depd@~1.0.1</li> <li>deps: iconv-lite@0.4.8<ul> <li>Add encoding alias UNICODE-1-1-UTF-7</li> </ul> </li> <li>deps: raw-body@1.3.4<ul> <li>Fix hanging callback if request aborts during read</li> <li>deps: iconv-lite@0.4.8</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/body-parser/HISTORY/#1122-2015-03-16","title":"1.12.2 / 2015-03-16","text":"<ul> <li>deps: qs@2.4.1<ul> <li>Fix error when parameter <code>hasOwnProperty</code> is present</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/body-parser/HISTORY/#1121-2015-03-15","title":"1.12.1 / 2015-03-15","text":"<ul> <li>deps: debug@~2.1.3<ul> <li>Fix high intensity foreground color for bold</li> <li>deps: ms@0.7.0</li> </ul> </li> <li>deps: type-is@~1.6.1<ul> <li>deps: mime-types@~2.0.10</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/body-parser/HISTORY/#1120-2015-02-13","title":"1.12.0 / 2015-02-13","text":"<ul> <li>add <code>debug</code> messages</li> <li>accept a function for the <code>type</code> option</li> <li>use <code>content-type</code> to parse <code>Content-Type</code> headers</li> <li>deps: iconv-lite@0.4.7<ul> <li>Gracefully support enumerables on <code>Object.prototype</code></li> </ul> </li> <li>deps: raw-body@1.3.3<ul> <li>deps: iconv-lite@0.4.7</li> </ul> </li> <li>deps: type-is@~1.6.0<ul> <li>fix argument reassignment</li> <li>fix false-positives in <code>hasBody</code> <code>Transfer-Encoding</code> check</li> <li>support wildcard for both type and subtype (<code>*/*</code>)</li> <li>deps: mime-types@~2.0.9</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/body-parser/HISTORY/#1110-2015-01-30","title":"1.11.0 / 2015-01-30","text":"<ul> <li>make internal <code>extended: true</code> depth limit infinity</li> <li>deps: type-is@~1.5.6<ul> <li>deps: mime-types@~2.0.8</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/body-parser/HISTORY/#1102-2015-01-20","title":"1.10.2 / 2015-01-20","text":"<ul> <li>deps: iconv-lite@0.4.6<ul> <li>Fix rare aliases of single-byte encodings</li> </ul> </li> <li>deps: raw-body@1.3.2<ul> <li>deps: iconv-lite@0.4.6</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/body-parser/HISTORY/#1101-2015-01-01","title":"1.10.1 / 2015-01-01","text":"<ul> <li>deps: on-finished@~2.2.0</li> <li>deps: type-is@~1.5.5<ul> <li>deps: mime-types@~2.0.7</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/body-parser/HISTORY/#1100-2014-12-02","title":"1.10.0 / 2014-12-02","text":"<ul> <li>make internal <code>extended: true</code> array limit dynamic</li> </ul>"},{"location":"ejemplos/servidor/node_modules/body-parser/HISTORY/#193-2014-11-21","title":"1.9.3 / 2014-11-21","text":"<ul> <li>deps: iconv-lite@0.4.5<ul> <li>Fix Windows-31J and X-SJIS encoding support</li> </ul> </li> <li>deps: qs@2.3.3<ul> <li>Fix <code>arrayLimit</code> behavior</li> </ul> </li> <li>deps: raw-body@1.3.1<ul> <li>deps: iconv-lite@0.4.5</li> </ul> </li> <li>deps: type-is@~1.5.3<ul> <li>deps: mime-types@~2.0.3</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/body-parser/HISTORY/#192-2014-10-27","title":"1.9.2 / 2014-10-27","text":"<ul> <li>deps: qs@2.3.2<ul> <li>Fix parsing of mixed objects and values</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/body-parser/HISTORY/#191-2014-10-22","title":"1.9.1 / 2014-10-22","text":"<ul> <li>deps: on-finished@~2.1.1<ul> <li>Fix handling of pipelined requests</li> </ul> </li> <li>deps: qs@2.3.0<ul> <li>Fix parsing of mixed implicit and explicit arrays</li> </ul> </li> <li>deps: type-is@~1.5.2<ul> <li>deps: mime-types@~2.0.2</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/body-parser/HISTORY/#190-2014-09-24","title":"1.9.0 / 2014-09-24","text":"<ul> <li>include the charset in \"unsupported charset\" error message</li> <li>include the encoding in \"unsupported content encoding\" error message</li> <li>deps: depd@~1.0.0</li> </ul>"},{"location":"ejemplos/servidor/node_modules/body-parser/HISTORY/#184-2014-09-23","title":"1.8.4 / 2014-09-23","text":"<ul> <li>fix content encoding to be case-insensitive</li> </ul>"},{"location":"ejemplos/servidor/node_modules/body-parser/HISTORY/#183-2014-09-19","title":"1.8.3 / 2014-09-19","text":"<ul> <li>deps: qs@2.2.4<ul> <li>Fix issue with object keys starting with numbers truncated</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/body-parser/HISTORY/#182-2014-09-15","title":"1.8.2 / 2014-09-15","text":"<ul> <li>deps: depd@0.4.5</li> </ul>"},{"location":"ejemplos/servidor/node_modules/body-parser/HISTORY/#181-2014-09-07","title":"1.8.1 / 2014-09-07","text":"<ul> <li>deps: media-typer@0.3.0</li> <li>deps: type-is@~1.5.1</li> </ul>"},{"location":"ejemplos/servidor/node_modules/body-parser/HISTORY/#180-2014-09-05","title":"1.8.0 / 2014-09-05","text":"<ul> <li>make empty-body-handling consistent between chunked requests<ul> <li>empty <code>json</code> produces <code>{}</code></li> <li>empty <code>raw</code> produces <code>new Buffer(0)</code></li> <li>empty <code>text</code> produces <code>''</code></li> <li>empty <code>urlencoded</code> produces <code>{}</code></li> </ul> </li> <li>deps: qs@2.2.3<ul> <li>Fix issue where first empty value in array is discarded</li> </ul> </li> <li>deps: type-is@~1.5.0<ul> <li>fix <code>hasbody</code> to be true for <code>content-length: 0</code></li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/body-parser/HISTORY/#170-2014-09-01","title":"1.7.0 / 2014-09-01","text":"<ul> <li>add <code>parameterLimit</code> option to <code>urlencoded</code> parser</li> <li>change <code>urlencoded</code> extended array limit to 100</li> <li>respond with 413 when over <code>parameterLimit</code> in <code>urlencoded</code></li> </ul>"},{"location":"ejemplos/servidor/node_modules/body-parser/HISTORY/#167-2014-08-29","title":"1.6.7 / 2014-08-29","text":"<ul> <li>deps: qs@2.2.2<ul> <li>Remove unnecessary cloning</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/body-parser/HISTORY/#166-2014-08-27","title":"1.6.6 / 2014-08-27","text":"<ul> <li>deps: qs@2.2.0<ul> <li>Array parsing fix</li> <li>Performance improvements</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/body-parser/HISTORY/#165-2014-08-16","title":"1.6.5 / 2014-08-16","text":"<ul> <li>deps: on-finished@2.1.0</li> </ul>"},{"location":"ejemplos/servidor/node_modules/body-parser/HISTORY/#164-2014-08-14","title":"1.6.4 / 2014-08-14","text":"<ul> <li>deps: qs@1.2.2</li> </ul>"},{"location":"ejemplos/servidor/node_modules/body-parser/HISTORY/#163-2014-08-10","title":"1.6.3 / 2014-08-10","text":"<ul> <li>deps: qs@1.2.1</li> </ul>"},{"location":"ejemplos/servidor/node_modules/body-parser/HISTORY/#162-2014-08-07","title":"1.6.2 / 2014-08-07","text":"<ul> <li>deps: qs@1.2.0<ul> <li>Fix parsing array of objects</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/body-parser/HISTORY/#161-2014-08-06","title":"1.6.1 / 2014-08-06","text":"<ul> <li>deps: qs@1.1.0<ul> <li>Accept urlencoded square brackets</li> <li>Accept empty values in implicit array notation</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/body-parser/HISTORY/#160-2014-08-05","title":"1.6.0 / 2014-08-05","text":"<ul> <li>deps: qs@1.0.2<ul> <li>Complete rewrite</li> <li>Limits array length to 20</li> <li>Limits object depth to 5</li> <li>Limits parameters to 1,000</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/body-parser/HISTORY/#152-2014-07-27","title":"1.5.2 / 2014-07-27","text":"<ul> <li>deps: depd@0.4.4<ul> <li>Work-around v8 generating empty stack traces</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/body-parser/HISTORY/#151-2014-07-26","title":"1.5.1 / 2014-07-26","text":"<ul> <li>deps: depd@0.4.3<ul> <li>Fix exception when global <code>Error.stackTraceLimit</code> is too low</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/body-parser/HISTORY/#150-2014-07-20","title":"1.5.0 / 2014-07-20","text":"<ul> <li>deps: depd@0.4.2<ul> <li>Add <code>TRACE_DEPRECATION</code> environment variable</li> <li>Remove non-standard grey color from color output</li> <li>Support <code>--no-deprecation</code> argument</li> <li>Support <code>--trace-deprecation</code> argument</li> </ul> </li> <li>deps: iconv-lite@0.4.4<ul> <li>Added encoding UTF-7</li> </ul> </li> <li>deps: raw-body@1.3.0<ul> <li>deps: iconv-lite@0.4.4</li> <li>Added encoding UTF-7</li> <li>Fix <code>Cannot switch to old mode now</code> error on Node.js 0.10+</li> </ul> </li> <li>deps: type-is@~1.3.2</li> </ul>"},{"location":"ejemplos/servidor/node_modules/body-parser/HISTORY/#143-2014-06-19","title":"1.4.3 / 2014-06-19","text":"<ul> <li>deps: type-is@1.3.1<ul> <li>fix global variable leak</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/body-parser/HISTORY/#142-2014-06-19","title":"1.4.2 / 2014-06-19","text":"<ul> <li>deps: type-is@1.3.0<ul> <li>improve type parsing</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/body-parser/HISTORY/#141-2014-06-19","title":"1.4.1 / 2014-06-19","text":"<ul> <li>fix urlencoded extended deprecation message</li> </ul>"},{"location":"ejemplos/servidor/node_modules/body-parser/HISTORY/#140-2014-06-19","title":"1.4.0 / 2014-06-19","text":"<ul> <li>add <code>text</code> parser</li> <li>add <code>raw</code> parser</li> <li>check accepted charset in content-type (accepts utf-8)</li> <li>check accepted encoding in content-encoding (accepts identity)</li> <li>deprecate <code>bodyParser()</code> middleware; use <code>.json()</code> and <code>.urlencoded()</code> as needed</li> <li>deprecate <code>urlencoded()</code> without provided <code>extended</code> option</li> <li>lazy-load urlencoded parsers</li> <li>parsers split into files for reduced mem usage</li> <li>support gzip and deflate bodies<ul> <li>set <code>inflate: false</code> to turn off</li> </ul> </li> <li>deps: raw-body@1.2.2<ul> <li>Support all encodings from <code>iconv-lite</code></li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/body-parser/HISTORY/#131-2014-06-11","title":"1.3.1 / 2014-06-11","text":"<ul> <li>deps: type-is@1.2.1<ul> <li>Switch dependency from mime to mime-types@1.0.0</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/body-parser/HISTORY/#130-2014-05-31","title":"1.3.0 / 2014-05-31","text":"<ul> <li>add <code>extended</code> option to urlencoded parser</li> </ul>"},{"location":"ejemplos/servidor/node_modules/body-parser/HISTORY/#122-2014-05-27","title":"1.2.2 / 2014-05-27","text":"<ul> <li>deps: raw-body@1.1.6<ul> <li>assert stream encoding on node.js 0.8</li> <li>assert stream encoding on node.js &lt; 0.10.6</li> <li>deps: bytes@1</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/body-parser/HISTORY/#121-2014-05-26","title":"1.2.1 / 2014-05-26","text":"<ul> <li>invoke <code>next(err)</code> after request fully read<ul> <li>prevents hung responses and socket hang ups</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/body-parser/HISTORY/#120-2014-05-11","title":"1.2.0 / 2014-05-11","text":"<ul> <li>add <code>verify</code> option</li> <li>deps: type-is@1.2.0<ul> <li>support suffix matching</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/body-parser/HISTORY/#112-2014-05-11","title":"1.1.2 / 2014-05-11","text":"<ul> <li>improve json parser speed</li> </ul>"},{"location":"ejemplos/servidor/node_modules/body-parser/HISTORY/#111-2014-05-11","title":"1.1.1 / 2014-05-11","text":"<ul> <li>fix repeated limit parsing with every request</li> </ul>"},{"location":"ejemplos/servidor/node_modules/body-parser/HISTORY/#110-2014-05-10","title":"1.1.0 / 2014-05-10","text":"<ul> <li>add <code>type</code> option</li> <li>deps: pin for safety and consistency</li> </ul>"},{"location":"ejemplos/servidor/node_modules/body-parser/HISTORY/#102-2014-04-14","title":"1.0.2 / 2014-04-14","text":"<ul> <li>use <code>type-is</code> module</li> </ul>"},{"location":"ejemplos/servidor/node_modules/body-parser/HISTORY/#101-2014-03-20","title":"1.0.1 / 2014-03-20","text":"<ul> <li>lower default limits to 100kb</li> </ul>"},{"location":"ejemplos/servidor/node_modules/buffer-writer/","title":"buffer-writer","text":"<p>Fast &amp; efficient buffer writer used to keep memory usage low by internally recycling a single large buffer.</p> <p>Used as the binary protocol writer in node-postgres</p> <p>Since postgres requires big endian encoding, this only writes big endian numbers for now, but can &amp; probably will easily be extended to write little endian as well.</p> <p>I'll admit this has a few postgres specific things I might need to take out in the future, such as <code>addHeader</code></p>"},{"location":"ejemplos/servidor/node_modules/buffer-writer/#api","title":"api","text":"<p><code>var writer = new (require('buffer-writer')());</code></p>"},{"location":"ejemplos/servidor/node_modules/buffer-writer/#writeraddint32num","title":"writer.addInt32(num)","text":"<p>Writes a 4-byte big endian binary encoded number to the end of the buffer.</p>"},{"location":"ejemplos/servidor/node_modules/buffer-writer/#writeraddint16num","title":"writer.addInt16(num)","text":"<p>Writes a 2-byte big endian binary encoded number to the end of the buffer.</p>"},{"location":"ejemplos/servidor/node_modules/buffer-writer/#writeraddcstringstring","title":"writer.addCString(string)","text":"<p>Writes a string to the buffer <code>utf8</code> encoded and adds a null character (<code>\\0</code>) at the end.</p>"},{"location":"ejemplos/servidor/node_modules/buffer-writer/#var-buffer-writeraddheaderchar","title":"var buffer = writer.addHeader(char)","text":"<p>Writes the 5 byte PostgreSQL required header to the beginning of the buffer. (1 byte for character, 1 BE Int32 for length of the buffer)</p>"},{"location":"ejemplos/servidor/node_modules/buffer-writer/#var-buffer-writerjoin","title":"var buffer = writer.join()","text":"<p>Collects all data in the writer and joins it into a single, new buffer.</p>"},{"location":"ejemplos/servidor/node_modules/buffer-writer/#var-buffer-writerflushchar","title":"var buffer = writer.flush(char)","text":"<p>Writes the 5 byte postgres required message header, collects all data in the writer and joins it into a single, new buffer, and then resets the writer.</p>"},{"location":"ejemplos/servidor/node_modules/buffer-writer/#thoughts","title":"thoughts","text":"<p>This is kind of node-postgres specific.  If you're interested in using this for a more general purpose thing, lemme know. I would love to work with you on getting this more reusable for your needs.</p>"},{"location":"ejemplos/servidor/node_modules/buffer-writer/#license","title":"license","text":"<p>MIT</p>"},{"location":"ejemplos/servidor/node_modules/bytes/History/","title":"3.1.0 / 2019-01-22","text":"<ul> <li>Add petabyte (<code>pb</code>) support</li> </ul>"},{"location":"ejemplos/servidor/node_modules/bytes/History/#300-2017-08-31","title":"3.0.0 / 2017-08-31","text":"<ul> <li>Change \"kB\" to \"KB\" in format output</li> <li>Remove support for Node.js 0.6</li> <li>Remove support for ComponentJS</li> </ul>"},{"location":"ejemplos/servidor/node_modules/bytes/History/#250-2017-03-24","title":"2.5.0 / 2017-03-24","text":"<ul> <li>Add option \"unit\"</li> </ul>"},{"location":"ejemplos/servidor/node_modules/bytes/History/#240-2016-06-01","title":"2.4.0 / 2016-06-01","text":"<ul> <li>Add option \"unitSeparator\"</li> </ul>"},{"location":"ejemplos/servidor/node_modules/bytes/History/#230-2016-02-15","title":"2.3.0 / 2016-02-15","text":"<ul> <li>Drop partial bytes on all parsed units</li> <li>Fix non-finite numbers to <code>.format</code> to return <code>null</code></li> <li>Fix parsing byte string that looks like hex</li> <li>perf: hoist regular expressions</li> </ul>"},{"location":"ejemplos/servidor/node_modules/bytes/History/#220-2015-11-13","title":"2.2.0 / 2015-11-13","text":"<ul> <li>add option \"decimalPlaces\"</li> <li>add option \"fixedDecimals\"</li> </ul>"},{"location":"ejemplos/servidor/node_modules/bytes/History/#210-2015-05-21","title":"2.1.0 / 2015-05-21","text":"<ul> <li>add <code>.format</code> export</li> <li>add <code>.parse</code> export</li> </ul>"},{"location":"ejemplos/servidor/node_modules/bytes/History/#202-2015-05-20","title":"2.0.2 / 2015-05-20","text":"<ul> <li>remove map recreation</li> <li>remove unnecessary object construction</li> </ul>"},{"location":"ejemplos/servidor/node_modules/bytes/History/#201-2015-05-07","title":"2.0.1 / 2015-05-07","text":"<ul> <li>fix browserify require</li> <li>remove node.extend dependency</li> </ul>"},{"location":"ejemplos/servidor/node_modules/bytes/History/#200-2015-04-12","title":"2.0.0 / 2015-04-12","text":"<ul> <li>add option \"case\"</li> <li>add option \"thousandsSeparator\"</li> <li>return \"null\" on invalid parse input</li> <li>support proper round-trip: bytes(bytes(num)) === num</li> <li>units no longer case sensitive when parsing</li> </ul>"},{"location":"ejemplos/servidor/node_modules/bytes/History/#100-2014-05-05","title":"1.0.0 / 2014-05-05","text":"<ul> <li>add negative support. fixes #6</li> </ul>"},{"location":"ejemplos/servidor/node_modules/bytes/History/#030-2014-03-19","title":"0.3.0 / 2014-03-19","text":"<ul> <li>added terabyte support</li> </ul>"},{"location":"ejemplos/servidor/node_modules/bytes/History/#021-2013-04-01","title":"0.2.1 / 2013-04-01","text":"<ul> <li>add .component</li> </ul>"},{"location":"ejemplos/servidor/node_modules/bytes/History/#020-2012-10-28","title":"0.2.0 / 2012-10-28","text":"<ul> <li>bytes(200).should.eql('200b')</li> </ul>"},{"location":"ejemplos/servidor/node_modules/bytes/History/#010-2012-07-04","title":"0.1.0 / 2012-07-04","text":"<ul> <li>add bytes to string conversion [yields]</li> </ul>"},{"location":"ejemplos/servidor/node_modules/bytes/Readme/","title":"Bytes utility","text":"<p>Utility to parse a string bytes (ex: <code>1TB</code>) to bytes (<code>1099511627776</code>) and vice-versa.</p>"},{"location":"ejemplos/servidor/node_modules/bytes/Readme/#installation","title":"Installation","text":"<p>This is a Node.js module available through the npm registry. Installation is done using the <code>npm install</code> command:</p> <pre><code>$ npm install bytes\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/bytes/Readme/#usage","title":"Usage","text":"<pre><code>var bytes = require('bytes');\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/bytes/Readme/#bytesformatnumber-value-options-stringnull","title":"bytes.format(number value, [options]): string\uff5cnull","text":"<p>Format the given value in bytes into a string. If the value is negative, it is kept as such. If it is a float, it is  rounded.</p> <p>Arguments</p> Name Type Description value <code>number</code> Value in bytes options <code>Object</code> Conversion options <p>Options</p> Property Type Description decimalPlaces <code>number</code>\uff5c<code>null</code> Maximum number of decimal places to include in output. Default value to <code>2</code>. fixedDecimals <code>boolean</code>\uff5c<code>null</code> Whether to always display the maximum number of decimal places. Default value to <code>false</code> thousandsSeparator <code>string</code>\uff5c<code>null</code> Example of values: <code>' '</code>, <code>','</code> and <code>.</code>... Default value to <code>''</code>. unit <code>string</code>\uff5c<code>null</code> The unit in which the result will be returned (B/KB/MB/GB/TB). Default value to <code>''</code> (which means auto detect). unitSeparator <code>string</code>\uff5c<code>null</code> Separator to use between number and unit. Default value to <code>''</code>. <p>Returns</p> Name Type Description results <code>string</code>\uff5c<code>null</code> Return null upon error. String value otherwise. <p>Example</p> <pre><code>bytes(1024);\n// output: '1KB'\n\nbytes(1000);\n// output: '1000B'\n\nbytes(1000, {thousandsSeparator: ' '});\n// output: '1 000B'\n\nbytes(1024 * 1.7, {decimalPlaces: 0});\n// output: '2KB'\n\nbytes(1024, {unitSeparator: ' '});\n// output: '1 KB'\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/bytes/Readme/#bytesparsestringnumber-value-numbernull","title":"bytes.parse(string\uff5cnumber value): number\uff5cnull","text":"<p>Parse the string value into an integer in bytes. If no unit is given, or <code>value</code> is a number, it is assumed the value is in bytes.</p> <p>Supported units and abbreviations are as follows and are case-insensitive:</p> <ul> <li><code>b</code> for bytes</li> <li><code>kb</code> for kilobytes</li> <li><code>mb</code> for megabytes</li> <li><code>gb</code> for gigabytes</li> <li><code>tb</code> for terabytes</li> <li><code>pb</code> for petabytes</li> </ul> <p>The units are in powers of two, not ten. This means 1kb = 1024b according to this parser.</p> <p>Arguments</p> Name Type Description value <code>string</code>\uff5c<code>number</code> String to parse, or number in bytes. <p>Returns</p> Name Type Description results <code>number</code>\uff5c<code>null</code> Return null upon error. Value in bytes otherwise. <p>Example</p> <pre><code>bytes('1KB');\n// output: 1024\n\nbytes('1024');\n// output: 1024\n\nbytes(1024);\n// output: 1KB\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/bytes/Readme/#license","title":"License","text":"<p>MIT</p>"},{"location":"ejemplos/servidor/node_modules/content-disposition/","title":"content-disposition","text":"<p>Create and parse HTTP <code>Content-Disposition</code> header</p>"},{"location":"ejemplos/servidor/node_modules/content-disposition/#installation","title":"Installation","text":"<pre><code>$ npm install content-disposition\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/content-disposition/#api","title":"API","text":"<pre><code>var contentDisposition = require('content-disposition')\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/content-disposition/#contentdispositionfilename-options","title":"contentDisposition(filename, options)","text":"<p>Create an attachment <code>Content-Disposition</code> header value using the given file name, if supplied. The <code>filename</code> is optional and if no file name is desired, but you want to specify <code>options</code>, set <code>filename</code> to <code>undefined</code>.</p> <pre><code>res.setHeader('Content-Disposition', contentDisposition('\u222b maths.pdf'))\n</code></pre> <p>note HTTP headers are of the ISO-8859-1 character set. If you are writing this header through a means different from <code>setHeader</code> in Node.js, you'll want to specify the <code>'binary'</code> encoding in Node.js.</p>"},{"location":"ejemplos/servidor/node_modules/content-disposition/#options","title":"Options","text":"<p><code>contentDisposition</code> accepts these properties in the options object.</p>"},{"location":"ejemplos/servidor/node_modules/content-disposition/#fallback","title":"fallback","text":"<p>If the <code>filename</code> option is outside ISO-8859-1, then the file name is actually stored in a supplemental field for clients that support Unicode file names and a ISO-8859-1 version of the file name is automatically generated.</p> <p>This specifies the ISO-8859-1 file name to override the automatic generation or disables the generation all together, defaults to <code>true</code>.</p> <ul> <li>A string will specify the ISO-8859-1 file name to use in place of automatic     generation.</li> <li><code>false</code> will disable including a ISO-8859-1 file name and only include the     Unicode version (unless the file name is already ISO-8859-1).</li> <li><code>true</code> will enable automatic generation if the file name is outside ISO-8859-1.</li> </ul> <p>If the <code>filename</code> option is ISO-8859-1 and this option is specified and has a different value, then the <code>filename</code> option is encoded in the extended field and this set as the fallback field, even though they are both ISO-8859-1.</p>"},{"location":"ejemplos/servidor/node_modules/content-disposition/#type","title":"type","text":"<p>Specifies the disposition type, defaults to <code>\"attachment\"</code>. This can also be <code>\"inline\"</code>, or any other value (all values except inline are treated like <code>attachment</code>, but can convey additional information if both parties agree to it). The type is normalized to lower-case.</p>"},{"location":"ejemplos/servidor/node_modules/content-disposition/#contentdispositionparsestring","title":"contentDisposition.parse(string)","text":"<pre><code>var disposition = contentDisposition.parse('attachment; filename=\"EURO rates.txt\"; filename*=UTF-8\\'\\'%e2%82%ac%20rates.txt')\n</code></pre> <p>Parse a <code>Content-Disposition</code> header string. This automatically handles extended (\"Unicode\") parameters by decoding them and providing them under the standard parameter name. This will return an object with the following properties (examples are shown for the string <code>'attachment; filename=\"EURO rates.txt\"; filename*=UTF-8\\'\\'%e2%82%ac%20rates.txt'</code>):</p> <ul> <li> <p><code>type</code>: The disposition type (always lower case). Example: <code>'attachment'</code></p> </li> <li> <p><code>parameters</code>: An object of the parameters in the disposition (name of parameter    always lower case and extended versions replace non-extended versions). Example:    <code>{filename: \"\u20ac rates.txt\"}</code></p> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/content-disposition/#examples","title":"Examples","text":""},{"location":"ejemplos/servidor/node_modules/content-disposition/#send-a-file-for-download","title":"Send a file for download","text":"<pre><code>var contentDisposition = require('content-disposition')\nvar destroy = require('destroy')\nvar fs = require('fs')\nvar http = require('http')\nvar onFinished = require('on-finished')\n\nvar filePath = '/path/to/public/plans.pdf'\n\nhttp.createServer(function onRequest (req, res) {\n  // set headers\n  res.setHeader('Content-Type', 'application/pdf')\n  res.setHeader('Content-Disposition', contentDisposition(filePath))\n\n  // send file\n  var stream = fs.createReadStream(filePath)\n  stream.pipe(res)\n  onFinished(res, function () {\n    destroy(stream)\n  })\n})\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/content-disposition/#testing","title":"Testing","text":"<pre><code>$ npm test\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/content-disposition/#references","title":"References","text":"<ul> <li>RFC 2616: Hypertext Transfer Protocol -- HTTP/1.1</li> <li>RFC 5987: Character Set and Language Encoding for Hypertext Transfer Protocol (HTTP) Header Field Parameters</li> <li>RFC 6266: Use of the Content-Disposition Header Field in the Hypertext Transfer Protocol (HTTP)</li> <li>Test Cases for HTTP Content-Disposition header field (RFC 6266) and the Encodings defined in RFCs 2047, 2231 and 5987</li> </ul>"},{"location":"ejemplos/servidor/node_modules/content-disposition/#license","title":"License","text":"<p>MIT</p>"},{"location":"ejemplos/servidor/node_modules/content-disposition/HISTORY/","title":"0.5.3 / 2018-12-17","text":"<ul> <li>Use <code>safe-buffer</code> for improved Buffer API</li> </ul>"},{"location":"ejemplos/servidor/node_modules/content-disposition/HISTORY/#052-2016-12-08","title":"0.5.2 / 2016-12-08","text":"<ul> <li>Fix <code>parse</code> to accept any linear whitespace character</li> </ul>"},{"location":"ejemplos/servidor/node_modules/content-disposition/HISTORY/#051-2016-01-17","title":"0.5.1 / 2016-01-17","text":"<ul> <li>perf: enable strict mode</li> </ul>"},{"location":"ejemplos/servidor/node_modules/content-disposition/HISTORY/#050-2014-10-11","title":"0.5.0 / 2014-10-11","text":"<ul> <li>Add <code>parse</code> function</li> </ul>"},{"location":"ejemplos/servidor/node_modules/content-disposition/HISTORY/#040-2014-09-21","title":"0.4.0 / 2014-09-21","text":"<ul> <li>Expand non-Unicode <code>filename</code> to the full ISO-8859-1 charset</li> </ul>"},{"location":"ejemplos/servidor/node_modules/content-disposition/HISTORY/#030-2014-09-20","title":"0.3.0 / 2014-09-20","text":"<ul> <li>Add <code>fallback</code> option</li> <li>Add <code>type</code> option</li> </ul>"},{"location":"ejemplos/servidor/node_modules/content-disposition/HISTORY/#020-2014-09-19","title":"0.2.0 / 2014-09-19","text":"<ul> <li>Reduce ambiguity of file names with hex escape in buggy browsers</li> </ul>"},{"location":"ejemplos/servidor/node_modules/content-disposition/HISTORY/#012-2014-09-19","title":"0.1.2 / 2014-09-19","text":"<ul> <li>Fix periodic invalid Unicode filename header</li> </ul>"},{"location":"ejemplos/servidor/node_modules/content-disposition/HISTORY/#011-2014-09-19","title":"0.1.1 / 2014-09-19","text":"<ul> <li>Fix invalid characters appearing in <code>filename*</code> parameter</li> </ul>"},{"location":"ejemplos/servidor/node_modules/content-disposition/HISTORY/#010-2014-09-18","title":"0.1.0 / 2014-09-18","text":"<ul> <li>Make the <code>filename</code> argument optional</li> </ul>"},{"location":"ejemplos/servidor/node_modules/content-disposition/HISTORY/#000-2014-09-18","title":"0.0.0 / 2014-09-18","text":"<ul> <li>Initial release</li> </ul>"},{"location":"ejemplos/servidor/node_modules/content-type/","title":"content-type","text":"<p>Create and parse HTTP Content-Type header according to RFC 7231</p>"},{"location":"ejemplos/servidor/node_modules/content-type/#installation","title":"Installation","text":"<pre><code>$ npm install content-type\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/content-type/#api","title":"API","text":"<pre><code>var contentType = require('content-type')\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/content-type/#contenttypeparsestring","title":"contentType.parse(string)","text":"<pre><code>var obj = contentType.parse('image/svg+xml; charset=utf-8')\n</code></pre> <p>Parse a content type string. This will return an object with the following properties (examples are shown for the string <code>'image/svg+xml; charset=utf-8'</code>):</p> <ul> <li> <p><code>type</code>: The media type (the type and subtype, always lower case).    Example: <code>'image/svg+xml'</code></p> </li> <li> <p><code>parameters</code>: An object of the parameters in the media type (name of parameter    always lower case). Example: <code>{charset: 'utf-8'}</code></p> </li> </ul> <p>Throws a <code>TypeError</code> if the string is missing or invalid.</p>"},{"location":"ejemplos/servidor/node_modules/content-type/#contenttypeparsereq","title":"contentType.parse(req)","text":"<pre><code>var obj = contentType.parse(req)\n</code></pre> <p>Parse the <code>content-type</code> header from the given <code>req</code>. Short-cut for <code>contentType.parse(req.headers['content-type'])</code>.</p> <p>Throws a <code>TypeError</code> if the <code>Content-Type</code> header is missing or invalid.</p>"},{"location":"ejemplos/servidor/node_modules/content-type/#contenttypeparseres","title":"contentType.parse(res)","text":"<pre><code>var obj = contentType.parse(res)\n</code></pre> <p>Parse the <code>content-type</code> header set on the given <code>res</code>. Short-cut for <code>contentType.parse(res.getHeader('content-type'))</code>.</p> <p>Throws a <code>TypeError</code> if the <code>Content-Type</code> header is missing or invalid.</p>"},{"location":"ejemplos/servidor/node_modules/content-type/#contenttypeformatobj","title":"contentType.format(obj)","text":"<pre><code>var str = contentType.format({type: 'image/svg+xml'})\n</code></pre> <p>Format an object into a content type string. This will return a string of the content type for the given object with the following properties (examples are shown that produce the string <code>'image/svg+xml; charset=utf-8'</code>):</p> <ul> <li> <p><code>type</code>: The media type (will be lower-cased). Example: <code>'image/svg+xml'</code></p> </li> <li> <p><code>parameters</code>: An object of the parameters in the media type (name of the    parameter will be lower-cased). Example: <code>{charset: 'utf-8'}</code></p> </li> </ul> <p>Throws a <code>TypeError</code> if the object contains an invalid type or parameter names.</p>"},{"location":"ejemplos/servidor/node_modules/content-type/#license","title":"License","text":"<p>MIT</p>"},{"location":"ejemplos/servidor/node_modules/content-type/HISTORY/","title":"1.0.4 / 2017-09-11","text":"<ul> <li>perf: skip parameter parsing when no parameters</li> </ul>"},{"location":"ejemplos/servidor/node_modules/content-type/HISTORY/#103-2017-09-10","title":"1.0.3 / 2017-09-10","text":"<ul> <li>perf: remove argument reassignment</li> </ul>"},{"location":"ejemplos/servidor/node_modules/content-type/HISTORY/#102-2016-05-09","title":"1.0.2 / 2016-05-09","text":"<ul> <li>perf: enable strict mode</li> </ul>"},{"location":"ejemplos/servidor/node_modules/content-type/HISTORY/#101-2015-02-13","title":"1.0.1 / 2015-02-13","text":"<ul> <li>Improve missing <code>Content-Type</code> header error message</li> </ul>"},{"location":"ejemplos/servidor/node_modules/content-type/HISTORY/#100-2015-02-01","title":"1.0.0 / 2015-02-01","text":"<ul> <li>Initial implementation, derived from <code>media-typer@0.3.0</code></li> </ul>"},{"location":"ejemplos/servidor/node_modules/cookie/","title":"cookie","text":"<p>Basic HTTP cookie parser and serializer for HTTP servers.</p>"},{"location":"ejemplos/servidor/node_modules/cookie/#installation","title":"Installation","text":"<pre><code>$ npm install cookie\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/cookie/#api","title":"API","text":"<pre><code>var cookie = require('cookie');\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/cookie/#cookieparsestr-options","title":"cookie.parse(str, options)","text":"<p>Parse an HTTP <code>Cookie</code> header string and returning an object of all cookie name-value pairs. The <code>str</code> argument is the string representing a <code>Cookie</code> header value and <code>options</code> is an optional object containing additional parsing options.</p> <pre><code>var cookies = cookie.parse('foo=bar; equation=E%3Dmc%5E2');\n// { foo: 'bar', equation: 'E=mc^2' }\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/cookie/#options","title":"Options","text":"<p><code>cookie.parse</code> accepts these properties in the options object.</p>"},{"location":"ejemplos/servidor/node_modules/cookie/#decode","title":"decode","text":"<p>Specifies a function that will be used to decode a cookie's value. Since the value of a cookie has a limited character set (and must be a simple string), this function can be used to decode a previously-encoded cookie value into a JavaScript string or other object.</p> <p>The default function is the global <code>decodeURIComponent</code>, which will decode any URL-encoded sequences into their byte representations.</p> <p>note if an error is thrown from this function, the original, non-decoded cookie value will be returned as the cookie's value.</p>"},{"location":"ejemplos/servidor/node_modules/cookie/#cookieserializename-value-options","title":"cookie.serialize(name, value, options)","text":"<p>Serialize a cookie name-value pair into a <code>Set-Cookie</code> header string. The <code>name</code> argument is the name for the cookie, the <code>value</code> argument is the value to set the cookie to, and the <code>options</code> argument is an optional object containing additional serialization options.</p> <pre><code>var setCookie = cookie.serialize('foo', 'bar');\n// foo=bar\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/cookie/#options_1","title":"Options","text":"<p><code>cookie.serialize</code> accepts these properties in the options object.</p>"},{"location":"ejemplos/servidor/node_modules/cookie/#domain","title":"domain","text":"<p>Specifies the value for the <code>Domain</code> <code>Set-Cookie</code> attribute. By default, no domain is set, and most clients will consider the cookie to apply to only the current domain.</p>"},{"location":"ejemplos/servidor/node_modules/cookie/#encode","title":"encode","text":"<p>Specifies a function that will be used to encode a cookie's value. Since value of a cookie has a limited character set (and must be a simple string), this function can be used to encode a value into a string suited for a cookie's value.</p> <p>The default function is the global <code>encodeURIComponent</code>, which will encode a JavaScript string into UTF-8 byte sequences and then URL-encode any that fall outside of the cookie range.</p>"},{"location":"ejemplos/servidor/node_modules/cookie/#expires","title":"expires","text":"<p>Specifies the <code>Date</code> object to be the value for the <code>Expires</code> <code>Set-Cookie</code> attribute. By default, no expiration is set, and most clients will consider this a \"non-persistent cookie\" and will delete it on a condition like exiting a web browser application.</p> <p>note the cookie storage model specification states that if both <code>expires</code> and <code>maxAge</code> are set, then <code>maxAge</code> takes precedence, but it is possible not all clients by obey this, so if both are set, they should point to the same date and time.</p>"},{"location":"ejemplos/servidor/node_modules/cookie/#httponly","title":"httpOnly","text":"<p>Specifies the <code>boolean</code> value for the <code>HttpOnly</code> <code>Set-Cookie</code> attribute. When truthy, the <code>HttpOnly</code> attribute is set, otherwise it is not. By default, the <code>HttpOnly</code> attribute is not set.</p> <p>note be careful when setting this to <code>true</code>, as compliant clients will not allow client-side JavaScript to see the cookie in <code>document.cookie</code>.</p>"},{"location":"ejemplos/servidor/node_modules/cookie/#maxage","title":"maxAge","text":"<p>Specifies the <code>number</code> (in seconds) to be the value for the <code>Max-Age</code> <code>Set-Cookie</code> attribute. The given number will be converted to an integer by rounding down. By default, no maximum age is set.</p> <p>note the cookie storage model specification states that if both <code>expires</code> and <code>maxAge</code> are set, then <code>maxAge</code> takes precedence, but it is possible not all clients by obey this, so if both are set, they should point to the same date and time.</p>"},{"location":"ejemplos/servidor/node_modules/cookie/#path","title":"path","text":"<p>Specifies the value for the <code>Path</code> <code>Set-Cookie</code> attribute. By default, the path is considered the \"default path\".</p>"},{"location":"ejemplos/servidor/node_modules/cookie/#samesite","title":"sameSite","text":"<p>Specifies the <code>boolean</code> or <code>string</code> to be the value for the <code>SameSite</code> <code>Set-Cookie</code> attribute.</p> <ul> <li><code>true</code> will set the <code>SameSite</code> attribute to <code>Strict</code> for strict same site enforcement.</li> <li><code>false</code> will not set the <code>SameSite</code> attribute.</li> <li><code>'lax'</code> will set the <code>SameSite</code> attribute to <code>Lax</code> for lax same site enforcement.</li> <li><code>'none'</code> will set the <code>SameSite</code> attribute to <code>None</code> for an explicit cross-site cookie.</li> <li><code>'strict'</code> will set the <code>SameSite</code> attribute to <code>Strict</code> for strict same site enforcement.</li> </ul> <p>More information about the different enforcement levels can be found in the specification.</p> <p>note This is an attribute that has not yet been fully standardized, and may change in the future. This also means many clients may ignore this attribute until they understand it.</p>"},{"location":"ejemplos/servidor/node_modules/cookie/#secure","title":"secure","text":"<p>Specifies the <code>boolean</code> value for the <code>Secure</code> <code>Set-Cookie</code> attribute. When truthy, the <code>Secure</code> attribute is set, otherwise it is not. By default, the <code>Secure</code> attribute is not set.</p> <p>note be careful when setting this to <code>true</code>, as compliant clients will not send the cookie back to the server in the future if the browser does not have an HTTPS connection.</p>"},{"location":"ejemplos/servidor/node_modules/cookie/#example","title":"Example","text":"<p>The following example uses this module in conjunction with the Node.js core HTTP server to prompt a user for their name and display it back on future visits.</p> <pre><code>var cookie = require('cookie');\nvar escapeHtml = require('escape-html');\nvar http = require('http');\nvar url = require('url');\n\nfunction onRequest(req, res) {\n  // Parse the query string\n  var query = url.parse(req.url, true, true).query;\n\n  if (query &amp;&amp; query.name) {\n    // Set a new cookie with the name\n    res.setHeader('Set-Cookie', cookie.serialize('name', String(query.name), {\n      httpOnly: true,\n      maxAge: 60 * 60 * 24 * 7 // 1 week\n    }));\n\n    // Redirect back after setting cookie\n    res.statusCode = 302;\n    res.setHeader('Location', req.headers.referer || '/');\n    res.end();\n    return;\n  }\n\n  // Parse the cookies on the request\n  var cookies = cookie.parse(req.headers.cookie || '');\n\n  // Get the visitor name set in the cookie\n  var name = cookies.name;\n\n  res.setHeader('Content-Type', 'text/html; charset=UTF-8');\n\n  if (name) {\n    res.write('&lt;p&gt;Welcome back, &lt;b&gt;' + escapeHtml(name) + '&lt;/b&gt;!&lt;/p&gt;');\n  } else {\n    res.write('&lt;p&gt;Hello, new visitor!&lt;/p&gt;');\n  }\n\n  res.write('&lt;form method=\"GET\"&gt;');\n  res.write('&lt;input placeholder=\"enter your name\" name=\"name\"&gt; &lt;input type=\"submit\" value=\"Set Name\"&gt;');\n  res.end('&lt;/form&gt;');\n}\n\nhttp.createServer(onRequest).listen(3000);\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/cookie/#testing","title":"Testing","text":"<pre><code>$ npm test\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/cookie/#benchmark","title":"Benchmark","text":"<pre><code>$ npm run bench\n\n&gt; cookie@0.3.1 bench cookie\n&gt; node benchmark/index.js\n\n  http_parser@2.8.0\n  node@6.14.2\n  v8@5.1.281.111\n  uv@1.16.1\n  zlib@1.2.11\n  ares@1.10.1-DEV\n  icu@58.2\n  modules@48\n  napi@3\n  openssl@1.0.2o\n\n&gt; node benchmark/parse.js\n\n  cookie.parse\n\n  6 tests completed.\n\n  simple      x 1,200,691 ops/sec \u00b11.12% (189 runs sampled)\n  decode      x 1,012,994 ops/sec \u00b10.97% (186 runs sampled)\n  unquote     x 1,074,174 ops/sec \u00b12.43% (186 runs sampled)\n  duplicates  x   438,424 ops/sec \u00b12.17% (184 runs sampled)\n  10 cookies  x   147,154 ops/sec \u00b11.01% (186 runs sampled)\n  100 cookies x    14,274 ops/sec \u00b11.07% (187 runs sampled)\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/cookie/#references","title":"References","text":"<ul> <li>RFC 6265: HTTP State Management Mechanism</li> <li>Same-site Cookies</li> </ul>"},{"location":"ejemplos/servidor/node_modules/cookie/#license","title":"License","text":"<p>MIT</p>"},{"location":"ejemplos/servidor/node_modules/cookie/HISTORY/","title":"0.4.0 / 2019-05-15","text":"<ul> <li>Add <code>SameSite=None</code> support</li> </ul>"},{"location":"ejemplos/servidor/node_modules/cookie/HISTORY/#031-2016-05-26","title":"0.3.1 / 2016-05-26","text":"<ul> <li>Fix <code>sameSite: true</code> to work with draft-7 clients<ul> <li><code>true</code> now sends <code>SameSite=Strict</code> instead of <code>SameSite</code></li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/cookie/HISTORY/#030-2016-05-26","title":"0.3.0 / 2016-05-26","text":"<ul> <li>Add <code>sameSite</code> option<ul> <li>Replaces <code>firstPartyOnly</code> option, never implemented by browsers</li> </ul> </li> <li>Improve error message when <code>encode</code> is not a function</li> <li>Improve error message when <code>expires</code> is not a <code>Date</code></li> </ul>"},{"location":"ejemplos/servidor/node_modules/cookie/HISTORY/#024-2016-05-20","title":"0.2.4 / 2016-05-20","text":"<ul> <li>perf: enable strict mode</li> <li>perf: use for loop in parse</li> <li>perf: use string concatination for serialization</li> </ul>"},{"location":"ejemplos/servidor/node_modules/cookie/HISTORY/#023-2015-10-25","title":"0.2.3 / 2015-10-25","text":"<ul> <li>Fix cookie <code>Max-Age</code> to never be a floating point number</li> </ul>"},{"location":"ejemplos/servidor/node_modules/cookie/HISTORY/#022-2015-09-17","title":"0.2.2 / 2015-09-17","text":"<ul> <li>Fix regression when setting empty cookie value<ul> <li>Ease the new restriction, which is just basic header-level validation</li> </ul> </li> <li>Fix typo in invalid value errors</li> </ul>"},{"location":"ejemplos/servidor/node_modules/cookie/HISTORY/#021-2015-09-17","title":"0.2.1 / 2015-09-17","text":"<ul> <li>Throw on invalid values provided to <code>serialize</code><ul> <li>Ensures the resulting string is a valid HTTP header value</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/cookie/HISTORY/#020-2015-08-13","title":"0.2.0 / 2015-08-13","text":"<ul> <li>Add <code>firstPartyOnly</code> option</li> <li>Throw better error for invalid argument to parse</li> <li>perf: hoist regular expression</li> </ul>"},{"location":"ejemplos/servidor/node_modules/cookie/HISTORY/#015-2015-09-17","title":"0.1.5 / 2015-09-17","text":"<ul> <li>Fix regression when setting empty cookie value<ul> <li>Ease the new restriction, which is just basic header-level validation</li> </ul> </li> <li>Fix typo in invalid value errors</li> </ul>"},{"location":"ejemplos/servidor/node_modules/cookie/HISTORY/#014-2015-09-17","title":"0.1.4 / 2015-09-17","text":"<ul> <li>Throw better error for invalid argument to parse</li> <li>Throw on invalid values provided to <code>serialize</code><ul> <li>Ensures the resulting string is a valid HTTP header value</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/cookie/HISTORY/#013-2015-05-19","title":"0.1.3 / 2015-05-19","text":"<ul> <li>Reduce the scope of try-catch deopt</li> <li>Remove argument reassignments</li> </ul>"},{"location":"ejemplos/servidor/node_modules/cookie/HISTORY/#012-2014-04-16","title":"0.1.2 / 2014-04-16","text":"<ul> <li>Remove unnecessary files from npm package</li> </ul>"},{"location":"ejemplos/servidor/node_modules/cookie/HISTORY/#011-2014-02-23","title":"0.1.1 / 2014-02-23","text":"<ul> <li>Fix bad parse when cookie value contained a comma</li> <li>Fix support for <code>maxAge</code> of <code>0</code></li> </ul>"},{"location":"ejemplos/servidor/node_modules/cookie/HISTORY/#010-2013-05-01","title":"0.1.0 / 2013-05-01","text":"<ul> <li>Add <code>decode</code> option</li> <li>Add <code>encode</code> option</li> </ul>"},{"location":"ejemplos/servidor/node_modules/cookie/HISTORY/#006-2013-04-08","title":"0.0.6 / 2013-04-08","text":"<ul> <li>Ignore cookie parts missing <code>=</code></li> </ul>"},{"location":"ejemplos/servidor/node_modules/cookie/HISTORY/#005-2012-10-29","title":"0.0.5 / 2012-10-29","text":"<ul> <li>Return raw cookie value if value unescape errors</li> </ul>"},{"location":"ejemplos/servidor/node_modules/cookie/HISTORY/#004-2012-06-21","title":"0.0.4 / 2012-06-21","text":"<ul> <li>Use encode/decodeURIComponent for cookie encoding/decoding<ul> <li>Improve server/client interoperability</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/cookie/HISTORY/#003-2012-06-06","title":"0.0.3 / 2012-06-06","text":"<ul> <li>Only escape special characters per the cookie RFC</li> </ul>"},{"location":"ejemplos/servidor/node_modules/cookie/HISTORY/#002-2012-06-01","title":"0.0.2 / 2012-06-01","text":"<ul> <li>Fix <code>maxAge</code> option to not throw error</li> </ul>"},{"location":"ejemplos/servidor/node_modules/cookie/HISTORY/#001-2012-05-28","title":"0.0.1 / 2012-05-28","text":"<ul> <li>Add more tests</li> </ul>"},{"location":"ejemplos/servidor/node_modules/cookie/HISTORY/#000-2012-05-28","title":"0.0.0 / 2012-05-28","text":"<ul> <li>Initial release</li> </ul>"},{"location":"ejemplos/servidor/node_modules/cookie-signature/History/","title":"1.0.6 / 2015-02-03","text":"<ul> <li>use <code>npm test</code> instead of <code>make test</code> to run tests</li> <li>clearer assertion messages when checking input</li> </ul>"},{"location":"ejemplos/servidor/node_modules/cookie-signature/History/#105-2014-09-05","title":"1.0.5 / 2014-09-05","text":"<ul> <li>add license to package.json</li> </ul>"},{"location":"ejemplos/servidor/node_modules/cookie-signature/History/#104-2014-06-25","title":"1.0.4 / 2014-06-25","text":"<ul> <li>corrected avoidance of timing attacks (thanks @tenbits!)</li> </ul>"},{"location":"ejemplos/servidor/node_modules/cookie-signature/History/#103-2014-01-28","title":"1.0.3 / 2014-01-28","text":"<ul> <li>[incorrect] fix for timing attacks</li> </ul>"},{"location":"ejemplos/servidor/node_modules/cookie-signature/History/#102-2014-01-28","title":"1.0.2 / 2014-01-28","text":"<ul> <li>fix missing repository warning</li> <li>fix typo in test</li> </ul>"},{"location":"ejemplos/servidor/node_modules/cookie-signature/History/#101-2013-04-15","title":"1.0.1 / 2013-04-15","text":"<ul> <li>Revert \"Changed underlying HMAC algo. to sha512.\"</li> <li>Revert \"Fix for timing attacks on MAC verification.\"</li> </ul>"},{"location":"ejemplos/servidor/node_modules/cookie-signature/History/#001-2010-01-03","title":"0.0.1 / 2010-01-03","text":"<ul> <li>Initial release</li> </ul>"},{"location":"ejemplos/servidor/node_modules/cookie-signature/Readme/","title":"cookie-signature","text":"<p>Sign and unsign cookies.</p>"},{"location":"ejemplos/servidor/node_modules/cookie-signature/Readme/#example","title":"Example","text":"<pre><code>var cookie = require('cookie-signature');\n\nvar val = cookie.sign('hello', 'tobiiscool');\nval.should.equal('hello.DGDUkGlIkCzPz+C0B064FNgHdEjox7ch8tOBGslZ5QI');\n\nvar val = cookie.sign('hello', 'tobiiscool');\ncookie.unsign(val, 'tobiiscool').should.equal('hello');\ncookie.unsign(val, 'luna').should.be.false;\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/cookie-signature/Readme/#license","title":"License","text":"<p>(The MIT License)</p> <p>Copyright (c) 2012 LearnBoost &lt;tj@learnboost.com&gt;</p> <p>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'Software'), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</p> <p>The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</p> <p>THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p>"},{"location":"ejemplos/servidor/node_modules/cors/","title":"cors","text":"<p>CORS is a node.js package for providing a Connect/Express middleware that can be used to enable CORS with various options.</p> <p>Follow me (@troygoode) on Twitter!</p> <ul> <li>Installation</li> <li>Usage</li> <li>Simple Usage</li> <li>Enable CORS for a Single Route</li> <li>Configuring CORS</li> <li>Configuring CORS Asynchronously</li> <li>Enabling CORS Pre-Flight</li> <li>Configuration Options</li> <li>Demo</li> <li>License</li> <li>Author</li> </ul>"},{"location":"ejemplos/servidor/node_modules/cors/#installation","title":"Installation","text":"<p>This is a Node.js module available through the npm registry. Installation is done using the <code>npm install</code> command:</p> <pre><code>$ npm install cors\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/cors/#usage","title":"Usage","text":""},{"location":"ejemplos/servidor/node_modules/cors/#simple-usage-enable-all-cors-requests","title":"Simple Usage (Enable All CORS Requests)","text":"<pre><code>var express = require('express')\nvar cors = require('cors')\nvar app = express()\n\napp.use(cors())\n\napp.get('/products/:id', function (req, res, next) {\n  res.json({msg: 'This is CORS-enabled for all origins!'})\n})\n\napp.listen(80, function () {\n  console.log('CORS-enabled web server listening on port 80')\n})\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/cors/#enable-cors-for-a-single-route","title":"Enable CORS for a Single Route","text":"<pre><code>var express = require('express')\nvar cors = require('cors')\nvar app = express()\n\napp.get('/products/:id', cors(), function (req, res, next) {\n  res.json({msg: 'This is CORS-enabled for a Single Route'})\n})\n\napp.listen(80, function () {\n  console.log('CORS-enabled web server listening on port 80')\n})\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/cors/#configuring-cors","title":"Configuring CORS","text":"<pre><code>var express = require('express')\nvar cors = require('cors')\nvar app = express()\n\nvar corsOptions = {\n  origin: 'http://example.com',\n  optionsSuccessStatus: 200 // some legacy browsers (IE11, various SmartTVs) choke on 204\n}\n\napp.get('/products/:id', cors(corsOptions), function (req, res, next) {\n  res.json({msg: 'This is CORS-enabled for only example.com.'})\n})\n\napp.listen(80, function () {\n  console.log('CORS-enabled web server listening on port 80')\n})\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/cors/#configuring-cors-w-dynamic-origin","title":"Configuring CORS w/ Dynamic Origin","text":"<pre><code>var express = require('express')\nvar cors = require('cors')\nvar app = express()\n\nvar whitelist = ['http://example1.com', 'http://example2.com']\nvar corsOptions = {\n  origin: function (origin, callback) {\n    if (whitelist.indexOf(origin) !== -1) {\n      callback(null, true)\n    } else {\n      callback(new Error('Not allowed by CORS'))\n    }\n  }\n}\n\napp.get('/products/:id', cors(corsOptions), function (req, res, next) {\n  res.json({msg: 'This is CORS-enabled for a whitelisted domain.'})\n})\n\napp.listen(80, function () {\n  console.log('CORS-enabled web server listening on port 80')\n})\n</code></pre> <p>If you do not want to block REST tools or server-to-server requests, add a <code>!origin</code> check in the origin function like so:</p> <pre><code>var corsOptions = {\n  origin: function (origin, callback) {\n    if (whitelist.indexOf(origin) !== -1 || !origin) {\n      callback(null, true)\n    } else {\n      callback(new Error('Not allowed by CORS'))\n    }\n  }\n}\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/cors/#enabling-cors-pre-flight","title":"Enabling CORS Pre-Flight","text":"<p>Certain CORS requests are considered 'complex' and require an initial <code>OPTIONS</code> request (called the \"pre-flight request\"). An example of a 'complex' CORS request is one that uses an HTTP verb other than GET/HEAD/POST (such as DELETE) or that uses custom headers. To enable pre-flighting, you must add a new OPTIONS handler for the route you want to support:</p> <pre><code>var express = require('express')\nvar cors = require('cors')\nvar app = express()\n\napp.options('/products/:id', cors()) // enable pre-flight request for DELETE request\napp.del('/products/:id', cors(), function (req, res, next) {\n  res.json({msg: 'This is CORS-enabled for all origins!'})\n})\n\napp.listen(80, function () {\n  console.log('CORS-enabled web server listening on port 80')\n})\n</code></pre> <p>You can also enable pre-flight across-the-board like so:</p> <pre><code>app.options('*', cors()) // include before other routes\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/cors/#configuring-cors-asynchronously","title":"Configuring CORS Asynchronously","text":"<pre><code>var express = require('express')\nvar cors = require('cors')\nvar app = express()\n\nvar whitelist = ['http://example1.com', 'http://example2.com']\nvar corsOptionsDelegate = function (req, callback) {\n  var corsOptions;\n  if (whitelist.indexOf(req.header('Origin')) !== -1) {\n    corsOptions = { origin: true } // reflect (enable) the requested origin in the CORS response\n  } else {\n    corsOptions = { origin: false } // disable CORS for this request\n  }\n  callback(null, corsOptions) // callback expects two parameters: error and options\n}\n\napp.get('/products/:id', cors(corsOptionsDelegate), function (req, res, next) {\n  res.json({msg: 'This is CORS-enabled for a whitelisted domain.'})\n})\n\napp.listen(80, function () {\n  console.log('CORS-enabled web server listening on port 80')\n})\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/cors/#configuration-options","title":"Configuration Options","text":"<ul> <li><code>origin</code>: Configures the Access-Control-Allow-Origin CORS header. Possible values:</li> <li><code>Boolean</code> - set <code>origin</code> to <code>true</code> to reflect the request origin, as defined by <code>req.header('Origin')</code>, or set it to <code>false</code> to disable CORS.</li> <li><code>String</code> - set <code>origin</code> to a specific origin. For example if you set it to <code>\"http://example.com\"</code> only requests from \"http://example.com\" will be allowed.</li> <li><code>RegExp</code> - set <code>origin</code> to a regular expression pattern which will be used to test the request origin. If it's a match, the request origin will be reflected. For example the pattern <code>/example\\.com$/</code> will reflect any request that is coming from an origin ending with \"example.com\".</li> <li><code>Array</code> - set <code>origin</code> to an array of valid origins. Each origin can be a <code>String</code> or a <code>RegExp</code>. For example <code>[\"http://example1.com\", /\\.example2\\.com$/]</code> will accept any request from \"http://example1.com\" or from a subdomain of \"example2.com\".</li> <li><code>Function</code> - set <code>origin</code> to a function implementing some custom logic. The function takes the request origin as the first parameter and a callback (which expects the signature <code>err [object], allow [bool]</code>) as the second.</li> <li><code>methods</code>: Configures the Access-Control-Allow-Methods CORS header. Expects a comma-delimited string (ex: 'GET,PUT,POST') or an array (ex: <code>['GET', 'PUT', 'POST']</code>).</li> <li><code>allowedHeaders</code>: Configures the Access-Control-Allow-Headers CORS header. Expects a comma-delimited string (ex: 'Content-Type,Authorization') or an array (ex: <code>['Content-Type', 'Authorization']</code>). If not specified, defaults to reflecting the headers specified in the request's Access-Control-Request-Headers header.</li> <li><code>exposedHeaders</code>: Configures the Access-Control-Expose-Headers CORS header. Expects a comma-delimited string (ex: 'Content-Range,X-Content-Range') or an array (ex: <code>['Content-Range', 'X-Content-Range']</code>). If not specified, no custom headers are exposed.</li> <li><code>credentials</code>: Configures the Access-Control-Allow-Credentials CORS header. Set to <code>true</code> to pass the header, otherwise it is omitted.</li> <li><code>maxAge</code>: Configures the Access-Control-Max-Age CORS header. Set to an integer to pass the header, otherwise it is omitted.</li> <li><code>preflightContinue</code>: Pass the CORS preflight response to the next handler.</li> <li><code>optionsSuccessStatus</code>: Provides a status code to use for successful <code>OPTIONS</code> requests, since some legacy browsers (IE11, various SmartTVs) choke on <code>204</code>.</li> </ul> <p>The default configuration is the equivalent of:</p> <pre><code>{\n  \"origin\": \"*\",\n  \"methods\": \"GET,HEAD,PUT,PATCH,POST,DELETE\",\n  \"preflightContinue\": false,\n  \"optionsSuccessStatus\": 204\n}\n</code></pre> <p>For details on the effect of each CORS header, read this article on HTML5 Rocks.</p>"},{"location":"ejemplos/servidor/node_modules/cors/#demo","title":"Demo","text":"<p>A demo that illustrates CORS working (and not working) using jQuery is available here: http://node-cors-client.herokuapp.com/</p> <p>Code for that demo can be found here:</p> <ul> <li>Client: https://github.com/TroyGoode/node-cors-client</li> <li>Server: https://github.com/TroyGoode/node-cors-server</li> </ul>"},{"location":"ejemplos/servidor/node_modules/cors/#license","title":"License","text":"<p>MIT License</p>"},{"location":"ejemplos/servidor/node_modules/cors/#author","title":"Author","text":"<p>Troy Goode (troygoode@gmail.com)</p>"},{"location":"ejemplos/servidor/node_modules/cors/CONTRIBUTING/","title":"contributing to <code>cors</code>","text":"<p>CORS is a node.js package for providing a connect/express middleware that can be used to enable CORS with various options. Learn more about the project in the README.</p>"},{"location":"ejemplos/servidor/node_modules/cors/CONTRIBUTING/#the-cors-spec","title":"The CORS Spec","text":"<p>http://www.w3.org/TR/cors/</p>"},{"location":"ejemplos/servidor/node_modules/cors/CONTRIBUTING/#pull-requests-welcome","title":"Pull Requests Welcome","text":"<ul> <li>Include <code>'use strict';</code> in every javascript file.</li> <li>2 space indentation.</li> <li>Please run the testing steps below before submitting.</li> </ul>"},{"location":"ejemplos/servidor/node_modules/cors/CONTRIBUTING/#testing","title":"Testing","text":"<pre><code>$ npm install\n$ npm test\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/cors/CONTRIBUTING/#interactive-testing-harness","title":"Interactive Testing Harness","text":"<p>http://node-cors-client.herokuapp.com</p> <p>Related git repositories:</p> <ul> <li>https://github.com/TroyGoode/node-cors-server</li> <li>https://github.com/TroyGoode/node-cors-client</li> </ul>"},{"location":"ejemplos/servidor/node_modules/cors/CONTRIBUTING/#license","title":"License","text":"<p>MIT License</p>"},{"location":"ejemplos/servidor/node_modules/cors/HISTORY/","title":"2.8.5 / 2018-11-04","text":"<ul> <li>Fix setting <code>maxAge</code> option to <code>0</code></li> </ul>"},{"location":"ejemplos/servidor/node_modules/cors/HISTORY/#284-2017-07-12","title":"2.8.4 / 2017-07-12","text":"<ul> <li>Work-around Safari bug in default pre-flight response</li> </ul>"},{"location":"ejemplos/servidor/node_modules/cors/HISTORY/#283-2017-03-29","title":"2.8.3 / 2017-03-29","text":"<ul> <li>Fix error when options delegate missing <code>methods</code> option</li> </ul>"},{"location":"ejemplos/servidor/node_modules/cors/HISTORY/#282-2017-03-28","title":"2.8.2 / 2017-03-28","text":"<ul> <li>Fix error when frozen options are passed</li> <li>Send \"Vary: Origin\" when using regular expressions</li> <li>Send \"Vary: Access-Control-Request-Headers\" when dynamic <code>allowedHeaders</code></li> </ul>"},{"location":"ejemplos/servidor/node_modules/cors/HISTORY/#281-2016-09-08","title":"2.8.1 / 2016-09-08","text":"<p>This release only changed documentation.</p>"},{"location":"ejemplos/servidor/node_modules/cors/HISTORY/#280-2016-08-23","title":"2.8.0 / 2016-08-23","text":"<ul> <li>Add <code>optionsSuccessStatus</code> option</li> </ul>"},{"location":"ejemplos/servidor/node_modules/cors/HISTORY/#272-2016-08-23","title":"2.7.2 / 2016-08-23","text":"<ul> <li>Fix error when Node.js running in strict mode</li> </ul>"},{"location":"ejemplos/servidor/node_modules/cors/HISTORY/#271-2015-05-28","title":"2.7.1 / 2015-05-28","text":"<ul> <li>Move module into expressjs organization</li> </ul>"},{"location":"ejemplos/servidor/node_modules/cors/HISTORY/#270-2015-05-28","title":"2.7.0 / 2015-05-28","text":"<ul> <li>Allow array of matching condition as <code>origin</code> option</li> <li>Allow regular expression as <code>origin</code> option</li> </ul>"},{"location":"ejemplos/servidor/node_modules/cors/HISTORY/#261-2015-05-28","title":"2.6.1 / 2015-05-28","text":"<ul> <li>Update <code>license</code> in package.json</li> </ul>"},{"location":"ejemplos/servidor/node_modules/cors/HISTORY/#260-2015-04-27","title":"2.6.0 / 2015-04-27","text":"<ul> <li>Add <code>preflightContinue</code> option</li> <li>Fix \"Vary: Origin\" header added for \"*\"</li> </ul>"},{"location":"ejemplos/servidor/node_modules/debug/","title":"debug","text":"<p>A tiny node.js debugging utility modelled after node core's debugging technique.</p> <p>Discussion around the V3 API is under way here</p>"},{"location":"ejemplos/servidor/node_modules/debug/#installation","title":"Installation","text":"<pre><code>$ npm install debug\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/debug/#usage","title":"Usage","text":"<p><code>debug</code> exposes a function; simply pass this function the name of your module, and it will return a decorated version of <code>console.error</code> for you to pass debug statements to. This will allow you to toggle the debug output for different parts of your module as well as the module as a whole.</p> <p>Example app.js:</p> <pre><code>var debug = require('debug')('http')\n  , http = require('http')\n  , name = 'My App';\n\n// fake app\n\ndebug('booting %s', name);\n\nhttp.createServer(function(req, res){\n  debug(req.method + ' ' + req.url);\n  res.end('hello\\n');\n}).listen(3000, function(){\n  debug('listening');\n});\n\n// fake worker of some kind\n\nrequire('./worker');\n</code></pre> <p>Example worker.js:</p> <pre><code>var debug = require('debug')('worker');\n\nsetInterval(function(){\n  debug('doing some work');\n}, 1000);\n</code></pre> <p>The DEBUG environment variable is then used to enable these based on space or comma-delimited names. Here are some examples:</p> <p></p> <p></p>"},{"location":"ejemplos/servidor/node_modules/debug/#windows-note","title":"Windows note","text":"<p>On Windows the environment variable is set using the <code>set</code> command.</p> <pre><code>set DEBUG=*,-not_this\n</code></pre> <p>Note that PowerShell uses different syntax to set environment variables.</p> <p><code>cmd  $env:DEBUG = \"*,-not_this\"</code></p> <p>Then, run the program to be debugged as usual.</p>"},{"location":"ejemplos/servidor/node_modules/debug/#millisecond-diff","title":"Millisecond diff","text":"<p>When actively developing an application it can be useful to see when the time spent between one <code>debug()</code> call and the next. Suppose for example you invoke <code>debug()</code> before requesting a resource, and after as well, the \"+NNNms\" will show you how much time was spent between calls.</p> <p></p> <p>When stdout is not a TTY, <code>Date#toUTCString()</code> is used, making it more useful for logging the debug information as shown below:</p> <p></p>"},{"location":"ejemplos/servidor/node_modules/debug/#conventions","title":"Conventions","text":"<p>If you're using this in one or more of your libraries, you should use the name of your library so that developers may toggle debugging as desired without guessing names. If you have more than one debuggers you should prefix them with your library name and use \":\" to separate features. For example \"bodyParser\" from Connect would then be \"connect:bodyParser\".</p>"},{"location":"ejemplos/servidor/node_modules/debug/#wildcards","title":"Wildcards","text":"<p>The <code>*</code> character may be used as a wildcard. Suppose for example your library has debuggers named \"connect:bodyParser\", \"connect:compress\", \"connect:session\", instead of listing all three with <code>DEBUG=connect:bodyParser,connect:compress,connect:session</code>, you may simply do <code>DEBUG=connect:*</code>, or to run everything using this module simply use <code>DEBUG=*</code>.</p> <p>You can also exclude specific debuggers by prefixing them with a \"-\" character.  For example, <code>DEBUG=*,-connect:*</code> would include all debuggers except those starting with \"connect:\".</p>"},{"location":"ejemplos/servidor/node_modules/debug/#environment-variables","title":"Environment Variables","text":"<p>When running through Node.js, you can set a few environment variables that will   change the behavior of the debug logging:</p> Name Purpose <code>DEBUG</code> Enables/disables specific debugging namespaces. <code>DEBUG_COLORS</code> Whether or not to use colors in the debug output. <code>DEBUG_DEPTH</code> Object inspection depth. <code>DEBUG_SHOW_HIDDEN</code> Shows hidden properties on inspected objects. <p>Note: The environment variables beginning with <code>DEBUG_</code> end up being   converted into an Options object that gets used with <code>%o</code>/<code>%O</code> formatters.   See the Node.js documentation for   <code>util.inspect()</code>   for the complete list.</p>"},{"location":"ejemplos/servidor/node_modules/debug/#formatters","title":"Formatters","text":"<p>Debug uses printf-style formatting. Below are the officially supported formatters:</p> Formatter Representation <code>%O</code> Pretty-print an Object on multiple lines. <code>%o</code> Pretty-print an Object all on a single line. <code>%s</code> String. <code>%d</code> Number (both integer and float). <code>%j</code> JSON. Replaced with the string '[Circular]' if the argument contains circular references. <code>%%</code> Single percent sign ('%'). This does not consume an argument."},{"location":"ejemplos/servidor/node_modules/debug/#custom-formatters","title":"Custom formatters","text":"<p>You can add custom formatters by extending the <code>debug.formatters</code> object. For example, if you wanted to add support for rendering a Buffer as hex with <code>%h</code>, you could do something like:</p> <pre><code>const createDebug = require('debug')\ncreateDebug.formatters.h = (v) =&gt; {\n  return v.toString('hex')\n}\n\n// \u2026elsewhere\nconst debug = createDebug('foo')\ndebug('this is hex: %h', new Buffer('hello world'))\n//   foo this is hex: 68656c6c6f20776f726c6421 +0ms\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/debug/#browser-support","title":"Browser support","text":"<p>You can build a browser-ready script using browserify,   or just use the browserify-as-a-service build,   if you don't want to build it yourself.</p> <p>Debug's enable state is currently persisted by <code>localStorage</code>.   Consider the situation shown below where you have <code>worker:a</code> and <code>worker:b</code>,   and wish to debug both. You can enable this using <code>localStorage.debug</code>:</p> <pre><code>localStorage.debug = 'worker:*'\n</code></pre> <p>And then refresh the page.</p> <pre><code>a = debug('worker:a');\nb = debug('worker:b');\n\nsetInterval(function(){\n  a('doing some work');\n}, 1000);\n\nsetInterval(function(){\n  b('doing some work');\n}, 1200);\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/debug/#web-inspector-colors","title":"Web Inspector Colors","text":"<p>Colors are also enabled on \"Web Inspectors\" that understand the <code>%c</code> formatting   option. These are WebKit web inspectors, Firefox (since version   31)   and the Firebug plugin for Firefox (any version).</p> <p>Colored output looks something like:</p> <p></p>"},{"location":"ejemplos/servidor/node_modules/debug/#output-streams","title":"Output streams","text":"<p>By default <code>debug</code> will log to stderr, however this can be configured per-namespace by overriding the <code>log</code> method:</p> <p>Example stdout.js:</p> <pre><code>var debug = require('debug');\nvar error = debug('app:error');\n\n// by default stderr is used\nerror('goes to stderr!');\n\nvar log = debug('app:log');\n// set this namespace to log via console.log\nlog.log = console.log.bind(console); // don't forget to bind to console!\nlog('goes to stdout');\nerror('still goes to stderr!');\n\n// set all output to go via console.info\n// overrides all per-namespace log settings\ndebug.log = console.info.bind(console);\nerror('now goes to stdout via console.info');\nlog('still goes to stdout, but via console.info now');\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/debug/#authors","title":"Authors","text":"<ul> <li>TJ Holowaychuk</li> <li>Nathan Rajlich</li> <li>Andrew Rhyne</li> </ul>"},{"location":"ejemplos/servidor/node_modules/debug/#backers","title":"Backers","text":"<p>Support us with a monthly donation and help us continue our activities. [Become a backer]</p> <p> </p>"},{"location":"ejemplos/servidor/node_modules/debug/#sponsors","title":"Sponsors","text":"<p>Become a sponsor and get your logo on our README on Github with a link to your site. [Become a sponsor]</p> <p> </p>"},{"location":"ejemplos/servidor/node_modules/debug/#license","title":"License","text":"<p>(The MIT License)</p> <p>Copyright (c) 2014-2016 TJ Holowaychuk &lt;tj@vision-media.ca&gt;</p> <p>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'Software'), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</p> <p>The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</p> <p>THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p>"},{"location":"ejemplos/servidor/node_modules/debug/CHANGELOG/","title":"2.6.9 / 2017-09-22","text":"<ul> <li>remove ReDoS regexp in %o formatter (#504)</li> </ul>"},{"location":"ejemplos/servidor/node_modules/debug/CHANGELOG/#268-2017-05-18","title":"2.6.8 / 2017-05-18","text":"<ul> <li>Fix: Check for undefined on browser globals (#462, @marbemac)</li> </ul>"},{"location":"ejemplos/servidor/node_modules/debug/CHANGELOG/#267-2017-05-16","title":"2.6.7 / 2017-05-16","text":"<ul> <li>Fix: Update ms to 2.0.0 to fix regular expression denial of service vulnerability (#458, @hubdotcom)</li> <li>Fix: Inline extend function in node implementation (#452, @dougwilson)</li> <li>Docs: Fix typo (#455, @msasad)</li> </ul>"},{"location":"ejemplos/servidor/node_modules/debug/CHANGELOG/#265-2017-04-27","title":"2.6.5 / 2017-04-27","text":"<ul> <li>Fix: null reference check on window.documentElement.style.WebkitAppearance (#447, @thebigredgeek)</li> <li>Misc: clean up browser reference checks (#447, @thebigredgeek)</li> <li>Misc: add npm-debug.log to .gitignore (@thebigredgeek)</li> </ul>"},{"location":"ejemplos/servidor/node_modules/debug/CHANGELOG/#264-2017-04-20","title":"2.6.4 / 2017-04-20","text":"<ul> <li>Fix: bug that would occure if process.env.DEBUG is a non-string value. (#444, @LucianBuzzo)</li> <li>Chore: ignore bower.json in npm installations. (#437, @joaovieira)</li> <li>Misc: update \"ms\" to v0.7.3 (@tootallnate)</li> </ul>"},{"location":"ejemplos/servidor/node_modules/debug/CHANGELOG/#263-2017-03-13","title":"2.6.3 / 2017-03-13","text":"<ul> <li>Fix: Electron reference to <code>process.env.DEBUG</code> (#431, @paulcbetts)</li> <li>Docs: Changelog fix (@thebigredgeek)</li> </ul>"},{"location":"ejemplos/servidor/node_modules/debug/CHANGELOG/#262-2017-03-10","title":"2.6.2 / 2017-03-10","text":"<ul> <li>Fix: DEBUG_MAX_ARRAY_LENGTH (#420, @slavaGanzin)</li> <li>Docs: Add backers and sponsors from Open Collective (#422, @piamancini)</li> <li>Docs: Add Slackin invite badge (@tootallnate)</li> </ul>"},{"location":"ejemplos/servidor/node_modules/debug/CHANGELOG/#261-2017-02-10","title":"2.6.1 / 2017-02-10","text":"<ul> <li>Fix: Module's <code>export default</code> syntax fix for IE8 <code>Expected identifier</code> error</li> <li>Fix: Whitelist DEBUG_FD for values 1 and 2 only (#415, @pi0)</li> <li>Fix: IE8 \"Expected identifier\" error (#414, @vgoma)</li> <li>Fix: Namespaces would not disable once enabled (#409, @musikov)</li> </ul>"},{"location":"ejemplos/servidor/node_modules/debug/CHANGELOG/#260-2016-12-28","title":"2.6.0 / 2016-12-28","text":"<ul> <li>Fix: added better null pointer checks for browser useColors (@thebigredgeek)</li> <li>Improvement: removed explicit <code>window.debug</code> export (#404, @tootallnate)</li> <li>Improvement: deprecated <code>DEBUG_FD</code> environment variable (#405, @tootallnate)</li> </ul>"},{"location":"ejemplos/servidor/node_modules/debug/CHANGELOG/#252-2016-12-25","title":"2.5.2 / 2016-12-25","text":"<ul> <li>Fix: reference error on window within webworkers (#393, @KlausTrainer)</li> <li>Docs: fixed README typo (#391, @lurch)</li> <li>Docs: added notice about v3 api discussion (@thebigredgeek)</li> </ul>"},{"location":"ejemplos/servidor/node_modules/debug/CHANGELOG/#251-2016-12-20","title":"2.5.1 / 2016-12-20","text":"<ul> <li>Fix: babel-core compatibility</li> </ul>"},{"location":"ejemplos/servidor/node_modules/debug/CHANGELOG/#250-2016-12-20","title":"2.5.0 / 2016-12-20","text":"<ul> <li>Fix: wrong reference in bower file (@thebigredgeek)</li> <li>Fix: webworker compatibility (@thebigredgeek)</li> <li>Fix: output formatting issue (#388, @kribblo)</li> <li>Fix: babel-loader compatibility (#383, @escwald)</li> <li>Misc: removed built asset from repo and publications (@thebigredgeek)</li> <li>Misc: moved source files to /src (#378, @yamikuronue)</li> <li>Test: added karma integration and replaced babel with browserify for browser tests (#378, @yamikuronue)</li> <li>Test: coveralls integration (#378, @yamikuronue)</li> <li>Docs: simplified language in the opening paragraph (#373, @yamikuronue)</li> </ul>"},{"location":"ejemplos/servidor/node_modules/debug/CHANGELOG/#245-2016-12-17","title":"2.4.5 / 2016-12-17","text":"<ul> <li>Fix: <code>navigator</code> undefined in Rhino (#376, @jochenberger)</li> <li>Fix: custom log function (#379, @hsiliev)</li> <li>Improvement: bit of cleanup + linting fixes (@thebigredgeek)</li> <li>Improvement: rm non-maintainted <code>dist/</code> dir (#375, @freewil)</li> <li>Docs: simplified language in the opening paragraph. (#373, @yamikuronue)</li> </ul>"},{"location":"ejemplos/servidor/node_modules/debug/CHANGELOG/#244-2016-12-14","title":"2.4.4 / 2016-12-14","text":"<ul> <li>Fix: work around debug being loaded in preload scripts for electron (#368, @paulcbetts)</li> </ul>"},{"location":"ejemplos/servidor/node_modules/debug/CHANGELOG/#243-2016-12-14","title":"2.4.3 / 2016-12-14","text":"<ul> <li>Fix: navigation.userAgent error for react native (#364, @escwald)</li> </ul>"},{"location":"ejemplos/servidor/node_modules/debug/CHANGELOG/#242-2016-12-14","title":"2.4.2 / 2016-12-14","text":"<ul> <li>Fix: browser colors (#367, @tootallnate)</li> <li>Misc: travis ci integration (@thebigredgeek)</li> <li>Misc: added linting and testing boilerplate with sanity check (@thebigredgeek)</li> </ul>"},{"location":"ejemplos/servidor/node_modules/debug/CHANGELOG/#241-2016-12-13","title":"2.4.1 / 2016-12-13","text":"<ul> <li>Fix: typo that broke the package (#356)</li> </ul>"},{"location":"ejemplos/servidor/node_modules/debug/CHANGELOG/#240-2016-12-13","title":"2.4.0 / 2016-12-13","text":"<ul> <li>Fix: bower.json references unbuilt src entry point (#342, @justmatt)</li> <li>Fix: revert \"handle regex special characters\" (@tootallnate)</li> <li>Feature: configurable util.inspect()`options for NodeJS (#327, @tootallnate)</li> <li>Feature: %O`(big O) pretty-prints objects (#322, @tootallnate)</li> <li>Improvement: allow colors in workers (#335, @botverse)</li> <li>Improvement: use same color for same namespace. (#338, @lchenay)</li> </ul>"},{"location":"ejemplos/servidor/node_modules/debug/CHANGELOG/#233-2016-11-09","title":"2.3.3 / 2016-11-09","text":"<ul> <li>Fix: Catch <code>JSON.stringify()</code> errors (#195, Jovan Alleyne)</li> <li>Fix: Returning <code>localStorage</code> saved values (#331, Levi Thomason)</li> <li>Improvement: Don't create an empty object when no <code>process</code> (Nathan Rajlich)</li> </ul>"},{"location":"ejemplos/servidor/node_modules/debug/CHANGELOG/#232-2016-11-09","title":"2.3.2 / 2016-11-09","text":"<ul> <li>Fix: be super-safe in index.js as well (@TooTallNate)</li> <li>Fix: should check whether process exists (Tom Newby)</li> </ul>"},{"location":"ejemplos/servidor/node_modules/debug/CHANGELOG/#231-2016-11-09","title":"2.3.1 / 2016-11-09","text":"<ul> <li>Fix: Added electron compatibility (#324, @paulcbetts)</li> <li>Improvement: Added performance optimizations (@tootallnate)</li> <li>Readme: Corrected PowerShell environment variable example (#252, @gimre)</li> <li>Misc: Removed yarn lock file from source control (#321, @fengmk2)</li> </ul>"},{"location":"ejemplos/servidor/node_modules/debug/CHANGELOG/#230-2016-11-07","title":"2.3.0 / 2016-11-07","text":"<ul> <li>Fix: Consistent placement of ms diff at end of output (#215, @gorangajic)</li> <li>Fix: Escaping of regex special characters in namespace strings (#250, @zacronos)</li> <li>Fix: Fixed bug causing crash on react-native (#282, @vkarpov15)</li> <li>Feature: Enabled ES6+ compatible import via default export (#212 @bucaran)</li> <li>Feature: Added %O formatter to reflect Chrome's console.log capability (#279, @oncletom)</li> <li>Package: Update \"ms\" to 0.7.2 (#315, @DevSide)</li> <li>Package: removed superfluous version property from bower.json (#207 @kkirsche)</li> <li>Readme: fix USE_COLORS to DEBUG_COLORS</li> <li>Readme: Doc fixes for format string sugar (#269, @mlucool)</li> <li>Readme: Updated docs for DEBUG_FD and DEBUG_COLORS environment variables (#232, @mattlyons0)</li> <li>Readme: doc fixes for PowerShell (#271 #243, @exoticknight @unreadable)</li> <li>Readme: better docs for browser support (#224, @matthewmueller)</li> <li>Tooling: Added yarn integration for development (#317, @thebigredgeek)</li> <li>Misc: Renamed History.md to CHANGELOG.md (@thebigredgeek)</li> <li>Misc: Added license file (#226 #274, @CantemoInternal @sdaitzman)</li> <li>Misc: Updated contributors (@thebigredgeek)</li> </ul>"},{"location":"ejemplos/servidor/node_modules/debug/CHANGELOG/#220-2015-05-09","title":"2.2.0 / 2015-05-09","text":"<ul> <li>package: update \"ms\" to v0.7.1 (#202, @dougwilson)</li> <li>README: add logging to file example (#193, @DanielOchoa)</li> <li>README: fixed a typo (#191, @amir-s)</li> <li>browser: expose <code>storage</code> (#190, @stephenmathieson)</li> <li>Makefile: add a <code>distclean</code> target (#189, @stephenmathieson)</li> </ul>"},{"location":"ejemplos/servidor/node_modules/debug/CHANGELOG/#213-2015-03-13","title":"2.1.3 / 2015-03-13","text":"<ul> <li>Updated stdout/stderr example (#186)</li> <li>Updated example/stdout.js to match debug current behaviour</li> <li>Renamed example/stderr.js to stdout.js</li> <li>Update Readme.md (#184)</li> <li>replace high intensity foreground color for bold (#182, #183)</li> </ul>"},{"location":"ejemplos/servidor/node_modules/debug/CHANGELOG/#212-2015-03-01","title":"2.1.2 / 2015-03-01","text":"<ul> <li>dist: recompile</li> <li>update \"ms\" to v0.7.0</li> <li>package: update \"browserify\" to v9.0.3</li> <li>component: fix \"ms.js\" repo location</li> <li>changed bower package name</li> <li>updated documentation about using debug in a browser</li> <li>fix: security error on safari (#167, #168, @yields)</li> </ul>"},{"location":"ejemplos/servidor/node_modules/debug/CHANGELOG/#211-2014-12-29","title":"2.1.1 / 2014-12-29","text":"<ul> <li>browser: use <code>typeof</code> to check for <code>console</code> existence</li> <li>browser: check for <code>console.log</code> truthiness (fix IE 8/9)</li> <li>browser: add support for Chrome apps</li> <li>Readme: added Windows usage remarks</li> <li>Add <code>bower.json</code> to properly support bower install</li> </ul>"},{"location":"ejemplos/servidor/node_modules/debug/CHANGELOG/#210-2014-10-15","title":"2.1.0 / 2014-10-15","text":"<ul> <li>node: implement <code>DEBUG_FD</code> env variable support</li> <li>package: update \"browserify\" to v6.1.0</li> <li>package: add \"license\" field to package.json (#135, @panuhorsmalahti)</li> </ul>"},{"location":"ejemplos/servidor/node_modules/debug/CHANGELOG/#200-2014-09-01","title":"2.0.0 / 2014-09-01","text":"<ul> <li>package: update \"browserify\" to v5.11.0</li> <li>node: use stderr rather than stdout for logging (#29, @stephenmathieson)</li> </ul>"},{"location":"ejemplos/servidor/node_modules/debug/CHANGELOG/#104-2014-07-15","title":"1.0.4 / 2014-07-15","text":"<ul> <li>dist: recompile</li> <li>example: remove <code>console.info()</code> log usage</li> <li>example: add \"Content-Type\" UTF-8 header to browser example</li> <li>browser: place %c marker after the space character</li> <li>browser: reset the \"content\" color via <code>color: inherit</code></li> <li>browser: add colors support for Firefox &gt;= v31</li> <li>debug: prefer an instance <code>log()</code> function over the global one (#119)</li> <li>Readme: update documentation about styled console logs for FF v31 (#116, @wryk)</li> </ul>"},{"location":"ejemplos/servidor/node_modules/debug/CHANGELOG/#103-2014-07-09","title":"1.0.3 / 2014-07-09","text":"<ul> <li>Add support for multiple wildcards in namespaces (#122, @seegno)</li> <li>browser: fix lint</li> </ul>"},{"location":"ejemplos/servidor/node_modules/debug/CHANGELOG/#102-2014-06-10","title":"1.0.2 / 2014-06-10","text":"<ul> <li>browser: update color palette (#113, @gscottolson)</li> <li>common: make console logging function configurable (#108, @timoxley)</li> <li>node: fix %o colors on old node &lt;= 0.8.x</li> <li>Makefile: find node path using shell/which (#109, @timoxley)</li> </ul>"},{"location":"ejemplos/servidor/node_modules/debug/CHANGELOG/#101-2014-06-06","title":"1.0.1 / 2014-06-06","text":"<ul> <li>browser: use <code>removeItem()</code> to clear localStorage</li> <li>browser, node: don't set DEBUG if namespaces is undefined (#107, @leedm777)</li> <li>package: add \"contributors\" section</li> <li>node: fix comment typo</li> <li>README: list authors</li> </ul>"},{"location":"ejemplos/servidor/node_modules/debug/CHANGELOG/#100-2014-06-04","title":"1.0.0 / 2014-06-04","text":"<ul> <li>make ms diff be global, not be scope</li> <li>debug: ignore empty strings in enable()</li> <li>node: make DEBUG_COLORS able to disable coloring</li> <li>*: export the <code>colors</code> array</li> <li>npmignore: don't publish the <code>dist</code> dir</li> <li>Makefile: refactor to use browserify</li> <li>package: add \"browserify\" as a dev dependency</li> <li>Readme: add Web Inspector Colors section</li> <li>node: reset terminal color for the debug content</li> <li>node: map \"%o\" to <code>util.inspect()</code></li> <li>browser: map \"%j\" to <code>JSON.stringify()</code></li> <li>debug: add custom \"formatters\"</li> <li>debug: use \"ms\" module for humanizing the diff</li> <li>Readme: add \"bash\" syntax highlighting</li> <li>browser: add Firebug color support</li> <li>browser: add colors for WebKit browsers</li> <li>node: apply log to <code>console</code></li> <li>rewrite: abstract common logic for Node &amp; browsers</li> <li>add .jshintrc file</li> </ul>"},{"location":"ejemplos/servidor/node_modules/debug/CHANGELOG/#081-2014-04-14","title":"0.8.1 / 2014-04-14","text":"<ul> <li>package: re-add the \"component\" section</li> </ul>"},{"location":"ejemplos/servidor/node_modules/debug/CHANGELOG/#080-2014-03-30","title":"0.8.0 / 2014-03-30","text":"<ul> <li>add <code>enable()</code> method for nodejs. Closes #27</li> <li>change from stderr to stdout</li> <li>remove unnecessary index.js file</li> </ul>"},{"location":"ejemplos/servidor/node_modules/debug/CHANGELOG/#074-2013-11-13","title":"0.7.4 / 2013-11-13","text":"<ul> <li>remove \"browserify\" key from package.json (fixes something in browserify)</li> </ul>"},{"location":"ejemplos/servidor/node_modules/debug/CHANGELOG/#073-2013-10-30","title":"0.7.3 / 2013-10-30","text":"<ul> <li>fix: catch localStorage security error when cookies are blocked (Chrome)</li> <li>add debug(err) support. Closes #46</li> <li>add .browser prop to package.json. Closes #42</li> </ul>"},{"location":"ejemplos/servidor/node_modules/debug/CHANGELOG/#072-2013-02-06","title":"0.7.2 / 2013-02-06","text":"<ul> <li>fix package.json</li> <li>fix: Mobile Safari (private mode) is broken with debug</li> <li>fix: Use unicode to send escape character to shell instead of octal to work with strict mode javascript</li> </ul>"},{"location":"ejemplos/servidor/node_modules/debug/CHANGELOG/#071-2013-02-05","title":"0.7.1 / 2013-02-05","text":"<ul> <li>add repository URL to package.json</li> <li>add DEBUG_COLORED to force colored output</li> <li>add browserify support</li> <li>fix component. Closes #24</li> </ul>"},{"location":"ejemplos/servidor/node_modules/debug/CHANGELOG/#070-2012-05-04","title":"0.7.0 / 2012-05-04","text":"<ul> <li>Added .component to package.json</li> <li>Added debug.component.js build</li> </ul>"},{"location":"ejemplos/servidor/node_modules/debug/CHANGELOG/#060-2012-03-16","title":"0.6.0 / 2012-03-16","text":"<ul> <li>Added support for \"-\" prefix in DEBUG [Vinay Pulim]</li> <li>Added <code>.enabled</code> flag to the node version [TooTallNate]</li> </ul>"},{"location":"ejemplos/servidor/node_modules/debug/CHANGELOG/#050-2012-02-02","title":"0.5.0 / 2012-02-02","text":"<ul> <li>Added: humanize diffs. Closes #8</li> <li>Added <code>debug.disable()</code> to the CS variant</li> <li>Removed padding. Closes #10</li> <li>Fixed: persist client-side variant again. Closes #9</li> </ul>"},{"location":"ejemplos/servidor/node_modules/debug/CHANGELOG/#040-2012-02-01","title":"0.4.0 / 2012-02-01","text":"<ul> <li>Added browser variant support for older browsers [TooTallNate]</li> <li>Added <code>debug.enable('project:*')</code> to browser variant [TooTallNate]</li> <li>Added padding to diff (moved it to the right)</li> </ul>"},{"location":"ejemplos/servidor/node_modules/debug/CHANGELOG/#030-2012-01-26","title":"0.3.0 / 2012-01-26","text":"<ul> <li>Added millisecond diff when isatty, otherwise UTC string</li> </ul>"},{"location":"ejemplos/servidor/node_modules/debug/CHANGELOG/#020-2012-01-22","title":"0.2.0 / 2012-01-22","text":"<ul> <li>Added wildcard support</li> </ul>"},{"location":"ejemplos/servidor/node_modules/debug/CHANGELOG/#010-2011-12-02","title":"0.1.0 / 2011-12-02","text":"<ul> <li>Added: remove colors unless stderr isatty [TooTallNate]</li> </ul>"},{"location":"ejemplos/servidor/node_modules/debug/CHANGELOG/#001-2010-01-03","title":"0.0.1 / 2010-01-03","text":"<ul> <li>Initial release</li> </ul>"},{"location":"ejemplos/servidor/node_modules/depd/History/","title":"1.1.2 / 2018-01-11","text":"<ul> <li>perf: remove argument reassignment</li> <li>Support Node.js 0.6 to 9.x</li> </ul>"},{"location":"ejemplos/servidor/node_modules/depd/History/#111-2017-07-27","title":"1.1.1 / 2017-07-27","text":"<ul> <li>Remove unnecessary <code>Buffer</code> loading</li> <li>Support Node.js 0.6 to 8.x</li> </ul>"},{"location":"ejemplos/servidor/node_modules/depd/History/#110-2015-09-14","title":"1.1.0 / 2015-09-14","text":"<ul> <li>Enable strict mode in more places</li> <li>Support io.js 3.x</li> <li>Support io.js 2.x</li> <li>Support web browser loading<ul> <li>Requires bundler like Browserify or webpack</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/depd/History/#101-2015-04-07","title":"1.0.1 / 2015-04-07","text":"<ul> <li>Fix <code>TypeError</code>s when under <code>'use strict'</code> code</li> <li>Fix useless type name on auto-generated messages</li> <li>Support io.js 1.x</li> <li>Support Node.js 0.12</li> </ul>"},{"location":"ejemplos/servidor/node_modules/depd/History/#100-2014-09-17","title":"1.0.0 / 2014-09-17","text":"<ul> <li>No changes</li> </ul>"},{"location":"ejemplos/servidor/node_modules/depd/History/#045-2014-09-09","title":"0.4.5 / 2014-09-09","text":"<ul> <li>Improve call speed to functions using the function wrapper</li> <li>Support Node.js 0.6</li> </ul>"},{"location":"ejemplos/servidor/node_modules/depd/History/#044-2014-07-27","title":"0.4.4 / 2014-07-27","text":"<ul> <li>Work-around v8 generating empty stack traces</li> </ul>"},{"location":"ejemplos/servidor/node_modules/depd/History/#043-2014-07-26","title":"0.4.3 / 2014-07-26","text":"<ul> <li>Fix exception when global <code>Error.stackTraceLimit</code> is too low</li> </ul>"},{"location":"ejemplos/servidor/node_modules/depd/History/#042-2014-07-19","title":"0.4.2 / 2014-07-19","text":"<ul> <li>Correct call site for wrapped functions and properties</li> </ul>"},{"location":"ejemplos/servidor/node_modules/depd/History/#041-2014-07-19","title":"0.4.1 / 2014-07-19","text":"<ul> <li>Improve automatic message generation for function properties</li> </ul>"},{"location":"ejemplos/servidor/node_modules/depd/History/#040-2014-07-19","title":"0.4.0 / 2014-07-19","text":"<ul> <li>Add <code>TRACE_DEPRECATION</code> environment variable</li> <li>Remove non-standard grey color from color output</li> <li>Support <code>--no-deprecation</code> argument</li> <li>Support <code>--trace-deprecation</code> argument</li> <li>Support <code>deprecate.property(fn, prop, message)</code></li> </ul>"},{"location":"ejemplos/servidor/node_modules/depd/History/#030-2014-06-16","title":"0.3.0 / 2014-06-16","text":"<ul> <li>Add <code>NO_DEPRECATION</code> environment variable</li> </ul>"},{"location":"ejemplos/servidor/node_modules/depd/History/#020-2014-06-15","title":"0.2.0 / 2014-06-15","text":"<ul> <li>Add <code>deprecate.property(obj, prop, message)</code></li> <li>Remove <code>supports-color</code> dependency for node.js 0.8</li> </ul>"},{"location":"ejemplos/servidor/node_modules/depd/History/#010-2014-06-15","title":"0.1.0 / 2014-06-15","text":"<ul> <li>Add <code>deprecate.function(fn, message)</code></li> <li>Add <code>process.on('deprecation', fn)</code> emitter</li> <li>Automatically generate message when omitted from <code>deprecate()</code></li> </ul>"},{"location":"ejemplos/servidor/node_modules/depd/History/#001-2014-06-15","title":"0.0.1 / 2014-06-15","text":"<ul> <li>Fix warning for dynamic calls at singe call site</li> </ul>"},{"location":"ejemplos/servidor/node_modules/depd/History/#000-2014-06-15","title":"0.0.0 / 2014-06-15","text":"<ul> <li>Initial implementation</li> </ul>"},{"location":"ejemplos/servidor/node_modules/depd/Readme/","title":"depd","text":"<p>Deprecate all the things</p> <p>With great modules comes great responsibility; mark things deprecated!</p>"},{"location":"ejemplos/servidor/node_modules/depd/Readme/#install","title":"Install","text":"<p>This module is installed directly using <code>npm</code>:</p> <pre><code>$ npm install depd\n</code></pre> <p>This module can also be bundled with systems like Browserify or webpack, though by default this module will alter it's API to no longer display or track deprecations.</p>"},{"location":"ejemplos/servidor/node_modules/depd/Readme/#api","title":"API","text":"<pre><code>var deprecate = require('depd')('my-module')\n</code></pre> <p>This library allows you to display deprecation messages to your users. This library goes above and beyond with deprecation warnings by introspection of the call stack (but only the bits that it is interested in).</p> <p>Instead of just warning on the first invocation of a deprecated function and never again, this module will warn on the first invocation of a deprecated function per unique call site, making it ideal to alert users of all deprecated uses across the code base, rather than just whatever happens to execute first.</p> <p>The deprecation warnings from this module also include the file and line information for the call into the module that the deprecated function was in.</p> <p>NOTE this library has a similar interface to the <code>debug</code> module, and this module uses the calling file to get the boundary for the call stacks, so you should always create a new <code>deprecate</code> object in each file and not within some central file.</p>"},{"location":"ejemplos/servidor/node_modules/depd/Readme/#depdnamespace","title":"depd(namespace)","text":"<p>Create a new deprecate function that uses the given namespace name in the messages and will display the call site prior to the stack entering the file this function was called from. It is highly suggested you use the name of your module as the namespace.</p>"},{"location":"ejemplos/servidor/node_modules/depd/Readme/#deprecatemessage","title":"deprecate(message)","text":"<p>Call this function from deprecated code to display a deprecation message. This message will appear once per unique caller site. Caller site is the first call site in the stack in a different file from the caller of this function.</p> <p>If the message is omitted, a message is generated for you based on the site of the <code>deprecate()</code> call and will display the name of the function called, similar to the name displayed in a stack trace.</p>"},{"location":"ejemplos/servidor/node_modules/depd/Readme/#deprecatefunctionfn-message","title":"deprecate.function(fn, message)","text":"<p>Call this function to wrap a given function in a deprecation message on any call to the function. An optional message can be supplied to provide a custom message.</p>"},{"location":"ejemplos/servidor/node_modules/depd/Readme/#deprecatepropertyobj-prop-message","title":"deprecate.property(obj, prop, message)","text":"<p>Call this function to wrap a given property on object in a deprecation message on any accessing or setting of the property. An optional message can be supplied to provide a custom message.</p> <p>The method must be called on the object where the property belongs (not inherited from the prototype).</p> <p>If the property is a data descriptor, it will be converted to an accessor descriptor in order to display the deprecation message.</p>"},{"location":"ejemplos/servidor/node_modules/depd/Readme/#processondeprecation-fn","title":"process.on('deprecation', fn)","text":"<p>This module will allow easy capturing of deprecation errors by emitting the errors as the type \"deprecation\" on the global <code>process</code>. If there are no listeners for this type, the errors are written to STDERR as normal, but if there are any listeners, nothing will be written to STDERR and instead only emitted. From there, you can write the errors in a different format or to a logging source.</p> <p>The error represents the deprecation and is emitted only once with the same rules as writing to STDERR. The error has the following properties:</p> <ul> <li><code>message</code> - This is the message given by the library</li> <li><code>name</code> - This is always <code>'DeprecationError'</code></li> <li><code>namespace</code> - This is the namespace the deprecation came from</li> <li><code>stack</code> - This is the stack of the call to the deprecated thing</li> </ul> <p>Example <code>error.stack</code> output:</p> <pre><code>DeprecationError: my-cool-module deprecated oldfunction\n    at Object.&lt;anonymous&gt; ([eval]-wrapper:6:22)\n    at Module._compile (module.js:456:26)\n    at evalScript (node.js:532:25)\n    at startup (node.js:80:7)\n    at node.js:902:3\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/depd/Readme/#processenvno_deprecation","title":"process.env.NO_DEPRECATION","text":"<p>As a user of modules that are deprecated, the environment variable <code>NO_DEPRECATION</code> is provided as a quick solution to silencing deprecation warnings from being output. The format of this is similar to that of <code>DEBUG</code>:</p> <pre><code>$ NO_DEPRECATION=my-module,othermod node app.js\n</code></pre> <p>This will suppress deprecations from being output for \"my-module\" and \"othermod\". The value is a list of comma-separated namespaces. To suppress every warning across all namespaces, use the value <code>*</code> for a namespace.</p> <p>Providing the argument <code>--no-deprecation</code> to the <code>node</code> executable will suppress all deprecations (only available in Node.js 0.8 or higher).</p> <p>NOTE This will not suppress the deperecations given to any \"deprecation\" event listeners, just the output to STDERR.</p>"},{"location":"ejemplos/servidor/node_modules/depd/Readme/#processenvtrace_deprecation","title":"process.env.TRACE_DEPRECATION","text":"<p>As a user of modules that are deprecated, the environment variable <code>TRACE_DEPRECATION</code> is provided as a solution to getting more detailed location information in deprecation warnings by including the entire stack trace. The format of this is the same as <code>NO_DEPRECATION</code>:</p> <pre><code>$ TRACE_DEPRECATION=my-module,othermod node app.js\n</code></pre> <p>This will include stack traces for deprecations being output for \"my-module\" and \"othermod\". The value is a list of comma-separated namespaces. To trace every warning across all namespaces, use the value <code>*</code> for a namespace.</p> <p>Providing the argument <code>--trace-deprecation</code> to the <code>node</code> executable will trace all deprecations (only available in Node.js 0.8 or higher).</p> <p>NOTE This will not trace the deperecations silenced by <code>NO_DEPRECATION</code>.</p>"},{"location":"ejemplos/servidor/node_modules/depd/Readme/#display","title":"Display","text":"<p>When a user calls a function in your library that you mark deprecated, they will see the following written to STDERR (in the given colors, similar colors and layout to the <code>debug</code> module):</p> <pre><code>bright cyan    bright yellow\n|              |          reset       cyan\n|              |          |           |\n\u25bc              \u25bc          \u25bc           \u25bc\nmy-cool-module deprecated oldfunction [eval]-wrapper:6:22\n\u25b2              \u25b2          \u25b2           \u25b2\n|              |          |           |\nnamespace      |          |           location of mycoolmod.oldfunction() call\n               |          deprecation message\n               the word \"deprecated\"\n</code></pre> <p>If the user redirects their STDERR to a file or somewhere that does not support colors, they see (similar layout to the <code>debug</code> module):</p> <pre><code>Sun, 15 Jun 2014 05:21:37 GMT my-cool-module deprecated oldfunction at [eval]-wrapper:6:22\n\u25b2                             \u25b2              \u25b2          \u25b2              \u25b2\n|                             |              |          |              |\ntimestamp of message          namespace      |          |             location of mycoolmod.oldfunction() call\n                                             |          deprecation message\n                                             the word \"deprecated\"\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/depd/Readme/#examples","title":"Examples","text":""},{"location":"ejemplos/servidor/node_modules/depd/Readme/#deprecating-all-calls-to-a-function","title":"Deprecating all calls to a function","text":"<p>This will display a deprecated message about \"oldfunction\" being deprecated from \"my-module\" on STDERR.</p> <pre><code>var deprecate = require('depd')('my-cool-module')\n\n// message automatically derived from function name\n// Object.oldfunction\nexports.oldfunction = deprecate.function(function oldfunction () {\n  // all calls to function are deprecated\n})\n\n// specific message\nexports.oldfunction = deprecate.function(function () {\n  // all calls to function are deprecated\n}, 'oldfunction')\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/depd/Readme/#conditionally-deprecating-a-function-call","title":"Conditionally deprecating a function call","text":"<p>This will display a deprecated message about \"weirdfunction\" being deprecated from \"my-module\" on STDERR when called with less than 2 arguments.</p> <pre><code>var deprecate = require('depd')('my-cool-module')\n\nexports.weirdfunction = function () {\n  if (arguments.length &lt; 2) {\n    // calls with 0 or 1 args are deprecated\n    deprecate('weirdfunction args &lt; 2')\n  }\n}\n</code></pre> <p>When calling <code>deprecate</code> as a function, the warning is counted per call site within your own module, so you can display different deprecations depending on different situations and the users will still get all the warnings:</p> <pre><code>var deprecate = require('depd')('my-cool-module')\n\nexports.weirdfunction = function () {\n  if (arguments.length &lt; 2) {\n    // calls with 0 or 1 args are deprecated\n    deprecate('weirdfunction args &lt; 2')\n  } else if (typeof arguments[0] !== 'string') {\n    // calls with non-string first argument are deprecated\n    deprecate('weirdfunction non-string first arg')\n  }\n}\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/depd/Readme/#deprecating-property-access","title":"Deprecating property access","text":"<p>This will display a deprecated message about \"oldprop\" being deprecated from \"my-module\" on STDERR when accessed. A deprecation will be displayed when setting the value and when getting the value.</p> <pre><code>var deprecate = require('depd')('my-cool-module')\n\nexports.oldprop = 'something'\n\n// message automatically derives from property name\ndeprecate.property(exports, 'oldprop')\n\n// explicit message\ndeprecate.property(exports, 'oldprop', 'oldprop &gt;= 0.10')\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/depd/Readme/#license","title":"License","text":"<p>MIT</p>"},{"location":"ejemplos/servidor/node_modules/destroy/","title":"Destroy","text":"<p>Destroy a stream.</p> <p>This module is meant to ensure a stream gets destroyed, handling different APIs and Node.js bugs.</p>"},{"location":"ejemplos/servidor/node_modules/destroy/#api","title":"API","text":"<pre><code>var destroy = require('destroy')\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/destroy/#destroystream","title":"destroy(stream)","text":"<p>Destroy the given stream. In most cases, this is identical to a simple <code>stream.destroy()</code> call. The rules are as follows for a given stream:</p> <ol> <li>If the <code>stream</code> is an instance of <code>ReadStream</code>, then call <code>stream.destroy()</code>      and add a listener to the <code>open</code> event to call <code>stream.close()</code> if it is      fired. This is for a Node.js bug that will leak a file descriptor if      <code>.destroy()</code> is called before <code>open</code>.</li> <li>If the <code>stream</code> is not an instance of <code>Stream</code>, then nothing happens.</li> <li>If the <code>stream</code> has a <code>.destroy()</code> method, then call it.</li> </ol> <p>The function returns the <code>stream</code> passed in as the argument.</p>"},{"location":"ejemplos/servidor/node_modules/destroy/#example","title":"Example","text":"<pre><code>var destroy = require('destroy')\n\nvar fs = require('fs')\nvar stream = fs.createReadStream('package.json')\n\n// ... and later\ndestroy(stream)\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/ee-first/","title":"EE First","text":"<p>Get the first event in a set of event emitters and event pairs, then clean up after itself.</p>"},{"location":"ejemplos/servidor/node_modules/ee-first/#install","title":"Install","text":"<pre><code>$ npm install ee-first\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/ee-first/#api","title":"API","text":"<pre><code>var first = require('ee-first')\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/ee-first/#firstarr-listener","title":"first(arr, listener)","text":"<p>Invoke <code>listener</code> on the first event from the list specified in <code>arr</code>. <code>arr</code> is an array of arrays, with each array in the format <code>[ee, ...event]</code>. <code>listener</code> will be called only once, the first time any of the given events are emitted. If <code>error</code> is one of the listened events, then if that fires first, the <code>listener</code> will be given the <code>err</code> argument.</p> <p>The <code>listener</code> is invoked as <code>listener(err, ee, event, args)</code>, where <code>err</code> is the first argument emitted from an <code>error</code> event, if applicable; <code>ee</code> is the event emitter that fired; <code>event</code> is the string event name that fired; and <code>args</code> is an array of the arguments that were emitted on the event.</p> <pre><code>var ee1 = new EventEmitter()\nvar ee2 = new EventEmitter()\n\nfirst([\n  [ee1, 'close', 'end', 'error'],\n  [ee2, 'error']\n], function (err, ee, event, args) {\n  // listener invoked\n})\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/ee-first/#cancel","title":".cancel()","text":"<p>The group of listeners can be cancelled before being invoked and have all the event listeners removed from the underlying event emitters.</p> <pre><code>var thunk = first([\n  [ee1, 'close', 'end', 'error'],\n  [ee2, 'error']\n], function (err, ee, event, args) {\n  // listener invoked\n})\n\n// cancel and clean up\nthunk.cancel()\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/encodeurl/","title":"encodeurl","text":"<p>Encode a URL to a percent-encoded form, excluding already-encoded sequences</p>"},{"location":"ejemplos/servidor/node_modules/encodeurl/#installation","title":"Installation","text":"<p>This is a Node.js module available through the npm registry. Installation is done using the <code>npm install</code> command:</p> <pre><code>$ npm install encodeurl\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/encodeurl/#api","title":"API","text":"<pre><code>var encodeUrl = require('encodeurl')\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/encodeurl/#encodeurlurl","title":"encodeUrl(url)","text":"<p>Encode a URL to a percent-encoded form, excluding already-encoded sequences.</p> <p>This function will take an already-encoded URL and encode all the non-URL code points (as UTF-8 byte sequences). This function will not encode the \"%\" character unless it is not part of a valid sequence (<code>%20</code> will be left as-is, but <code>%foo</code> will be encoded as <code>%25foo</code>).</p> <p>This encode is meant to be \"safe\" and does not throw errors. It will try as hard as it can to properly encode the given URL, including replacing any raw, unpaired surrogate pairs with the Unicode replacement character prior to encoding.</p> <p>This function is similar to the intrinsic function <code>encodeURI</code>, except it will not encode the <code>%</code> character if that is part of a valid sequence, will not encode <code>[</code> and <code>]</code> (for IPv6 hostnames) and will replace raw, unpaired surrogate pairs with the Unicode replacement character (instead of throwing).</p>"},{"location":"ejemplos/servidor/node_modules/encodeurl/#examples","title":"Examples","text":""},{"location":"ejemplos/servidor/node_modules/encodeurl/#encode-a-url-containing-user-controled-data","title":"Encode a URL containing user-controled data","text":"<pre><code>var encodeUrl = require('encodeurl')\nvar escapeHtml = require('escape-html')\n\nhttp.createServer(function onRequest (req, res) {\n  // get encoded form of inbound url\n  var url = encodeUrl(req.url)\n\n  // create html message\n  var body = '&lt;p&gt;Location ' + escapeHtml(url) + ' not found&lt;/p&gt;'\n\n  // send a 404\n  res.statusCode = 404\n  res.setHeader('Content-Type', 'text/html; charset=UTF-8')\n  res.setHeader('Content-Length', String(Buffer.byteLength(body, 'utf-8')))\n  res.end(body, 'utf-8')\n})\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/encodeurl/#encode-a-url-for-use-in-a-header-field","title":"Encode a URL for use in a header field","text":"<pre><code>var encodeUrl = require('encodeurl')\nvar escapeHtml = require('escape-html')\nvar url = require('url')\n\nhttp.createServer(function onRequest (req, res) {\n  // parse inbound url\n  var href = url.parse(req)\n\n  // set new host for redirect\n  href.host = 'localhost'\n  href.protocol = 'https:'\n  href.slashes = true\n\n  // create location header\n  var location = encodeUrl(url.format(href))\n\n  // create html message\n  var body = '&lt;p&gt;Redirecting to new site: ' + escapeHtml(location) + '&lt;/p&gt;'\n\n  // send a 301\n  res.statusCode = 301\n  res.setHeader('Content-Type', 'text/html; charset=UTF-8')\n  res.setHeader('Content-Length', String(Buffer.byteLength(body, 'utf-8')))\n  res.setHeader('Location', location)\n  res.end(body, 'utf-8')\n})\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/encodeurl/#testing","title":"Testing","text":"<pre><code>$ npm test\n$ npm run lint\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/encodeurl/#references","title":"References","text":"<ul> <li>RFC 3986: Uniform Resource Identifier (URI): Generic Syntax</li> <li>WHATWG URL Living Standard</li> </ul>"},{"location":"ejemplos/servidor/node_modules/encodeurl/#license","title":"License","text":"<p>MIT</p>"},{"location":"ejemplos/servidor/node_modules/encodeurl/HISTORY/","title":"1.0.2 / 2018-01-21","text":"<ul> <li>Fix encoding <code>%</code> as last character</li> </ul>"},{"location":"ejemplos/servidor/node_modules/encodeurl/HISTORY/#101-2016-06-09","title":"1.0.1 / 2016-06-09","text":"<ul> <li>Fix encoding unpaired surrogates at start/end of string</li> </ul>"},{"location":"ejemplos/servidor/node_modules/encodeurl/HISTORY/#100-2016-06-08","title":"1.0.0 / 2016-06-08","text":"<ul> <li>Initial release</li> </ul>"},{"location":"ejemplos/servidor/node_modules/escape-html/Readme/","title":"escape-html","text":"<p>Escape string for use in HTML</p>"},{"location":"ejemplos/servidor/node_modules/escape-html/Readme/#example","title":"Example","text":"<pre><code>var escape = require('escape-html');\nvar html = escape('foo &amp; bar');\n// -&gt; foo &amp;amp; bar\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/escape-html/Readme/#benchmark","title":"Benchmark","text":"<pre><code>$ npm run-script bench\n\n&gt; escape-html@1.0.3 bench nodejs-escape-html\n&gt; node benchmark/index.js\n\n\n  http_parser@1.0\n  node@0.10.33\n  v8@3.14.5.9\n  ares@1.9.0-DEV\n  uv@0.10.29\n  zlib@1.2.3\n  modules@11\n  openssl@1.0.1j\n\n  1 test completed.\n  2 tests completed.\n  3 tests completed.\n\n  no special characters    x 19,435,271 ops/sec \u00b10.85% (187 runs sampled)\n  single special character x  6,132,421 ops/sec \u00b10.67% (194 runs sampled)\n  many special characters  x  3,175,826 ops/sec \u00b10.65% (193 runs sampled)\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/escape-html/Readme/#license","title":"License","text":"<p>MIT</p>"},{"location":"ejemplos/servidor/node_modules/etag/","title":"etag","text":"<p>Create simple HTTP ETags</p> <p>This module generates HTTP ETags (as defined in RFC 7232) for use in HTTP responses.</p>"},{"location":"ejemplos/servidor/node_modules/etag/#installation","title":"Installation","text":"<p>This is a Node.js module available through the npm registry. Installation is done using the <code>npm install</code> command:</p> <pre><code>$ npm install etag\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/etag/#api","title":"API","text":"<pre><code>var etag = require('etag')\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/etag/#etagentity-options","title":"etag(entity, [options])","text":"<p>Generate a strong ETag for the given entity. This should be the complete body of the entity. Strings, <code>Buffer</code>s, and <code>fs.Stats</code> are accepted. By default, a strong ETag is generated except for <code>fs.Stats</code>, which will generate a weak ETag (this can be overwritten by <code>options.weak</code>).</p> <pre><code>res.setHeader('ETag', etag(body))\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/etag/#options","title":"Options","text":"<p><code>etag</code> accepts these properties in the options object.</p>"},{"location":"ejemplos/servidor/node_modules/etag/#weak","title":"weak","text":"<p>Specifies if the generated ETag will include the weak validator mark (that is, the leading <code>W/</code>). The actual entity tag is the same. The default value is <code>false</code>, unless the <code>entity</code> is <code>fs.Stats</code>, in which case it is <code>true</code>.</p>"},{"location":"ejemplos/servidor/node_modules/etag/#testing","title":"Testing","text":"<pre><code>$ npm test\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/etag/#benchmark","title":"Benchmark","text":"<pre><code>$ npm run-script bench\n\n&gt; etag@1.8.1 bench nodejs-etag\n&gt; node benchmark/index.js\n\n  http_parser@2.7.0\n  node@6.11.1\n  v8@5.1.281.103\n  uv@1.11.0\n  zlib@1.2.11\n  ares@1.10.1-DEV\n  icu@58.2\n  modules@48\n  openssl@1.0.2k\n\n&gt; node benchmark/body0-100b.js\n\n  100B body\n\n  4 tests completed.\n\n  buffer - strong x 258,647 ops/sec \u00b11.07% (180 runs sampled)\n  buffer - weak   x 263,812 ops/sec \u00b10.61% (184 runs sampled)\n  string - strong x 259,955 ops/sec \u00b11.19% (185 runs sampled)\n  string - weak   x 264,356 ops/sec \u00b11.09% (184 runs sampled)\n\n&gt; node benchmark/body1-1kb.js\n\n  1KB body\n\n  4 tests completed.\n\n  buffer - strong x 189,018 ops/sec \u00b11.12% (182 runs sampled)\n  buffer - weak   x 190,586 ops/sec \u00b10.81% (186 runs sampled)\n  string - strong x 144,272 ops/sec \u00b10.96% (188 runs sampled)\n  string - weak   x 145,380 ops/sec \u00b11.43% (187 runs sampled)\n\n&gt; node benchmark/body2-5kb.js\n\n  5KB body\n\n  4 tests completed.\n\n  buffer - strong x 92,435 ops/sec \u00b10.42% (188 runs sampled)\n  buffer - weak   x 92,373 ops/sec \u00b10.58% (189 runs sampled)\n  string - strong x 48,850 ops/sec \u00b10.56% (186 runs sampled)\n  string - weak   x 49,380 ops/sec \u00b10.56% (190 runs sampled)\n\n&gt; node benchmark/body3-10kb.js\n\n  10KB body\n\n  4 tests completed.\n\n  buffer - strong x 55,989 ops/sec \u00b10.93% (188 runs sampled)\n  buffer - weak   x 56,148 ops/sec \u00b10.55% (190 runs sampled)\n  string - strong x 27,345 ops/sec \u00b10.43% (188 runs sampled)\n  string - weak   x 27,496 ops/sec \u00b10.45% (190 runs sampled)\n\n&gt; node benchmark/body4-100kb.js\n\n  100KB body\n\n  4 tests completed.\n\n  buffer - strong x 7,083 ops/sec \u00b10.22% (190 runs sampled)\n  buffer - weak   x 7,115 ops/sec \u00b10.26% (191 runs sampled)\n  string - strong x 3,068 ops/sec \u00b10.34% (190 runs sampled)\n  string - weak   x 3,096 ops/sec \u00b10.35% (190 runs sampled)\n\n&gt; node benchmark/stats.js\n\n  stat\n\n  4 tests completed.\n\n  real - strong x 871,642 ops/sec \u00b10.34% (189 runs sampled)\n  real - weak   x 867,613 ops/sec \u00b10.39% (190 runs sampled)\n  fake - strong x 401,051 ops/sec \u00b10.40% (189 runs sampled)\n  fake - weak   x 400,100 ops/sec \u00b10.47% (188 runs sampled)\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/etag/#license","title":"License","text":"<p>MIT</p>"},{"location":"ejemplos/servidor/node_modules/etag/HISTORY/","title":"1.8.1 / 2017-09-12","text":"<ul> <li>perf: replace regular expression with substring</li> </ul>"},{"location":"ejemplos/servidor/node_modules/etag/HISTORY/#180-2017-02-18","title":"1.8.0 / 2017-02-18","text":"<ul> <li>Use SHA1 instead of MD5 for ETag hashing<ul> <li>Improves performance for larger entities</li> <li>Works with FIPS 140-2 OpenSSL configuration</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/etag/HISTORY/#170-2015-06-08","title":"1.7.0 / 2015-06-08","text":"<ul> <li>Always include entity length in ETags for hash length extensions</li> <li>Generate non-Stats ETags using MD5 only (no longer CRC32)</li> <li>Improve stat performance by removing hashing</li> <li>Remove base64 padding in ETags to shorten</li> <li>Use MD5 instead of MD4 in weak ETags over 1KB</li> </ul>"},{"location":"ejemplos/servidor/node_modules/etag/HISTORY/#160-2015-05-10","title":"1.6.0 / 2015-05-10","text":"<ul> <li>Improve support for JXcore</li> <li>Remove requirement of <code>atime</code> in the stats object</li> <li>Support \"fake\" stats objects in environments without <code>fs</code></li> </ul>"},{"location":"ejemplos/servidor/node_modules/etag/HISTORY/#151-2014-11-19","title":"1.5.1 / 2014-11-19","text":"<ul> <li>deps: crc@3.2.1<ul> <li>Minor fixes</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/etag/HISTORY/#150-2014-10-14","title":"1.5.0 / 2014-10-14","text":"<ul> <li>Improve string performance</li> <li>Slightly improve speed for weak ETags over 1KB</li> </ul>"},{"location":"ejemplos/servidor/node_modules/etag/HISTORY/#140-2014-09-21","title":"1.4.0 / 2014-09-21","text":"<ul> <li>Support \"fake\" stats objects</li> <li>Support Node.js 0.6</li> </ul>"},{"location":"ejemplos/servidor/node_modules/etag/HISTORY/#131-2014-09-14","title":"1.3.1 / 2014-09-14","text":"<ul> <li>Use the (new and improved) <code>crc</code> for crc32</li> </ul>"},{"location":"ejemplos/servidor/node_modules/etag/HISTORY/#130-2014-08-29","title":"1.3.0 / 2014-08-29","text":"<ul> <li>Default strings to strong ETags</li> <li>Improve speed for weak ETags over 1KB</li> </ul>"},{"location":"ejemplos/servidor/node_modules/etag/HISTORY/#121-2014-08-29","title":"1.2.1 / 2014-08-29","text":"<ul> <li>Use the (much faster) <code>buffer-crc32</code> for crc32</li> </ul>"},{"location":"ejemplos/servidor/node_modules/etag/HISTORY/#120-2014-08-24","title":"1.2.0 / 2014-08-24","text":"<ul> <li>Add support for file stat objects</li> </ul>"},{"location":"ejemplos/servidor/node_modules/etag/HISTORY/#110-2014-08-24","title":"1.1.0 / 2014-08-24","text":"<ul> <li>Add fast-path for empty entity</li> <li>Add weak ETag generation</li> <li>Shrink size of generated ETags</li> </ul>"},{"location":"ejemplos/servidor/node_modules/etag/HISTORY/#101-2014-08-24","title":"1.0.1 / 2014-08-24","text":"<ul> <li>Fix behavior of string containing Unicode</li> </ul>"},{"location":"ejemplos/servidor/node_modules/etag/HISTORY/#100-2014-05-18","title":"1.0.0 / 2014-05-18","text":"<ul> <li>Initial release</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/","title":"4.17.1 / 2019-05-25","text":"<ul> <li>Revert \"Improve error message for <code>null</code>/<code>undefined</code> to <code>res.status</code>\"</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#4170-2019-05-16","title":"4.17.0 / 2019-05-16","text":"<ul> <li>Add <code>express.raw</code> to parse bodies into <code>Buffer</code></li> <li>Add <code>express.text</code> to parse bodies into string</li> <li>Improve error message for non-strings to <code>res.sendFile</code></li> <li>Improve error message for <code>null</code>/<code>undefined</code> to <code>res.status</code></li> <li>Support multiple hosts in <code>X-Forwarded-Host</code></li> <li>deps: accepts@~1.3.7</li> <li>deps: body-parser@1.19.0<ul> <li>Add encoding MIK</li> <li>Add petabyte (<code>pb</code>) support</li> <li>Fix parsing array brackets after index</li> <li>deps: bytes@3.1.0</li> <li>deps: http-errors@1.7.2</li> <li>deps: iconv-lite@0.4.24</li> <li>deps: qs@6.7.0</li> <li>deps: raw-body@2.4.0</li> <li>deps: type-is@~1.6.17</li> </ul> </li> <li>deps: content-disposition@0.5.3</li> <li>deps: cookie@0.4.0<ul> <li>Add <code>SameSite=None</code> support</li> </ul> </li> <li>deps: finalhandler@~1.1.2<ul> <li>Set stricter <code>Content-Security-Policy</code> header</li> <li>deps: parseurl@~1.3.3</li> <li>deps: statuses@~1.5.0</li> </ul> </li> <li>deps: parseurl@~1.3.3</li> <li>deps: proxy-addr@~2.0.5<ul> <li>deps: ipaddr.js@1.9.0</li> </ul> </li> <li>deps: qs@6.7.0<ul> <li>Fix parsing array brackets after index</li> </ul> </li> <li>deps: range-parser@~1.2.1</li> <li>deps: send@0.17.1<ul> <li>Set stricter CSP header in redirect &amp; error responses</li> <li>deps: http-errors@~1.7.2</li> <li>deps: mime@1.6.0</li> <li>deps: ms@2.1.1</li> <li>deps: range-parser@~1.2.1</li> <li>deps: statuses@~1.5.0</li> <li>perf: remove redundant <code>path.normalize</code> call</li> </ul> </li> <li>deps: serve-static@1.14.1<ul> <li>Set stricter CSP header in redirect response</li> <li>deps: parseurl@~1.3.3</li> <li>deps: send@0.17.1</li> </ul> </li> <li>deps: setprototypeof@1.1.1</li> <li>deps: statuses@~1.5.0<ul> <li>Add <code>103 Early Hints</code></li> </ul> </li> <li>deps: type-is@~1.6.18<ul> <li>deps: mime-types@~2.1.24</li> <li>perf: prevent internal <code>throw</code> on invalid type</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#4164-2018-10-10","title":"4.16.4 / 2018-10-10","text":"<ul> <li>Fix issue where <code>\"Request aborted\"</code> may be logged in <code>res.sendfile</code></li> <li>Fix JSDoc for <code>Router</code> constructor</li> <li>deps: body-parser@1.18.3<ul> <li>Fix deprecation warnings on Node.js 10+</li> <li>Fix stack trace for strict json parse error</li> <li>deps: depd@~1.1.2</li> <li>deps: http-errors@~1.6.3</li> <li>deps: iconv-lite@0.4.23</li> <li>deps: qs@6.5.2</li> <li>deps: raw-body@2.3.3</li> <li>deps: type-is@~1.6.16</li> </ul> </li> <li>deps: proxy-addr@~2.0.4<ul> <li>deps: ipaddr.js@1.8.0</li> </ul> </li> <li>deps: qs@6.5.2</li> <li>deps: safe-buffer@5.1.2</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#4163-2018-03-12","title":"4.16.3 / 2018-03-12","text":"<ul> <li>deps: accepts@~1.3.5<ul> <li>deps: mime-types@~2.1.18</li> </ul> </li> <li>deps: depd@~1.1.2<ul> <li>perf: remove argument reassignment</li> </ul> </li> <li>deps: encodeurl@~1.0.2<ul> <li>Fix encoding <code>%</code> as last character</li> </ul> </li> <li>deps: finalhandler@1.1.1<ul> <li>Fix 404 output for bad / missing pathnames</li> <li>deps: encodeurl@~1.0.2</li> <li>deps: statuses@~1.4.0</li> </ul> </li> <li>deps: proxy-addr@~2.0.3<ul> <li>deps: ipaddr.js@1.6.0</li> </ul> </li> <li>deps: send@0.16.2<ul> <li>Fix incorrect end tag in default error &amp; redirects</li> <li>deps: depd@~1.1.2</li> <li>deps: encodeurl@~1.0.2</li> <li>deps: statuses@~1.4.0</li> </ul> </li> <li>deps: serve-static@1.13.2<ul> <li>Fix incorrect end tag in redirects</li> <li>deps: encodeurl@~1.0.2</li> <li>deps: send@0.16.2</li> </ul> </li> <li>deps: statuses@~1.4.0</li> <li>deps: type-is@~1.6.16<ul> <li>deps: mime-types@~2.1.18</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#4162-2017-10-09","title":"4.16.2 / 2017-10-09","text":"<ul> <li>Fix <code>TypeError</code> in <code>res.send</code> when given <code>Buffer</code> and <code>ETag</code> header set</li> <li>perf: skip parsing of entire <code>X-Forwarded-Proto</code> header</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#4161-2017-09-29","title":"4.16.1 / 2017-09-29","text":"<ul> <li>deps: send@0.16.1</li> <li>deps: serve-static@1.13.1<ul> <li>Fix regression when <code>root</code> is incorrectly set to a file</li> <li>deps: send@0.16.1</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#4160-2017-09-28","title":"4.16.0 / 2017-09-28","text":"<ul> <li>Add <code>\"json escape\"</code> setting for <code>res.json</code> and <code>res.jsonp</code></li> <li>Add <code>express.json</code> and <code>express.urlencoded</code> to parse bodies</li> <li>Add <code>options</code> argument to <code>res.download</code></li> <li>Improve error message when autoloading invalid view engine</li> <li>Improve error messages when non-function provided as middleware</li> <li>Skip <code>Buffer</code> encoding when not generating ETag for small response</li> <li>Use <code>safe-buffer</code> for improved Buffer API</li> <li>deps: accepts@~1.3.4<ul> <li>deps: mime-types@~2.1.16</li> </ul> </li> <li>deps: content-type@~1.0.4<ul> <li>perf: remove argument reassignment</li> <li>perf: skip parameter parsing when no parameters</li> </ul> </li> <li>deps: etag@~1.8.1<ul> <li>perf: replace regular expression with substring</li> </ul> </li> <li>deps: finalhandler@1.1.0<ul> <li>Use <code>res.headersSent</code> when available</li> </ul> </li> <li>deps: parseurl@~1.3.2<ul> <li>perf: reduce overhead for full URLs</li> <li>perf: unroll the \"fast-path\" <code>RegExp</code></li> </ul> </li> <li>deps: proxy-addr@~2.0.2<ul> <li>Fix trimming leading / trailing OWS in <code>X-Forwarded-For</code></li> <li>deps: forwarded@~0.1.2</li> <li>deps: ipaddr.js@1.5.2</li> <li>perf: reduce overhead when no <code>X-Forwarded-For</code> header</li> </ul> </li> <li>deps: qs@6.5.1<ul> <li>Fix parsing &amp; compacting very deep objects</li> </ul> </li> <li>deps: send@0.16.0<ul> <li>Add 70 new types for file extensions</li> <li>Add <code>immutable</code> option</li> <li>Fix missing <code>&lt;/html&gt;</code> in default error &amp; redirects</li> <li>Set charset as \"UTF-8\" for .js and .json</li> <li>Use instance methods on steam to check for listeners</li> <li>deps: mime@1.4.1</li> <li>perf: improve path validation speed</li> </ul> </li> <li>deps: serve-static@1.13.0<ul> <li>Add 70 new types for file extensions</li> <li>Add <code>immutable</code> option</li> <li>Set charset as \"UTF-8\" for .js and .json</li> <li>deps: send@0.16.0</li> </ul> </li> <li>deps: setprototypeof@1.1.0</li> <li>deps: utils-merge@1.0.1</li> <li>deps: vary@~1.1.2<ul> <li>perf: improve header token parsing speed</li> </ul> </li> <li>perf: re-use options object when generating ETags</li> <li>perf: remove dead <code>.charset</code> set in <code>res.jsonp</code></li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#4155-2017-09-24","title":"4.15.5 / 2017-09-24","text":"<ul> <li>deps: debug@2.6.9</li> <li>deps: finalhandler@~1.0.6<ul> <li>deps: debug@2.6.9</li> <li>deps: parseurl@~1.3.2</li> </ul> </li> <li>deps: fresh@0.5.2<ul> <li>Fix handling of modified headers with invalid dates</li> <li>perf: improve ETag match loop</li> <li>perf: improve <code>If-None-Match</code> token parsing</li> </ul> </li> <li>deps: send@0.15.6<ul> <li>Fix handling of modified headers with invalid dates</li> <li>deps: debug@2.6.9</li> <li>deps: etag@~1.8.1</li> <li>deps: fresh@0.5.2</li> <li>perf: improve <code>If-Match</code> token parsing</li> </ul> </li> <li>deps: serve-static@1.12.6<ul> <li>deps: parseurl@~1.3.2</li> <li>deps: send@0.15.6</li> <li>perf: improve slash collapsing</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#4154-2017-08-06","title":"4.15.4 / 2017-08-06","text":"<ul> <li>deps: debug@2.6.8</li> <li>deps: depd@~1.1.1<ul> <li>Remove unnecessary <code>Buffer</code> loading</li> </ul> </li> <li>deps: finalhandler@~1.0.4<ul> <li>deps: debug@2.6.8</li> </ul> </li> <li>deps: proxy-addr@~1.1.5<ul> <li>Fix array argument being altered</li> <li>deps: ipaddr.js@1.4.0</li> </ul> </li> <li>deps: qs@6.5.0</li> <li>deps: send@0.15.4<ul> <li>deps: debug@2.6.8</li> <li>deps: depd@~1.1.1</li> <li>deps: http-errors@~1.6.2</li> </ul> </li> <li>deps: serve-static@1.12.4<ul> <li>deps: send@0.15.4</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#4153-2017-05-16","title":"4.15.3 / 2017-05-16","text":"<ul> <li>Fix error when <code>res.set</code> cannot add charset to <code>Content-Type</code></li> <li>deps: debug@2.6.7<ul> <li>Fix <code>DEBUG_MAX_ARRAY_LENGTH</code></li> <li>deps: ms@2.0.0</li> </ul> </li> <li>deps: finalhandler@~1.0.3<ul> <li>Fix missing <code>&lt;/html&gt;</code> in HTML document</li> <li>deps: debug@2.6.7</li> </ul> </li> <li>deps: proxy-addr@~1.1.4<ul> <li>deps: ipaddr.js@1.3.0</li> </ul> </li> <li>deps: send@0.15.3<ul> <li>deps: debug@2.6.7</li> <li>deps: ms@2.0.0</li> </ul> </li> <li>deps: serve-static@1.12.3<ul> <li>deps: send@0.15.3</li> </ul> </li> <li>deps: type-is@~1.6.15<ul> <li>deps: mime-types@~2.1.15</li> </ul> </li> <li>deps: vary@~1.1.1<ul> <li>perf: hoist regular expression</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#4152-2017-03-06","title":"4.15.2 / 2017-03-06","text":"<ul> <li>deps: qs@6.4.0<ul> <li>Fix regression parsing keys starting with <code>[</code></li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#4151-2017-03-05","title":"4.15.1 / 2017-03-05","text":"<ul> <li>deps: send@0.15.1<ul> <li>Fix issue when <code>Date.parse</code> does not return <code>NaN</code> on invalid date</li> <li>Fix strict violation in broken environments</li> </ul> </li> <li>deps: serve-static@1.12.1<ul> <li>Fix issue when <code>Date.parse</code> does not return <code>NaN</code> on invalid date</li> <li>deps: send@0.15.1</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#4150-2017-03-01","title":"4.15.0 / 2017-03-01","text":"<ul> <li>Add debug message when loading view engine</li> <li>Add <code>next(\"router\")</code> to exit from router</li> <li>Fix case where <code>router.use</code> skipped requests routes did not</li> <li>Remove usage of <code>res._headers</code> private field<ul> <li>Improves compatibility with Node.js 8 nightly</li> </ul> </li> <li>Skip routing when <code>req.url</code> is not set</li> <li>Use <code>%o</code> in path debug to tell types apart</li> <li>Use <code>Object.create</code> to setup request &amp; response prototypes</li> <li>Use <code>setprototypeof</code> module to replace <code>__proto__</code> setting</li> <li>Use <code>statuses</code> instead of <code>http</code> module for status messages</li> <li>deps: debug@2.6.1<ul> <li>Allow colors in workers</li> <li>Deprecated <code>DEBUG_FD</code> environment variable set to <code>3</code> or higher</li> <li>Fix error when running under React Native</li> <li>Use same color for same namespace</li> <li>deps: ms@0.7.2</li> </ul> </li> <li>deps: etag@~1.8.0<ul> <li>Use SHA1 instead of MD5 for ETag hashing</li> <li>Works with FIPS 140-2 OpenSSL configuration</li> </ul> </li> <li>deps: finalhandler@~1.0.0<ul> <li>Fix exception when <code>err</code> cannot be converted to a string</li> <li>Fully URL-encode the pathname in the 404</li> <li>Only include the pathname in the 404 message</li> <li>Send complete HTML document</li> <li>Set <code>Content-Security-Policy: default-src 'self'</code> header</li> <li>deps: debug@2.6.1</li> </ul> </li> <li>deps: fresh@0.5.0<ul> <li>Fix false detection of <code>no-cache</code> request directive</li> <li>Fix incorrect result when <code>If-None-Match</code> has both <code>*</code> and ETags</li> <li>Fix weak <code>ETag</code> matching to match spec</li> <li>perf: delay reading header values until needed</li> <li>perf: enable strict mode</li> <li>perf: hoist regular expressions</li> <li>perf: remove duplicate conditional</li> <li>perf: remove unnecessary boolean coercions</li> <li>perf: skip checking modified time if ETag check failed</li> <li>perf: skip parsing <code>If-None-Match</code> when no <code>ETag</code> header</li> <li>perf: use <code>Date.parse</code> instead of <code>new Date</code></li> </ul> </li> <li>deps: qs@6.3.1<ul> <li>Fix array parsing from skipping empty values</li> <li>Fix compacting nested arrays</li> </ul> </li> <li>deps: send@0.15.0<ul> <li>Fix false detection of <code>no-cache</code> request directive</li> <li>Fix incorrect result when <code>If-None-Match</code> has both <code>*</code> and ETags</li> <li>Fix weak <code>ETag</code> matching to match spec</li> <li>Remove usage of <code>res._headers</code> private field</li> <li>Support <code>If-Match</code> and <code>If-Unmodified-Since</code> headers</li> <li>Use <code>res.getHeaderNames()</code> when available</li> <li>Use <code>res.headersSent</code> when available</li> <li>deps: debug@2.6.1</li> <li>deps: etag@~1.8.0</li> <li>deps: fresh@0.5.0</li> <li>deps: http-errors@~1.6.1</li> </ul> </li> <li>deps: serve-static@1.12.0<ul> <li>Fix false detection of <code>no-cache</code> request directive</li> <li>Fix incorrect result when <code>If-None-Match</code> has both <code>*</code> and ETags</li> <li>Fix weak <code>ETag</code> matching to match spec</li> <li>Remove usage of <code>res._headers</code> private field</li> <li>Send complete HTML document in redirect response</li> <li>Set default CSP header in redirect response</li> <li>Support <code>If-Match</code> and <code>If-Unmodified-Since</code> headers</li> <li>Use <code>res.getHeaderNames()</code> when available</li> <li>Use <code>res.headersSent</code> when available</li> <li>deps: send@0.15.0</li> </ul> </li> <li>perf: add fast match path for <code>*</code> route</li> <li>perf: improve <code>req.ips</code> performance</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#4141-2017-01-28","title":"4.14.1 / 2017-01-28","text":"<ul> <li>deps: content-disposition@0.5.2</li> <li>deps: finalhandler@0.5.1<ul> <li>Fix exception when <code>err.headers</code> is not an object</li> <li>deps: statuses@~1.3.1</li> <li>perf: hoist regular expressions</li> <li>perf: remove duplicate validation path</li> </ul> </li> <li>deps: proxy-addr@~1.1.3<ul> <li>deps: ipaddr.js@1.2.0</li> </ul> </li> <li>deps: send@0.14.2<ul> <li>deps: http-errors@~1.5.1</li> <li>deps: ms@0.7.2</li> <li>deps: statuses@~1.3.1</li> </ul> </li> <li>deps: serve-static@~1.11.2<ul> <li>deps: send@0.14.2</li> </ul> </li> <li>deps: type-is@~1.6.14<ul> <li>deps: mime-types@~2.1.13</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#4140-2016-06-16","title":"4.14.0 / 2016-06-16","text":"<ul> <li>Add <code>acceptRanges</code> option to <code>res.sendFile</code>/<code>res.sendfile</code></li> <li>Add <code>cacheControl</code> option to <code>res.sendFile</code>/<code>res.sendfile</code></li> <li>Add <code>options</code> argument to <code>req.range</code><ul> <li>Includes the <code>combine</code> option</li> </ul> </li> <li>Encode URL in <code>res.location</code>/<code>res.redirect</code> if not already encoded</li> <li>Fix some redirect handling in <code>res.sendFile</code>/<code>res.sendfile</code></li> <li>Fix Windows absolute path check using forward slashes</li> <li>Improve error with invalid arguments to <code>req.get()</code></li> <li>Improve performance for <code>res.json</code>/<code>res.jsonp</code> in most cases</li> <li>Improve <code>Range</code> header handling in <code>res.sendFile</code>/<code>res.sendfile</code></li> <li>deps: accepts@~1.3.3<ul> <li>Fix including type extensions in parameters in <code>Accept</code> parsing</li> <li>Fix parsing <code>Accept</code> parameters with quoted equals</li> <li>Fix parsing <code>Accept</code> parameters with quoted semicolons</li> <li>Many performance improvements</li> <li>deps: mime-types@~2.1.11</li> <li>deps: negotiator@0.6.1</li> </ul> </li> <li>deps: content-type@~1.0.2<ul> <li>perf: enable strict mode</li> </ul> </li> <li>deps: cookie@0.3.1<ul> <li>Add <code>sameSite</code> option</li> <li>Fix cookie <code>Max-Age</code> to never be a floating point number</li> <li>Improve error message when <code>encode</code> is not a function</li> <li>Improve error message when <code>expires</code> is not a <code>Date</code></li> <li>Throw better error for invalid argument to parse</li> <li>Throw on invalid values provided to <code>serialize</code></li> <li>perf: enable strict mode</li> <li>perf: hoist regular expression</li> <li>perf: use for loop in parse</li> <li>perf: use string concatenation for serialization</li> </ul> </li> <li>deps: finalhandler@0.5.0<ul> <li>Change invalid or non-numeric status code to 500</li> <li>Overwrite status message to match set status code</li> <li>Prefer <code>err.statusCode</code> if <code>err.status</code> is invalid</li> <li>Set response headers from <code>err.headers</code> object</li> <li>Use <code>statuses</code> instead of <code>http</code> module for status messages</li> </ul> </li> <li>deps: proxy-addr@~1.1.2<ul> <li>Fix accepting various invalid netmasks</li> <li>Fix IPv6-mapped IPv4 validation edge cases</li> <li>IPv4 netmasks must be contiguous</li> <li>IPv6 addresses cannot be used as a netmask</li> <li>deps: ipaddr.js@1.1.1</li> </ul> </li> <li>deps: qs@6.2.0<ul> <li>Add <code>decoder</code> option in <code>parse</code> function</li> </ul> </li> <li>deps: range-parser@~1.2.0<ul> <li>Add <code>combine</code> option to combine overlapping ranges</li> <li>Fix incorrectly returning -1 when there is at least one valid range</li> <li>perf: remove internal function</li> </ul> </li> <li>deps: send@0.14.1<ul> <li>Add <code>acceptRanges</code> option</li> <li>Add <code>cacheControl</code> option</li> <li>Attempt to combine multiple ranges into single range</li> <li>Correctly inherit from <code>Stream</code> class</li> <li>Fix <code>Content-Range</code> header in 416 responses when using <code>start</code>/<code>end</code> options</li> <li>Fix <code>Content-Range</code> header missing from default 416 responses</li> <li>Fix redirect error when <code>path</code> contains raw non-URL characters</li> <li>Fix redirect when <code>path</code> starts with multiple forward slashes</li> <li>Ignore non-byte <code>Range</code> headers</li> <li>deps: http-errors@~1.5.0</li> <li>deps: range-parser@~1.2.0</li> <li>deps: statuses@~1.3.0</li> <li>perf: remove argument reassignment</li> </ul> </li> <li>deps: serve-static@~1.11.1<ul> <li>Add <code>acceptRanges</code> option</li> <li>Add <code>cacheControl</code> option</li> <li>Attempt to combine multiple ranges into single range</li> <li>Fix redirect error when <code>req.url</code> contains raw non-URL characters</li> <li>Ignore non-byte <code>Range</code> headers</li> <li>Use status code 301 for redirects</li> <li>deps: send@0.14.1</li> </ul> </li> <li>deps: type-is@~1.6.13<ul> <li>Fix type error when given invalid type to match against</li> <li>deps: mime-types@~2.1.11</li> </ul> </li> <li>deps: vary@~1.1.0<ul> <li>Only accept valid field names in the <code>field</code> argument</li> </ul> </li> <li>perf: use strict equality when possible</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#4134-2016-01-21","title":"4.13.4 / 2016-01-21","text":"<ul> <li>deps: content-disposition@0.5.1<ul> <li>perf: enable strict mode</li> </ul> </li> <li>deps: cookie@0.1.5<ul> <li>Throw on invalid values provided to <code>serialize</code></li> </ul> </li> <li>deps: depd@~1.1.0<ul> <li>Support web browser loading</li> <li>perf: enable strict mode</li> </ul> </li> <li>deps: escape-html@~1.0.3<ul> <li>perf: enable strict mode</li> <li>perf: optimize string replacement</li> <li>perf: use faster string coercion</li> </ul> </li> <li>deps: finalhandler@0.4.1<ul> <li>deps: escape-html@~1.0.3</li> </ul> </li> <li>deps: merge-descriptors@1.0.1<ul> <li>perf: enable strict mode</li> </ul> </li> <li>deps: methods@~1.1.2<ul> <li>perf: enable strict mode</li> </ul> </li> <li>deps: parseurl@~1.3.1<ul> <li>perf: enable strict mode</li> </ul> </li> <li>deps: proxy-addr@~1.0.10<ul> <li>deps: ipaddr.js@1.0.5</li> <li>perf: enable strict mode</li> </ul> </li> <li>deps: range-parser@~1.0.3<ul> <li>perf: enable strict mode</li> </ul> </li> <li>deps: send@0.13.1<ul> <li>deps: depd@~1.1.0</li> <li>deps: destroy@~1.0.4</li> <li>deps: escape-html@~1.0.3</li> <li>deps: range-parser@~1.0.3</li> </ul> </li> <li>deps: serve-static@~1.10.2<ul> <li>deps: escape-html@~1.0.3</li> <li>deps: parseurl@~1.3.0</li> <li>deps: send@0.13.1</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#4133-2015-08-02","title":"4.13.3 / 2015-08-02","text":"<ul> <li>Fix infinite loop condition using <code>mergeParams: true</code></li> <li>Fix inner numeric indices incorrectly altering parent <code>req.params</code></li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#4132-2015-07-31","title":"4.13.2 / 2015-07-31","text":"<ul> <li>deps: accepts@~1.2.12<ul> <li>deps: mime-types@~2.1.4</li> </ul> </li> <li>deps: array-flatten@1.1.1<ul> <li>perf: enable strict mode</li> </ul> </li> <li>deps: path-to-regexp@0.1.7<ul> <li>Fix regression with escaped round brackets and matching groups</li> </ul> </li> <li>deps: type-is@~1.6.6<ul> <li>deps: mime-types@~2.1.4</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#4131-2015-07-05","title":"4.13.1 / 2015-07-05","text":"<ul> <li>deps: accepts@~1.2.10<ul> <li>deps: mime-types@~2.1.2</li> </ul> </li> <li>deps: qs@4.0.0<ul> <li>Fix dropping parameters like <code>hasOwnProperty</code></li> <li>Fix various parsing edge cases</li> </ul> </li> <li>deps: type-is@~1.6.4<ul> <li>deps: mime-types@~2.1.2</li> <li>perf: enable strict mode</li> <li>perf: remove argument reassignment</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#4130-2015-06-20","title":"4.13.0 / 2015-06-20","text":"<ul> <li>Add settings to debug output</li> <li>Fix <code>res.format</code> error when only <code>default</code> provided</li> <li>Fix issue where <code>next('route')</code> in <code>app.param</code> would incorrectly skip values</li> <li>Fix hiding platform issues with <code>decodeURIComponent</code><ul> <li>Only <code>URIError</code>s are a 400</li> </ul> </li> <li>Fix using <code>*</code> before params in routes</li> <li>Fix using capture groups before params in routes</li> <li>Simplify <code>res.cookie</code> to call <code>res.append</code></li> <li>Use <code>array-flatten</code> module for flattening arrays</li> <li>deps: accepts@~1.2.9<ul> <li>deps: mime-types@~2.1.1</li> <li>perf: avoid argument reassignment &amp; argument slice</li> <li>perf: avoid negotiator recursive construction</li> <li>perf: enable strict mode</li> <li>perf: remove unnecessary bitwise operator</li> </ul> </li> <li>deps: cookie@0.1.3<ul> <li>perf: deduce the scope of try-catch deopt</li> <li>perf: remove argument reassignments</li> </ul> </li> <li>deps: escape-html@1.0.2</li> <li>deps: etag@~1.7.0<ul> <li>Always include entity length in ETags for hash length extensions</li> <li>Generate non-Stats ETags using MD5 only (no longer CRC32)</li> <li>Improve stat performance by removing hashing</li> <li>Improve support for JXcore</li> <li>Remove base64 padding in ETags to shorten</li> <li>Support \"fake\" stats objects in environments without fs</li> <li>Use MD5 instead of MD4 in weak ETags over 1KB</li> </ul> </li> <li>deps: finalhandler@0.4.0<ul> <li>Fix a false-positive when unpiping in Node.js 0.8</li> <li>Support <code>statusCode</code> property on <code>Error</code> objects</li> <li>Use <code>unpipe</code> module for unpiping requests</li> <li>deps: escape-html@1.0.2</li> <li>deps: on-finished@~2.3.0</li> <li>perf: enable strict mode</li> <li>perf: remove argument reassignment</li> </ul> </li> <li>deps: fresh@0.3.0<ul> <li>Add weak <code>ETag</code> matching support</li> </ul> </li> <li>deps: on-finished@~2.3.0<ul> <li>Add defined behavior for HTTP <code>CONNECT</code> requests</li> <li>Add defined behavior for HTTP <code>Upgrade</code> requests</li> <li>deps: ee-first@1.1.1</li> </ul> </li> <li>deps: path-to-regexp@0.1.6</li> <li>deps: send@0.13.0<ul> <li>Allow Node.js HTTP server to set <code>Date</code> response header</li> <li>Fix incorrectly removing <code>Content-Location</code> on 304 response</li> <li>Improve the default redirect response headers</li> <li>Send appropriate headers on default error response</li> <li>Use <code>http-errors</code> for standard emitted errors</li> <li>Use <code>statuses</code> instead of <code>http</code> module for status messages</li> <li>deps: escape-html@1.0.2</li> <li>deps: etag@~1.7.0</li> <li>deps: fresh@0.3.0</li> <li>deps: on-finished@~2.3.0</li> <li>perf: enable strict mode</li> <li>perf: remove unnecessary array allocations</li> </ul> </li> <li>deps: serve-static@~1.10.0<ul> <li>Add <code>fallthrough</code> option</li> <li>Fix reading options from options prototype</li> <li>Improve the default redirect response headers</li> <li>Malformed URLs now <code>next()</code> instead of 400</li> <li>deps: escape-html@1.0.2</li> <li>deps: send@0.13.0</li> <li>perf: enable strict mode</li> <li>perf: remove argument reassignment</li> </ul> </li> <li>deps: type-is@~1.6.3<ul> <li>deps: mime-types@~2.1.1</li> <li>perf: reduce try block size</li> <li>perf: remove bitwise operations</li> </ul> </li> <li>perf: enable strict mode</li> <li>perf: isolate <code>app.render</code> try block</li> <li>perf: remove argument reassignments in application</li> <li>perf: remove argument reassignments in request prototype</li> <li>perf: remove argument reassignments in response prototype</li> <li>perf: remove argument reassignments in routing</li> <li>perf: remove argument reassignments in <code>View</code></li> <li>perf: skip attempting to decode zero length string</li> <li>perf: use saved reference to <code>http.STATUS_CODES</code></li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#4124-2015-05-17","title":"4.12.4 / 2015-05-17","text":"<ul> <li>deps: accepts@~1.2.7<ul> <li>deps: mime-types@~2.0.11</li> <li>deps: negotiator@0.5.3</li> </ul> </li> <li>deps: debug@~2.2.0<ul> <li>deps: ms@0.7.1</li> </ul> </li> <li>deps: depd@~1.0.1</li> <li>deps: etag@~1.6.0<ul> <li>Improve support for JXcore</li> <li>Support \"fake\" stats objects in environments without <code>fs</code></li> </ul> </li> <li>deps: finalhandler@0.3.6<ul> <li>deps: debug@~2.2.0</li> <li>deps: on-finished@~2.2.1</li> </ul> </li> <li>deps: on-finished@~2.2.1<ul> <li>Fix <code>isFinished(req)</code> when data buffered</li> </ul> </li> <li>deps: proxy-addr@~1.0.8<ul> <li>deps: ipaddr.js@1.0.1</li> </ul> </li> <li>deps: qs@2.4.2</li> <li>Fix allowing parameters like <code>constructor</code></li> <li>deps: send@0.12.3<ul> <li>deps: debug@~2.2.0</li> <li>deps: depd@~1.0.1</li> <li>deps: etag@~1.6.0</li> <li>deps: ms@0.7.1</li> <li>deps: on-finished@~2.2.1</li> </ul> </li> <li>deps: serve-static@~1.9.3<ul> <li>deps: send@0.12.3</li> </ul> </li> <li>deps: type-is@~1.6.2<ul> <li>deps: mime-types@~2.0.11</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#4123-2015-03-17","title":"4.12.3 / 2015-03-17","text":"<ul> <li>deps: accepts@~1.2.5<ul> <li>deps: mime-types@~2.0.10</li> </ul> </li> <li>deps: debug@~2.1.3<ul> <li>Fix high intensity foreground color for bold</li> <li>deps: ms@0.7.0</li> </ul> </li> <li>deps: finalhandler@0.3.4<ul> <li>deps: debug@~2.1.3</li> </ul> </li> <li>deps: proxy-addr@~1.0.7<ul> <li>deps: ipaddr.js@0.1.9</li> </ul> </li> <li>deps: qs@2.4.1<ul> <li>Fix error when parameter <code>hasOwnProperty</code> is present</li> </ul> </li> <li>deps: send@0.12.2<ul> <li>Throw errors early for invalid <code>extensions</code> or <code>index</code> options</li> <li>deps: debug@~2.1.3</li> </ul> </li> <li>deps: serve-static@~1.9.2<ul> <li>deps: send@0.12.2</li> </ul> </li> <li>deps: type-is@~1.6.1<ul> <li>deps: mime-types@~2.0.10</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#4122-2015-03-02","title":"4.12.2 / 2015-03-02","text":"<ul> <li>Fix regression where <code>\"Request aborted\"</code> is logged using <code>res.sendFile</code></li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#4121-2015-03-01","title":"4.12.1 / 2015-03-01","text":"<ul> <li>Fix constructing application with non-configurable prototype properties</li> <li>Fix <code>ECONNRESET</code> errors from <code>res.sendFile</code> usage</li> <li>Fix <code>req.host</code> when using \"trust proxy\" hops count</li> <li>Fix <code>req.protocol</code>/<code>req.secure</code> when using \"trust proxy\" hops count</li> <li>Fix wrong <code>code</code> on aborted connections from <code>res.sendFile</code></li> <li>deps: merge-descriptors@1.0.0</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#4120-2015-02-23","title":"4.12.0 / 2015-02-23","text":"<ul> <li>Fix <code>\"trust proxy\"</code> setting to inherit when app is mounted</li> <li>Generate <code>ETag</code>s for all request responses<ul> <li>No longer restricted to only responses for <code>GET</code> and <code>HEAD</code> requests</li> </ul> </li> <li>Use <code>content-type</code> to parse <code>Content-Type</code> headers</li> <li>deps: accepts@~1.2.4<ul> <li>Fix preference sorting to be stable for long acceptable lists</li> <li>deps: mime-types@~2.0.9</li> <li>deps: negotiator@0.5.1</li> </ul> </li> <li>deps: cookie-signature@1.0.6</li> <li>deps: send@0.12.1<ul> <li>Always read the stat size from the file</li> <li>Fix mutating passed-in <code>options</code></li> <li>deps: mime@1.3.4</li> </ul> </li> <li>deps: serve-static@~1.9.1<ul> <li>deps: send@0.12.1</li> </ul> </li> <li>deps: type-is@~1.6.0<ul> <li>fix argument reassignment</li> <li>fix false-positives in <code>hasBody</code> <code>Transfer-Encoding</code> check</li> <li>support wildcard for both type and subtype (<code>*/*</code>)</li> <li>deps: mime-types@~2.0.9</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#4112-2015-02-01","title":"4.11.2 / 2015-02-01","text":"<ul> <li>Fix <code>res.redirect</code> double-calling <code>res.end</code> for <code>HEAD</code> requests</li> <li>deps: accepts@~1.2.3<ul> <li>deps: mime-types@~2.0.8</li> </ul> </li> <li>deps: proxy-addr@~1.0.6<ul> <li>deps: ipaddr.js@0.1.8</li> </ul> </li> <li>deps: type-is@~1.5.6<ul> <li>deps: mime-types@~2.0.8</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#4111-2015-01-20","title":"4.11.1 / 2015-01-20","text":"<ul> <li>deps: send@0.11.1<ul> <li>Fix root path disclosure</li> </ul> </li> <li>deps: serve-static@~1.8.1<ul> <li>Fix redirect loop in Node.js 0.11.14</li> <li>Fix root path disclosure</li> <li>deps: send@0.11.1</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#4110-2015-01-13","title":"4.11.0 / 2015-01-13","text":"<ul> <li>Add <code>res.append(field, val)</code> to append headers</li> <li>Deprecate leading <code>:</code> in <code>name</code> for <code>app.param(name, fn)</code></li> <li>Deprecate <code>req.param()</code> -- use <code>req.params</code>, <code>req.body</code>, or <code>req.query</code> instead</li> <li>Deprecate <code>app.param(fn)</code></li> <li>Fix <code>OPTIONS</code> responses to include the <code>HEAD</code> method properly</li> <li>Fix <code>res.sendFile</code> not always detecting aborted connection</li> <li>Match routes iteratively to prevent stack overflows</li> <li>deps: accepts@~1.2.2<ul> <li>deps: mime-types@~2.0.7</li> <li>deps: negotiator@0.5.0</li> </ul> </li> <li>deps: send@0.11.0<ul> <li>deps: debug@~2.1.1</li> <li>deps: etag@~1.5.1</li> <li>deps: ms@0.7.0</li> <li>deps: on-finished@~2.2.0</li> </ul> </li> <li>deps: serve-static@~1.8.0<ul> <li>deps: send@0.11.0</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#4108-2015-01-13","title":"4.10.8 / 2015-01-13","text":"<ul> <li>Fix crash from error within <code>OPTIONS</code> response handler</li> <li>deps: proxy-addr@~1.0.5<ul> <li>deps: ipaddr.js@0.1.6</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#4107-2015-01-04","title":"4.10.7 / 2015-01-04","text":"<ul> <li>Fix <code>Allow</code> header for <code>OPTIONS</code> to not contain duplicate methods</li> <li>Fix incorrect \"Request aborted\" for <code>res.sendFile</code> when <code>HEAD</code> or 304</li> <li>deps: debug@~2.1.1</li> <li>deps: finalhandler@0.3.3<ul> <li>deps: debug@~2.1.1</li> <li>deps: on-finished@~2.2.0</li> </ul> </li> <li>deps: methods@~1.1.1</li> <li>deps: on-finished@~2.2.0</li> <li>deps: serve-static@~1.7.2<ul> <li>Fix potential open redirect when mounted at root</li> </ul> </li> <li>deps: type-is@~1.5.5<ul> <li>deps: mime-types@~2.0.7</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#4106-2014-12-12","title":"4.10.6 / 2014-12-12","text":"<ul> <li>Fix exception in <code>req.fresh</code>/<code>req.stale</code> without response headers</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#4105-2014-12-10","title":"4.10.5 / 2014-12-10","text":"<ul> <li>Fix <code>res.send</code> double-calling <code>res.end</code> for <code>HEAD</code> requests</li> <li>deps: accepts@~1.1.4<ul> <li>deps: mime-types@~2.0.4</li> </ul> </li> <li>deps: type-is@~1.5.4<ul> <li>deps: mime-types@~2.0.4</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#4104-2014-11-24","title":"4.10.4 / 2014-11-24","text":"<ul> <li>Fix <code>res.sendfile</code> logging standard write errors</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#4103-2014-11-23","title":"4.10.3 / 2014-11-23","text":"<ul> <li>Fix <code>res.sendFile</code> logging standard write errors</li> <li>deps: etag@~1.5.1</li> <li>deps: proxy-addr@~1.0.4<ul> <li>deps: ipaddr.js@0.1.5</li> </ul> </li> <li>deps: qs@2.3.3<ul> <li>Fix <code>arrayLimit</code> behavior</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#4102-2014-11-09","title":"4.10.2 / 2014-11-09","text":"<ul> <li>Correctly invoke async router callback asynchronously</li> <li>deps: accepts@~1.1.3<ul> <li>deps: mime-types@~2.0.3</li> </ul> </li> <li>deps: type-is@~1.5.3<ul> <li>deps: mime-types@~2.0.3</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#4101-2014-10-28","title":"4.10.1 / 2014-10-28","text":"<ul> <li>Fix handling of URLs containing <code>://</code> in the path</li> <li>deps: qs@2.3.2<ul> <li>Fix parsing of mixed objects and values</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#4100-2014-10-23","title":"4.10.0 / 2014-10-23","text":"<ul> <li>Add support for <code>app.set('views', array)</code><ul> <li>Views are looked up in sequence in array of directories</li> </ul> </li> <li>Fix <code>res.send(status)</code> to mention <code>res.sendStatus(status)</code></li> <li>Fix handling of invalid empty URLs</li> <li>Use <code>content-disposition</code> module for <code>res.attachment</code>/<code>res.download</code><ul> <li>Sends standards-compliant <code>Content-Disposition</code> header</li> <li>Full Unicode support</li> </ul> </li> <li>Use <code>path.resolve</code> in view lookup</li> <li>deps: debug@~2.1.0<ul> <li>Implement <code>DEBUG_FD</code> env variable support</li> </ul> </li> <li>deps: depd@~1.0.0</li> <li>deps: etag@~1.5.0<ul> <li>Improve string performance</li> <li>Slightly improve speed for weak ETags over 1KB</li> </ul> </li> <li>deps: finalhandler@0.3.2<ul> <li>Terminate in progress response only on error</li> <li>Use <code>on-finished</code> to determine request status</li> <li>deps: debug@~2.1.0</li> <li>deps: on-finished@~2.1.1</li> </ul> </li> <li>deps: on-finished@~2.1.1<ul> <li>Fix handling of pipelined requests</li> </ul> </li> <li>deps: qs@2.3.0<ul> <li>Fix parsing of mixed implicit and explicit arrays</li> </ul> </li> <li>deps: send@0.10.1<ul> <li>deps: debug@~2.1.0</li> <li>deps: depd@~1.0.0</li> <li>deps: etag@~1.5.0</li> <li>deps: on-finished@~2.1.1</li> </ul> </li> <li>deps: serve-static@~1.7.1<ul> <li>deps: send@0.10.1</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#498-2014-10-17","title":"4.9.8 / 2014-10-17","text":"<ul> <li>Fix <code>res.redirect</code> body when redirect status specified</li> <li>deps: accepts@~1.1.2<ul> <li>Fix error when media type has invalid parameter</li> <li>deps: negotiator@0.4.9</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#497-2014-10-10","title":"4.9.7 / 2014-10-10","text":"<ul> <li>Fix using same param name in array of paths</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#496-2014-10-08","title":"4.9.6 / 2014-10-08","text":"<ul> <li>deps: accepts@~1.1.1<ul> <li>deps: mime-types@~2.0.2</li> <li>deps: negotiator@0.4.8</li> </ul> </li> <li>deps: serve-static@~1.6.4<ul> <li>Fix redirect loop when index file serving disabled</li> </ul> </li> <li>deps: type-is@~1.5.2<ul> <li>deps: mime-types@~2.0.2</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#495-2014-09-24","title":"4.9.5 / 2014-09-24","text":"<ul> <li>deps: etag@~1.4.0</li> <li>deps: proxy-addr@~1.0.3<ul> <li>Use <code>forwarded</code> npm module</li> </ul> </li> <li>deps: send@0.9.3<ul> <li>deps: etag@~1.4.0</li> </ul> </li> <li>deps: serve-static@~1.6.3<ul> <li>deps: send@0.9.3</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#494-2014-09-19","title":"4.9.4 / 2014-09-19","text":"<ul> <li>deps: qs@2.2.4<ul> <li>Fix issue with object keys starting with numbers truncated</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#493-2014-09-18","title":"4.9.3 / 2014-09-18","text":"<ul> <li>deps: proxy-addr@~1.0.2<ul> <li>Fix a global leak when multiple subnets are trusted</li> <li>deps: ipaddr.js@0.1.3</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#492-2014-09-17","title":"4.9.2 / 2014-09-17","text":"<ul> <li>Fix regression for empty string <code>path</code> in <code>app.use</code></li> <li>Fix <code>router.use</code> to accept array of middleware without path</li> <li>Improve error message for bad <code>app.use</code> arguments</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#491-2014-09-16","title":"4.9.1 / 2014-09-16","text":"<ul> <li>Fix <code>app.use</code> to accept array of middleware without path</li> <li>deps: depd@0.4.5</li> <li>deps: etag@~1.3.1</li> <li>deps: send@0.9.2<ul> <li>deps: depd@0.4.5</li> <li>deps: etag@~1.3.1</li> <li>deps: range-parser@~1.0.2</li> </ul> </li> <li>deps: serve-static@~1.6.2<ul> <li>deps: send@0.9.2</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#490-2014-09-08","title":"4.9.0 / 2014-09-08","text":"<ul> <li>Add <code>res.sendStatus</code></li> <li>Invoke callback for sendfile when client aborts<ul> <li>Applies to <code>res.sendFile</code>, <code>res.sendfile</code>, and <code>res.download</code></li> <li><code>err</code> will be populated with request aborted error</li> </ul> </li> <li>Support IP address host in <code>req.subdomains</code></li> <li>Use <code>etag</code> to generate <code>ETag</code> headers</li> <li>deps: accepts@~1.1.0<ul> <li>update <code>mime-types</code></li> </ul> </li> <li>deps: cookie-signature@1.0.5</li> <li>deps: debug@~2.0.0</li> <li>deps: finalhandler@0.2.0<ul> <li>Set <code>X-Content-Type-Options: nosniff</code> header</li> <li>deps: debug@~2.0.0</li> </ul> </li> <li>deps: fresh@0.2.4</li> <li>deps: media-typer@0.3.0<ul> <li>Throw error when parameter format invalid on parse</li> </ul> </li> <li>deps: qs@2.2.3<ul> <li>Fix issue where first empty value in array is discarded</li> </ul> </li> <li>deps: range-parser@~1.0.2</li> <li>deps: send@0.9.1<ul> <li>Add <code>lastModified</code> option</li> <li>Use <code>etag</code> to generate <code>ETag</code> header</li> <li>deps: debug@~2.0.0</li> <li>deps: fresh@0.2.4</li> </ul> </li> <li>deps: serve-static@~1.6.1<ul> <li>Add <code>lastModified</code> option</li> <li>deps: send@0.9.1</li> </ul> </li> <li>deps: type-is@~1.5.1<ul> <li>fix <code>hasbody</code> to be true for <code>content-length: 0</code></li> <li>deps: media-typer@0.3.0</li> <li>deps: mime-types@~2.0.1</li> </ul> </li> <li>deps: vary@~1.0.0<ul> <li>Accept valid <code>Vary</code> header string as <code>field</code></li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#488-2014-09-04","title":"4.8.8 / 2014-09-04","text":"<ul> <li>deps: send@0.8.5<ul> <li>Fix a path traversal issue when using <code>root</code></li> <li>Fix malicious path detection for empty string path</li> </ul> </li> <li>deps: serve-static@~1.5.4<ul> <li>deps: send@0.8.5</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#487-2014-08-29","title":"4.8.7 / 2014-08-29","text":"<ul> <li>deps: qs@2.2.2<ul> <li>Remove unnecessary cloning</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#486-2014-08-27","title":"4.8.6 / 2014-08-27","text":"<ul> <li>deps: qs@2.2.0<ul> <li>Array parsing fix</li> <li>Performance improvements</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#485-2014-08-18","title":"4.8.5 / 2014-08-18","text":"<ul> <li>deps: send@0.8.3<ul> <li>deps: destroy@1.0.3</li> <li>deps: on-finished@2.1.0</li> </ul> </li> <li>deps: serve-static@~1.5.3<ul> <li>deps: send@0.8.3</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#484-2014-08-14","title":"4.8.4 / 2014-08-14","text":"<ul> <li>deps: qs@1.2.2</li> <li>deps: send@0.8.2<ul> <li>Work around <code>fd</code> leak in Node.js 0.10 for <code>fs.ReadStream</code></li> </ul> </li> <li>deps: serve-static@~1.5.2<ul> <li>deps: send@0.8.2</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#483-2014-08-10","title":"4.8.3 / 2014-08-10","text":"<ul> <li>deps: parseurl@~1.3.0</li> <li>deps: qs@1.2.1</li> <li>deps: serve-static@~1.5.1<ul> <li>Fix parsing of weird <code>req.originalUrl</code> values</li> <li>deps: parseurl@~1.3.0</li> <li>deps: utils-merge@1.0.0</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#482-2014-08-07","title":"4.8.2 / 2014-08-07","text":"<ul> <li>deps: qs@1.2.0<ul> <li>Fix parsing array of objects</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#481-2014-08-06","title":"4.8.1 / 2014-08-06","text":"<ul> <li>fix incorrect deprecation warnings on <code>res.download</code></li> <li>deps: qs@1.1.0<ul> <li>Accept urlencoded square brackets</li> <li>Accept empty values in implicit array notation</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#480-2014-08-05","title":"4.8.0 / 2014-08-05","text":"<ul> <li>add <code>res.sendFile</code><ul> <li>accepts a file system path instead of a URL</li> <li>requires an absolute path or <code>root</code> option specified</li> </ul> </li> <li>deprecate <code>res.sendfile</code> -- use <code>res.sendFile</code> instead</li> <li>support mounted app as any argument to <code>app.use()</code></li> <li>deps: qs@1.0.2<ul> <li>Complete rewrite</li> <li>Limits array length to 20</li> <li>Limits object depth to 5</li> <li>Limits parameters to 1,000</li> </ul> </li> <li>deps: send@0.8.1<ul> <li>Add <code>extensions</code> option</li> </ul> </li> <li>deps: serve-static@~1.5.0<ul> <li>Add <code>extensions</code> option</li> <li>deps: send@0.8.1</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#474-2014-08-04","title":"4.7.4 / 2014-08-04","text":"<ul> <li>fix <code>res.sendfile</code> regression for serving directory index files</li> <li>deps: send@0.7.4<ul> <li>Fix incorrect 403 on Windows and Node.js 0.11</li> <li>Fix serving index files without root dir</li> </ul> </li> <li>deps: serve-static@~1.4.4<ul> <li>deps: send@0.7.4</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#473-2014-08-04","title":"4.7.3 / 2014-08-04","text":"<ul> <li>deps: send@0.7.3<ul> <li>Fix incorrect 403 on Windows and Node.js 0.11</li> </ul> </li> <li>deps: serve-static@~1.4.3<ul> <li>Fix incorrect 403 on Windows and Node.js 0.11</li> <li>deps: send@0.7.3</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#472-2014-07-27","title":"4.7.2 / 2014-07-27","text":"<ul> <li>deps: depd@0.4.4<ul> <li>Work-around v8 generating empty stack traces</li> </ul> </li> <li>deps: send@0.7.2<ul> <li>deps: depd@0.4.4</li> </ul> </li> <li>deps: serve-static@~1.4.2</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#471-2014-07-26","title":"4.7.1 / 2014-07-26","text":"<ul> <li>deps: depd@0.4.3<ul> <li>Fix exception when global <code>Error.stackTraceLimit</code> is too low</li> </ul> </li> <li>deps: send@0.7.1<ul> <li>deps: depd@0.4.3</li> </ul> </li> <li>deps: serve-static@~1.4.1</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#470-2014-07-25","title":"4.7.0 / 2014-07-25","text":"<ul> <li>fix <code>req.protocol</code> for proxy-direct connections</li> <li>configurable query parser with <code>app.set('query parser', parser)</code><ul> <li><code>app.set('query parser', 'extended')</code> parse with \"qs\" module</li> <li><code>app.set('query parser', 'simple')</code> parse with \"querystring\" core module</li> <li><code>app.set('query parser', false)</code> disable query string parsing</li> <li><code>app.set('query parser', true)</code> enable simple parsing</li> </ul> </li> <li>deprecate <code>res.json(status, obj)</code> -- use <code>res.status(status).json(obj)</code> instead</li> <li>deprecate <code>res.jsonp(status, obj)</code> -- use <code>res.status(status).jsonp(obj)</code> instead</li> <li>deprecate <code>res.send(status, body)</code> -- use <code>res.status(status).send(body)</code> instead</li> <li>deps: debug@1.0.4</li> <li>deps: depd@0.4.2<ul> <li>Add <code>TRACE_DEPRECATION</code> environment variable</li> <li>Remove non-standard grey color from color output</li> <li>Support <code>--no-deprecation</code> argument</li> <li>Support <code>--trace-deprecation</code> argument</li> </ul> </li> <li>deps: finalhandler@0.1.0<ul> <li>Respond after request fully read</li> <li>deps: debug@1.0.4</li> </ul> </li> <li>deps: parseurl@~1.2.0<ul> <li>Cache URLs based on original value</li> <li>Remove no-longer-needed URL mis-parse work-around</li> <li>Simplify the \"fast-path\" <code>RegExp</code></li> </ul> </li> <li>deps: send@0.7.0<ul> <li>Add <code>dotfiles</code> option</li> <li>Cap <code>maxAge</code> value to 1 year</li> <li>deps: debug@1.0.4</li> <li>deps: depd@0.4.2</li> </ul> </li> <li>deps: serve-static@~1.4.0<ul> <li>deps: parseurl@~1.2.0</li> <li>deps: send@0.7.0</li> </ul> </li> <li>perf: prevent multiple <code>Buffer</code> creation in <code>res.send</code></li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#461-2014-07-12","title":"4.6.1 / 2014-07-12","text":"<ul> <li>fix <code>subapp.mountpath</code> regression for <code>app.use(subapp)</code></li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#460-2014-07-11","title":"4.6.0 / 2014-07-11","text":"<ul> <li>accept multiple callbacks to <code>app.use()</code></li> <li>add explicit \"Rosetta Flash JSONP abuse\" protection<ul> <li>previous versions are not vulnerable; this is just explicit protection</li> </ul> </li> <li>catch errors in multiple <code>req.param(name, fn)</code> handlers</li> <li>deprecate <code>res.redirect(url, status)</code> -- use <code>res.redirect(status, url)</code> instead</li> <li>fix <code>res.send(status, num)</code> to send <code>num</code> as json (not error)</li> <li>remove unnecessary escaping when <code>res.jsonp</code> returns JSON response</li> <li>support non-string <code>path</code> in <code>app.use(path, fn)</code><ul> <li>supports array of paths</li> <li>supports <code>RegExp</code></li> </ul> </li> <li>router: fix optimization on router exit</li> <li>router: refactor location of <code>try</code> blocks</li> <li>router: speed up standard <code>app.use(fn)</code></li> <li>deps: debug@1.0.3<ul> <li>Add support for multiple wildcards in namespaces</li> </ul> </li> <li>deps: finalhandler@0.0.3<ul> <li>deps: debug@1.0.3</li> </ul> </li> <li>deps: methods@1.1.0<ul> <li>add <code>CONNECT</code></li> </ul> </li> <li>deps: parseurl@~1.1.3<ul> <li>faster parsing of href-only URLs</li> </ul> </li> <li>deps: path-to-regexp@0.1.3</li> <li>deps: send@0.6.0<ul> <li>deps: debug@1.0.3</li> </ul> </li> <li>deps: serve-static@~1.3.2<ul> <li>deps: parseurl@~1.1.3</li> <li>deps: send@0.6.0</li> </ul> </li> <li>perf: fix arguments reassign deopt in some <code>res</code> methods</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#451-2014-07-06","title":"4.5.1 / 2014-07-06","text":"<ul> <li>fix routing regression when altering <code>req.method</code></li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#450-2014-07-04","title":"4.5.0 / 2014-07-04","text":"<ul> <li>add deprecation message to non-plural <code>req.accepts*</code></li> <li>add deprecation message to <code>res.send(body, status)</code></li> <li>add deprecation message to <code>res.vary()</code></li> <li>add <code>headers</code> option to <code>res.sendfile</code></li> <li>use to set headers on successful file transfer</li> <li>add <code>mergeParams</code> option to <code>Router</code></li> <li>merges <code>req.params</code> from parent routes</li> <li>add <code>req.hostname</code> -- correct name for what <code>req.host</code> returns</li> <li>deprecate things with <code>depd</code> module</li> <li>deprecate <code>req.host</code> -- use <code>req.hostname</code> instead</li> <li>fix behavior when handling request without routes</li> <li>fix handling when <code>route.all</code> is only route</li> <li>invoke <code>router.param()</code> only when route matches</li> <li>restore <code>req.params</code> after invoking router</li> <li>use <code>finalhandler</code> for final response handling</li> <li>use <code>media-typer</code> to alter content-type charset</li> <li>deps: accepts@~1.0.7</li> <li>deps: send@0.5.0</li> <li>Accept string for <code>maxage</code> (converted by <code>ms</code>)</li> <li>Include link in default redirect response</li> <li>deps: serve-static@~1.3.0</li> <li>Accept string for <code>maxAge</code> (converted by <code>ms</code>)</li> <li>Add <code>setHeaders</code> option</li> <li>Include HTML link in redirect response</li> <li>deps: send@0.5.0</li> <li>deps: type-is@~1.3.2</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#445-2014-06-26","title":"4.4.5 / 2014-06-26","text":"<ul> <li>deps: cookie-signature@1.0.4</li> <li>fix for timing attacks</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#444-2014-06-20","title":"4.4.4 / 2014-06-20","text":"<ul> <li>fix <code>res.attachment</code> Unicode filenames in Safari</li> <li>fix \"trim prefix\" debug message in <code>express:router</code></li> <li>deps: accepts@~1.0.5</li> <li>deps: buffer-crc32@0.2.3</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#443-2014-06-11","title":"4.4.3 / 2014-06-11","text":"<ul> <li>fix persistence of modified <code>req.params[name]</code> from <code>app.param()</code></li> <li>deps: accepts@1.0.3</li> <li>deps: negotiator@0.4.6</li> <li>deps: debug@1.0.2</li> <li>deps: send@0.4.3</li> <li>Do not throw uncatchable error on file open race condition</li> <li>Use <code>escape-html</code> for HTML escaping</li> <li>deps: debug@1.0.2</li> <li>deps: finished@1.2.2</li> <li>deps: fresh@0.2.2</li> <li>deps: serve-static@1.2.3</li> <li>Do not throw uncatchable error on file open race condition</li> <li>deps: send@0.4.3</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#442-2014-06-09","title":"4.4.2 / 2014-06-09","text":"<ul> <li>fix catching errors from top-level handlers</li> <li>use <code>vary</code> module for <code>res.vary</code></li> <li>deps: debug@1.0.1</li> <li>deps: proxy-addr@1.0.1</li> <li>deps: send@0.4.2</li> <li>fix \"event emitter leak\" warnings</li> <li>deps: debug@1.0.1</li> <li>deps: finished@1.2.1</li> <li>deps: serve-static@1.2.2</li> <li>fix \"event emitter leak\" warnings</li> <li>deps: send@0.4.2</li> <li>deps: type-is@1.2.1</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#441-2014-06-02","title":"4.4.1 / 2014-06-02","text":"<ul> <li>deps: methods@1.0.1</li> <li>deps: send@0.4.1</li> <li>Send <code>max-age</code> in <code>Cache-Control</code> in correct format</li> <li>deps: serve-static@1.2.1</li> <li>use <code>escape-html</code> for escaping</li> <li>deps: send@0.4.1</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#440-2014-05-30","title":"4.4.0 / 2014-05-30","text":"<ul> <li>custom etag control with <code>app.set('etag', val)</code></li> <li><code>app.set('etag', function(body, encoding){ return '\"etag\"' })</code> custom etag generation</li> <li><code>app.set('etag', 'weak')</code> weak tag</li> <li><code>app.set('etag', 'strong')</code> strong etag</li> <li><code>app.set('etag', false)</code> turn off</li> <li><code>app.set('etag', true)</code> standard etag</li> <li>mark <code>res.send</code> ETag as weak and reduce collisions</li> <li>update accepts to 1.0.2</li> <li>Fix interpretation when header not in request</li> <li>update send to 0.4.0</li> <li>Calculate ETag with md5 for reduced collisions</li> <li>Ignore stream errors after request ends</li> <li>deps: debug@0.8.1</li> <li>update serve-static to 1.2.0</li> <li>Calculate ETag with md5 for reduced collisions</li> <li>Ignore stream errors after request ends</li> <li>deps: send@0.4.0</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#432-2014-05-28","title":"4.3.2 / 2014-05-28","text":"<ul> <li>fix handling of errors from <code>router.param()</code> callbacks</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#431-2014-05-23","title":"4.3.1 / 2014-05-23","text":"<ul> <li>revert \"fix behavior of multiple <code>app.VERB</code> for the same path\"</li> <li>this caused a regression in the order of route execution</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#430-2014-05-21","title":"4.3.0 / 2014-05-21","text":"<ul> <li>add <code>req.baseUrl</code> to access the path stripped from <code>req.url</code> in routes</li> <li>fix behavior of multiple <code>app.VERB</code> for the same path</li> <li>fix issue routing requests among sub routers</li> <li>invoke <code>router.param()</code> only when necessary instead of every match</li> <li>proper proxy trust with <code>app.set('trust proxy', trust)</code></li> <li><code>app.set('trust proxy', 1)</code> trust first hop</li> <li><code>app.set('trust proxy', 'loopback')</code> trust loopback addresses</li> <li><code>app.set('trust proxy', '10.0.0.1')</code> trust single IP</li> <li><code>app.set('trust proxy', '10.0.0.1/16')</code> trust subnet</li> <li><code>app.set('trust proxy', '10.0.0.1, 10.0.0.2')</code> trust list</li> <li><code>app.set('trust proxy', false)</code> turn off</li> <li><code>app.set('trust proxy', true)</code> trust everything</li> <li>set proper <code>charset</code> in <code>Content-Type</code> for <code>res.send</code></li> <li>update type-is to 1.2.0</li> <li>support suffix matching</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#420-2014-05-11","title":"4.2.0 / 2014-05-11","text":"<ul> <li>deprecate <code>app.del()</code> -- use <code>app.delete()</code> instead</li> <li>deprecate <code>res.json(obj, status)</code> -- use <code>res.json(status, obj)</code> instead</li> <li>the edge-case <code>res.json(status, num)</code> requires <code>res.status(status).json(num)</code></li> <li>deprecate <code>res.jsonp(obj, status)</code> -- use <code>res.jsonp(status, obj)</code> instead</li> <li>the edge-case <code>res.jsonp(status, num)</code> requires <code>res.status(status).jsonp(num)</code></li> <li>fix <code>req.next</code> when inside router instance</li> <li>include <code>ETag</code> header in <code>HEAD</code> requests</li> <li>keep previous <code>Content-Type</code> for <code>res.jsonp</code></li> <li>support PURGE method</li> <li>add <code>app.purge</code></li> <li>add <code>router.purge</code></li> <li>include PURGE in <code>app.all</code></li> <li>update debug to 0.8.0</li> <li>add <code>enable()</code> method</li> <li>change from stderr to stdout</li> <li>update methods to 1.0.0</li> <li>add PURGE</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#412-2014-05-08","title":"4.1.2 / 2014-05-08","text":"<ul> <li>fix <code>req.host</code> for IPv6 literals</li> <li>fix <code>res.jsonp</code> error if callback param is object</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#411-2014-04-27","title":"4.1.1 / 2014-04-27","text":"<ul> <li>fix package.json to reflect supported node version</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#410-2014-04-24","title":"4.1.0 / 2014-04-24","text":"<ul> <li>pass options from <code>res.sendfile</code> to <code>send</code></li> <li>preserve casing of headers in <code>res.header</code> and <code>res.set</code></li> <li>support unicode file names in <code>res.attachment</code> and <code>res.download</code></li> <li>update accepts to 1.0.1</li> <li>deps: negotiator@0.4.0</li> <li>update cookie to 0.1.2</li> <li>Fix for maxAge == 0</li> <li>made compat with expires field</li> <li>update send to 0.3.0</li> <li>Accept API options in options object</li> <li>Coerce option types</li> <li>Control whether to generate etags</li> <li>Default directory access to 403 when index disabled</li> <li>Fix sending files with dots without root set</li> <li>Include file path in etag</li> <li>Make \"Can't set headers after they are sent.\" catchable</li> <li>Send full entity-body for multi range requests</li> <li>Set etags to \"weak\"</li> <li>Support \"If-Range\" header</li> <li>Support multiple index paths</li> <li>deps: mime@1.2.11</li> <li>update serve-static to 1.1.0</li> <li>Accept options directly to <code>send</code> module</li> <li>Resolve relative paths at middleware setup</li> <li>Use parseurl to parse the URL from request</li> <li>deps: send@0.3.0</li> <li>update type-is to 1.1.0</li> <li>add non-array values support</li> <li>add <code>multipart</code> as a shorthand</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#400-2014-04-09","title":"4.0.0 / 2014-04-09","text":"<ul> <li>remove:</li> <li>node 0.8 support</li> <li>connect and connect's patches except for charset handling</li> <li>express(1) - moved to express-generator</li> <li><code>express.createServer()</code> - it has been deprecated for a long time. Use <code>express()</code></li> <li><code>app.configure</code> - use logic in your own app code</li> <li><code>app.router</code> - is removed</li> <li><code>req.auth</code> - use <code>basic-auth</code> instead</li> <li><code>req.accepted*</code> - use <code>req.accepts*()</code> instead</li> <li><code>res.location</code> - relative URL resolution is removed</li> <li><code>res.charset</code> - include the charset in the content type when using <code>res.set()</code></li> <li>all bundled middleware except <code>static</code></li> <li>change:</li> <li><code>app.route</code> -&gt; <code>app.mountpath</code> when mounting an express app in another express app</li> <li><code>json spaces</code> no longer enabled by default in development</li> <li><code>req.accepts*</code> -&gt; <code>req.accepts*s</code> - i.e. <code>req.acceptsEncoding</code> -&gt; <code>req.acceptsEncodings</code></li> <li><code>req.params</code> is now an object instead of an array</li> <li><code>res.locals</code> is no longer a function. It is a plain js object. Treat it as such.</li> <li><code>res.headerSent</code> -&gt; <code>res.headersSent</code> to match node.js ServerResponse object</li> <li>refactor:</li> <li><code>req.accepts*</code> with accepts</li> <li><code>req.is</code> with type-is</li> <li>path-to-regexp</li> <li>add:</li> <li><code>app.router()</code> - returns the app Router instance</li> <li><code>app.route()</code> - Proxy to the app's <code>Router#route()</code> method to create a new route</li> <li>Router &amp; Route - public API</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#3212-2015-07-31","title":"3.21.2 / 2015-07-31","text":"<ul> <li>deps: connect@2.30.2<ul> <li>deps: body-parser@~1.13.3</li> <li>deps: compression@~1.5.2</li> <li>deps: errorhandler@~1.4.2</li> <li>deps: method-override@~2.3.5</li> <li>deps: serve-index@~1.7.2</li> <li>deps: type-is@~1.6.6</li> <li>deps: vhost@~3.0.1</li> </ul> </li> <li>deps: vary@~1.0.1<ul> <li>Fix setting empty header from empty <code>field</code></li> <li>perf: enable strict mode</li> <li>perf: remove argument reassignments</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#3211-2015-07-05","title":"3.21.1 / 2015-07-05","text":"<ul> <li>deps: basic-auth@~1.0.3</li> <li>deps: connect@2.30.1<ul> <li>deps: body-parser@~1.13.2</li> <li>deps: compression@~1.5.1</li> <li>deps: errorhandler@~1.4.1</li> <li>deps: morgan@~1.6.1</li> <li>deps: pause@0.1.0</li> <li>deps: qs@4.0.0</li> <li>deps: serve-index@~1.7.1</li> <li>deps: type-is@~1.6.4</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#3210-2015-06-18","title":"3.21.0 / 2015-06-18","text":"<ul> <li>deps: basic-auth@1.0.2<ul> <li>perf: enable strict mode</li> <li>perf: hoist regular expression</li> <li>perf: parse with regular expressions</li> <li>perf: remove argument reassignment</li> </ul> </li> <li>deps: connect@2.30.0<ul> <li>deps: body-parser@~1.13.1</li> <li>deps: bytes@2.1.0</li> <li>deps: compression@~1.5.0</li> <li>deps: cookie@0.1.3</li> <li>deps: cookie-parser@~1.3.5</li> <li>deps: csurf@~1.8.3</li> <li>deps: errorhandler@~1.4.0</li> <li>deps: express-session@~1.11.3</li> <li>deps: finalhandler@0.4.0</li> <li>deps: fresh@0.3.0</li> <li>deps: morgan@~1.6.0</li> <li>deps: serve-favicon@~2.3.0</li> <li>deps: serve-index@~1.7.0</li> <li>deps: serve-static@~1.10.0</li> <li>deps: type-is@~1.6.3</li> </ul> </li> <li>deps: cookie@0.1.3<ul> <li>perf: deduce the scope of try-catch deopt</li> <li>perf: remove argument reassignments</li> </ul> </li> <li>deps: escape-html@1.0.2</li> <li>deps: etag@~1.7.0<ul> <li>Always include entity length in ETags for hash length extensions</li> <li>Generate non-Stats ETags using MD5 only (no longer CRC32)</li> <li>Improve stat performance by removing hashing</li> <li>Improve support for JXcore</li> <li>Remove base64 padding in ETags to shorten</li> <li>Support \"fake\" stats objects in environments without fs</li> <li>Use MD5 instead of MD4 in weak ETags over 1KB</li> </ul> </li> <li>deps: fresh@0.3.0<ul> <li>Add weak <code>ETag</code> matching support</li> </ul> </li> <li>deps: mkdirp@0.5.1<ul> <li>Work in global strict mode</li> </ul> </li> <li>deps: send@0.13.0<ul> <li>Allow Node.js HTTP server to set <code>Date</code> response header</li> <li>Fix incorrectly removing <code>Content-Location</code> on 304 response</li> <li>Improve the default redirect response headers</li> <li>Send appropriate headers on default error response</li> <li>Use <code>http-errors</code> for standard emitted errors</li> <li>Use <code>statuses</code> instead of <code>http</code> module for status messages</li> <li>deps: escape-html@1.0.2</li> <li>deps: etag@~1.7.0</li> <li>deps: fresh@0.3.0</li> <li>deps: on-finished@~2.3.0</li> <li>perf: enable strict mode</li> <li>perf: remove unnecessary array allocations</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#3203-2015-05-17","title":"3.20.3 / 2015-05-17","text":"<ul> <li>deps: connect@2.29.2<ul> <li>deps: body-parser@~1.12.4</li> <li>deps: compression@~1.4.4</li> <li>deps: connect-timeout@~1.6.2</li> <li>deps: debug@~2.2.0</li> <li>deps: depd@~1.0.1</li> <li>deps: errorhandler@~1.3.6</li> <li>deps: finalhandler@0.3.6</li> <li>deps: method-override@~2.3.3</li> <li>deps: morgan@~1.5.3</li> <li>deps: qs@2.4.2</li> <li>deps: response-time@~2.3.1</li> <li>deps: serve-favicon@~2.2.1</li> <li>deps: serve-index@~1.6.4</li> <li>deps: serve-static@~1.9.3</li> <li>deps: type-is@~1.6.2</li> </ul> </li> <li>deps: debug@~2.2.0<ul> <li>deps: ms@0.7.1</li> </ul> </li> <li>deps: depd@~1.0.1</li> <li>deps: proxy-addr@~1.0.8<ul> <li>deps: ipaddr.js@1.0.1</li> </ul> </li> <li>deps: send@0.12.3<ul> <li>deps: debug@~2.2.0</li> <li>deps: depd@~1.0.1</li> <li>deps: etag@~1.6.0</li> <li>deps: ms@0.7.1</li> <li>deps: on-finished@~2.2.1</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#3202-2015-03-16","title":"3.20.2 / 2015-03-16","text":"<ul> <li>deps: connect@2.29.1<ul> <li>deps: body-parser@~1.12.2</li> <li>deps: compression@~1.4.3</li> <li>deps: connect-timeout@~1.6.1</li> <li>deps: debug@~2.1.3</li> <li>deps: errorhandler@~1.3.5</li> <li>deps: express-session@~1.10.4</li> <li>deps: finalhandler@0.3.4</li> <li>deps: method-override@~2.3.2</li> <li>deps: morgan@~1.5.2</li> <li>deps: qs@2.4.1</li> <li>deps: serve-index@~1.6.3</li> <li>deps: serve-static@~1.9.2</li> <li>deps: type-is@~1.6.1</li> </ul> </li> <li>deps: debug@~2.1.3<ul> <li>Fix high intensity foreground color for bold</li> <li>deps: ms@0.7.0</li> </ul> </li> <li>deps: merge-descriptors@1.0.0</li> <li>deps: proxy-addr@~1.0.7<ul> <li>deps: ipaddr.js@0.1.9</li> </ul> </li> <li>deps: send@0.12.2<ul> <li>Throw errors early for invalid <code>extensions</code> or <code>index</code> options</li> <li>deps: debug@~2.1.3</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#3201-2015-02-28","title":"3.20.1 / 2015-02-28","text":"<ul> <li>Fix <code>req.host</code> when using \"trust proxy\" hops count</li> <li>Fix <code>req.protocol</code>/<code>req.secure</code> when using \"trust proxy\" hops count</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#3200-2015-02-18","title":"3.20.0 / 2015-02-18","text":"<ul> <li>Fix <code>\"trust proxy\"</code> setting to inherit when app is mounted</li> <li>Generate <code>ETag</code>s for all request responses<ul> <li>No longer restricted to only responses for <code>GET</code> and <code>HEAD</code> requests</li> </ul> </li> <li>Use <code>content-type</code> to parse <code>Content-Type</code> headers</li> <li>deps: connect@2.29.0<ul> <li>Use <code>content-type</code> to parse <code>Content-Type</code> headers</li> <li>deps: body-parser@~1.12.0</li> <li>deps: compression@~1.4.1</li> <li>deps: connect-timeout@~1.6.0</li> <li>deps: cookie-parser@~1.3.4</li> <li>deps: cookie-signature@1.0.6</li> <li>deps: csurf@~1.7.0</li> <li>deps: errorhandler@~1.3.4</li> <li>deps: express-session@~1.10.3</li> <li>deps: http-errors@~1.3.1</li> <li>deps: response-time@~2.3.0</li> <li>deps: serve-index@~1.6.2</li> <li>deps: serve-static@~1.9.1</li> <li>deps: type-is@~1.6.0</li> </ul> </li> <li>deps: cookie-signature@1.0.6</li> <li>deps: send@0.12.1<ul> <li>Always read the stat size from the file</li> <li>Fix mutating passed-in <code>options</code></li> <li>deps: mime@1.3.4</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#3192-2015-02-01","title":"3.19.2 / 2015-02-01","text":"<ul> <li>deps: connect@2.28.3<ul> <li>deps: compression@~1.3.1</li> <li>deps: csurf@~1.6.6</li> <li>deps: errorhandler@~1.3.3</li> <li>deps: express-session@~1.10.2</li> <li>deps: serve-index@~1.6.1</li> <li>deps: type-is@~1.5.6</li> </ul> </li> <li>deps: proxy-addr@~1.0.6<ul> <li>deps: ipaddr.js@0.1.8</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#3191-2015-01-20","title":"3.19.1 / 2015-01-20","text":"<ul> <li>deps: connect@2.28.2<ul> <li>deps: body-parser@~1.10.2</li> <li>deps: serve-static@~1.8.1</li> </ul> </li> <li>deps: send@0.11.1<ul> <li>Fix root path disclosure</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#3190-2015-01-09","title":"3.19.0 / 2015-01-09","text":"<ul> <li>Fix <code>OPTIONS</code> responses to include the <code>HEAD</code> method property</li> <li>Use <code>readline</code> for prompt in <code>express(1)</code></li> <li>deps: commander@2.6.0</li> <li>deps: connect@2.28.1<ul> <li>deps: body-parser@~1.10.1</li> <li>deps: compression@~1.3.0</li> <li>deps: connect-timeout@~1.5.0</li> <li>deps: csurf@~1.6.4</li> <li>deps: debug@~2.1.1</li> <li>deps: errorhandler@~1.3.2</li> <li>deps: express-session@~1.10.1</li> <li>deps: finalhandler@0.3.3</li> <li>deps: method-override@~2.3.1</li> <li>deps: morgan@~1.5.1</li> <li>deps: serve-favicon@~2.2.0</li> <li>deps: serve-index@~1.6.0</li> <li>deps: serve-static@~1.8.0</li> <li>deps: type-is@~1.5.5</li> </ul> </li> <li>deps: debug@~2.1.1</li> <li>deps: methods@~1.1.1</li> <li>deps: proxy-addr@~1.0.5<ul> <li>deps: ipaddr.js@0.1.6</li> </ul> </li> <li>deps: send@0.11.0<ul> <li>deps: debug@~2.1.1</li> <li>deps: etag@~1.5.1</li> <li>deps: ms@0.7.0</li> <li>deps: on-finished@~2.2.0</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#3186-2014-12-12","title":"3.18.6 / 2014-12-12","text":"<ul> <li>Fix exception in <code>req.fresh</code>/<code>req.stale</code> without response headers</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#3185-2014-12-11","title":"3.18.5 / 2014-12-11","text":"<ul> <li>deps: connect@2.27.6<ul> <li>deps: compression@~1.2.2</li> <li>deps: express-session@~1.9.3</li> <li>deps: http-errors@~1.2.8</li> <li>deps: serve-index@~1.5.3</li> <li>deps: type-is@~1.5.4</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#3184-2014-11-23","title":"3.18.4 / 2014-11-23","text":"<ul> <li>deps: connect@2.27.4<ul> <li>deps: body-parser@~1.9.3</li> <li>deps: compression@~1.2.1</li> <li>deps: errorhandler@~1.2.3</li> <li>deps: express-session@~1.9.2</li> <li>deps: qs@2.3.3</li> <li>deps: serve-favicon@~2.1.7</li> <li>deps: serve-static@~1.5.1</li> <li>deps: type-is@~1.5.3</li> </ul> </li> <li>deps: etag@~1.5.1</li> <li>deps: proxy-addr@~1.0.4<ul> <li>deps: ipaddr.js@0.1.5</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#3183-2014-11-09","title":"3.18.3 / 2014-11-09","text":"<ul> <li>deps: connect@2.27.3<ul> <li>Correctly invoke async callback asynchronously</li> <li>deps: csurf@~1.6.3</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#3182-2014-10-28","title":"3.18.2 / 2014-10-28","text":"<ul> <li>deps: connect@2.27.2<ul> <li>Fix handling of URLs containing <code>://</code> in the path</li> <li>deps: body-parser@~1.9.2</li> <li>deps: qs@2.3.2</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#3181-2014-10-22","title":"3.18.1 / 2014-10-22","text":"<ul> <li>Fix internal <code>utils.merge</code> deprecation warnings</li> <li>deps: connect@2.27.1<ul> <li>deps: body-parser@~1.9.1</li> <li>deps: express-session@~1.9.1</li> <li>deps: finalhandler@0.3.2</li> <li>deps: morgan@~1.4.1</li> <li>deps: qs@2.3.0</li> <li>deps: serve-static@~1.7.1</li> </ul> </li> <li>deps: send@0.10.1<ul> <li>deps: on-finished@~2.1.1</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#3180-2014-10-17","title":"3.18.0 / 2014-10-17","text":"<ul> <li>Use <code>content-disposition</code> module for <code>res.attachment</code>/<code>res.download</code><ul> <li>Sends standards-compliant <code>Content-Disposition</code> header</li> <li>Full Unicode support</li> </ul> </li> <li>Use <code>etag</code> module to generate <code>ETag</code> headers</li> <li>deps: connect@2.27.0<ul> <li>Use <code>http-errors</code> module for creating errors</li> <li>Use <code>utils-merge</code> module for merging objects</li> <li>deps: body-parser@~1.9.0</li> <li>deps: compression@~1.2.0</li> <li>deps: connect-timeout@~1.4.0</li> <li>deps: debug@~2.1.0</li> <li>deps: depd@~1.0.0</li> <li>deps: express-session@~1.9.0</li> <li>deps: finalhandler@0.3.1</li> <li>deps: method-override@~2.3.0</li> <li>deps: morgan@~1.4.0</li> <li>deps: response-time@~2.2.0</li> <li>deps: serve-favicon@~2.1.6</li> <li>deps: serve-index@~1.5.0</li> <li>deps: serve-static@~1.7.0</li> </ul> </li> <li>deps: debug@~2.1.0<ul> <li>Implement <code>DEBUG_FD</code> env variable support</li> </ul> </li> <li>deps: depd@~1.0.0</li> <li>deps: send@0.10.0<ul> <li>deps: debug@~2.1.0</li> <li>deps: depd@~1.0.0</li> <li>deps: etag@~1.5.0</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#3178-2014-10-15","title":"3.17.8 / 2014-10-15","text":"<ul> <li>deps: connect@2.26.6<ul> <li>deps: compression@~1.1.2</li> <li>deps: csurf@~1.6.2</li> <li>deps: errorhandler@~1.2.2</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#3177-2014-10-08","title":"3.17.7 / 2014-10-08","text":"<ul> <li>deps: connect@2.26.5<ul> <li>Fix accepting non-object arguments to <code>logger</code></li> <li>deps: serve-static@~1.6.4</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#3176-2014-10-02","title":"3.17.6 / 2014-10-02","text":"<ul> <li>deps: connect@2.26.4<ul> <li>deps: morgan@~1.3.2</li> <li>deps: type-is@~1.5.2</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#3175-2014-09-24","title":"3.17.5 / 2014-09-24","text":"<ul> <li>deps: connect@2.26.3<ul> <li>deps: body-parser@~1.8.4</li> <li>deps: serve-favicon@~2.1.5</li> <li>deps: serve-static@~1.6.3</li> </ul> </li> <li>deps: proxy-addr@~1.0.3<ul> <li>Use <code>forwarded</code> npm module</li> </ul> </li> <li>deps: send@0.9.3<ul> <li>deps: etag@~1.4.0</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#3174-2014-09-19","title":"3.17.4 / 2014-09-19","text":"<ul> <li>deps: connect@2.26.2<ul> <li>deps: body-parser@~1.8.3</li> <li>deps: qs@2.2.4</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#3173-2014-09-18","title":"3.17.3 / 2014-09-18","text":"<ul> <li>deps: proxy-addr@~1.0.2<ul> <li>Fix a global leak when multiple subnets are trusted</li> <li>deps: ipaddr.js@0.1.3</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#3172-2014-09-15","title":"3.17.2 / 2014-09-15","text":"<ul> <li>Use <code>crc</code> instead of <code>buffer-crc32</code> for speed</li> <li>deps: connect@2.26.1<ul> <li>deps: body-parser@~1.8.2</li> <li>deps: depd@0.4.5</li> <li>deps: express-session@~1.8.2</li> <li>deps: morgan@~1.3.1</li> <li>deps: serve-favicon@~2.1.3</li> <li>deps: serve-static@~1.6.2</li> </ul> </li> <li>deps: depd@0.4.5</li> <li>deps: send@0.9.2<ul> <li>deps: depd@0.4.5</li> <li>deps: etag@~1.3.1</li> <li>deps: range-parser@~1.0.2</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#3171-2014-09-08","title":"3.17.1 / 2014-09-08","text":"<ul> <li>Fix error in <code>req.subdomains</code> on empty host</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#3170-2014-09-08","title":"3.17.0 / 2014-09-08","text":"<ul> <li>Support <code>X-Forwarded-Host</code> in <code>req.subdomains</code></li> <li>Support IP address host in <code>req.subdomains</code></li> <li>deps: connect@2.26.0<ul> <li>deps: body-parser@~1.8.1</li> <li>deps: compression@~1.1.0</li> <li>deps: connect-timeout@~1.3.0</li> <li>deps: cookie-parser@~1.3.3</li> <li>deps: cookie-signature@1.0.5</li> <li>deps: csurf@~1.6.1</li> <li>deps: debug@~2.0.0</li> <li>deps: errorhandler@~1.2.0</li> <li>deps: express-session@~1.8.1</li> <li>deps: finalhandler@0.2.0</li> <li>deps: fresh@0.2.4</li> <li>deps: media-typer@0.3.0</li> <li>deps: method-override@~2.2.0</li> <li>deps: morgan@~1.3.0</li> <li>deps: qs@2.2.3</li> <li>deps: serve-favicon@~2.1.3</li> <li>deps: serve-index@~1.2.1</li> <li>deps: serve-static@~1.6.1</li> <li>deps: type-is@~1.5.1</li> <li>deps: vhost@~3.0.0</li> </ul> </li> <li>deps: cookie-signature@1.0.5</li> <li>deps: debug@~2.0.0</li> <li>deps: fresh@0.2.4</li> <li>deps: media-typer@0.3.0<ul> <li>Throw error when parameter format invalid on parse</li> </ul> </li> <li>deps: range-parser@~1.0.2</li> <li>deps: send@0.9.1<ul> <li>Add <code>lastModified</code> option</li> <li>Use <code>etag</code> to generate <code>ETag</code> header</li> <li>deps: debug@~2.0.0</li> <li>deps: fresh@0.2.4</li> </ul> </li> <li>deps: vary@~1.0.0<ul> <li>Accept valid <code>Vary</code> header string as <code>field</code></li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#31610-2014-09-04","title":"3.16.10 / 2014-09-04","text":"<ul> <li>deps: connect@2.25.10<ul> <li>deps: serve-static@~1.5.4</li> </ul> </li> <li>deps: send@0.8.5<ul> <li>Fix a path traversal issue when using <code>root</code></li> <li>Fix malicious path detection for empty string path</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#3169-2014-08-29","title":"3.16.9 / 2014-08-29","text":"<ul> <li>deps: connect@2.25.9<ul> <li>deps: body-parser@~1.6.7</li> <li>deps: qs@2.2.2</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#3168-2014-08-27","title":"3.16.8 / 2014-08-27","text":"<ul> <li>deps: connect@2.25.8<ul> <li>deps: body-parser@~1.6.6</li> <li>deps: csurf@~1.4.1</li> <li>deps: qs@2.2.0</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#3167-2014-08-18","title":"3.16.7 / 2014-08-18","text":"<ul> <li>deps: connect@2.25.7<ul> <li>deps: body-parser@~1.6.5</li> <li>deps: express-session@~1.7.6</li> <li>deps: morgan@~1.2.3</li> <li>deps: serve-static@~1.5.3</li> </ul> </li> <li>deps: send@0.8.3<ul> <li>deps: destroy@1.0.3</li> <li>deps: on-finished@2.1.0</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#3166-2014-08-14","title":"3.16.6 / 2014-08-14","text":"<ul> <li>deps: connect@2.25.6<ul> <li>deps: body-parser@~1.6.4</li> <li>deps: qs@1.2.2</li> <li>deps: serve-static@~1.5.2</li> </ul> </li> <li>deps: send@0.8.2<ul> <li>Work around <code>fd</code> leak in Node.js 0.10 for <code>fs.ReadStream</code></li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#3165-2014-08-11","title":"3.16.5 / 2014-08-11","text":"<ul> <li>deps: connect@2.25.5<ul> <li>Fix backwards compatibility in <code>logger</code></li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#3164-2014-08-10","title":"3.16.4 / 2014-08-10","text":"<ul> <li>Fix original URL parsing in <code>res.location</code></li> <li>deps: connect@2.25.4<ul> <li>Fix <code>query</code> middleware breaking with argument</li> <li>deps: body-parser@~1.6.3</li> <li>deps: compression@~1.0.11</li> <li>deps: connect-timeout@~1.2.2</li> <li>deps: express-session@~1.7.5</li> <li>deps: method-override@~2.1.3</li> <li>deps: on-headers@~1.0.0</li> <li>deps: parseurl@~1.3.0</li> <li>deps: qs@1.2.1</li> <li>deps: response-time@~2.0.1</li> <li>deps: serve-index@~1.1.6</li> <li>deps: serve-static@~1.5.1</li> </ul> </li> <li>deps: parseurl@~1.3.0</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#3163-2014-08-07","title":"3.16.3 / 2014-08-07","text":"<ul> <li>deps: connect@2.25.3<ul> <li>deps: multiparty@3.3.2</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#3162-2014-08-07","title":"3.16.2 / 2014-08-07","text":"<ul> <li>deps: connect@2.25.2<ul> <li>deps: body-parser@~1.6.2</li> <li>deps: qs@1.2.0</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#3161-2014-08-06","title":"3.16.1 / 2014-08-06","text":"<ul> <li>deps: connect@2.25.1<ul> <li>deps: body-parser@~1.6.1</li> <li>deps: qs@1.1.0</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#3160-2014-08-05","title":"3.16.0 / 2014-08-05","text":"<ul> <li>deps: connect@2.25.0<ul> <li>deps: body-parser@~1.6.0</li> <li>deps: compression@~1.0.10</li> <li>deps: csurf@~1.4.0</li> <li>deps: express-session@~1.7.4</li> <li>deps: qs@1.0.2</li> <li>deps: serve-static@~1.5.0</li> </ul> </li> <li>deps: send@0.8.1<ul> <li>Add <code>extensions</code> option</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#3153-2014-08-04","title":"3.15.3 / 2014-08-04","text":"<ul> <li>fix <code>res.sendfile</code> regression for serving directory index files</li> <li>deps: connect@2.24.3<ul> <li>deps: serve-index@~1.1.5</li> <li>deps: serve-static@~1.4.4</li> </ul> </li> <li>deps: send@0.7.4<ul> <li>Fix incorrect 403 on Windows and Node.js 0.11</li> <li>Fix serving index files without root dir</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#3152-2014-07-27","title":"3.15.2 / 2014-07-27","text":"<ul> <li>deps: connect@2.24.2<ul> <li>deps: body-parser@~1.5.2</li> <li>deps: depd@0.4.4</li> <li>deps: express-session@~1.7.2</li> <li>deps: morgan@~1.2.2</li> <li>deps: serve-static@~1.4.2</li> </ul> </li> <li>deps: depd@0.4.4<ul> <li>Work-around v8 generating empty stack traces</li> </ul> </li> <li>deps: send@0.7.2<ul> <li>deps: depd@0.4.4</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#3151-2014-07-26","title":"3.15.1 / 2014-07-26","text":"<ul> <li>deps: connect@2.24.1<ul> <li>deps: body-parser@~1.5.1</li> <li>deps: depd@0.4.3</li> <li>deps: express-session@~1.7.1</li> <li>deps: morgan@~1.2.1</li> <li>deps: serve-index@~1.1.4</li> <li>deps: serve-static@~1.4.1</li> </ul> </li> <li>deps: depd@0.4.3<ul> <li>Fix exception when global <code>Error.stackTraceLimit</code> is too low</li> </ul> </li> <li>deps: send@0.7.1<ul> <li>deps: depd@0.4.3</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#3150-2014-07-22","title":"3.15.0 / 2014-07-22","text":"<ul> <li>Fix <code>req.protocol</code> for proxy-direct connections</li> <li>Pass options from <code>res.sendfile</code> to <code>send</code></li> <li>deps: connect@2.24.0<ul> <li>deps: body-parser@~1.5.0</li> <li>deps: compression@~1.0.9</li> <li>deps: connect-timeout@~1.2.1</li> <li>deps: debug@1.0.4</li> <li>deps: depd@0.4.2</li> <li>deps: express-session@~1.7.0</li> <li>deps: finalhandler@0.1.0</li> <li>deps: method-override@~2.1.2</li> <li>deps: morgan@~1.2.0</li> <li>deps: multiparty@3.3.1</li> <li>deps: parseurl@~1.2.0</li> <li>deps: serve-static@~1.4.0</li> </ul> </li> <li>deps: debug@1.0.4</li> <li>deps: depd@0.4.2<ul> <li>Add <code>TRACE_DEPRECATION</code> environment variable</li> <li>Remove non-standard grey color from color output</li> <li>Support <code>--no-deprecation</code> argument</li> <li>Support <code>--trace-deprecation</code> argument</li> </ul> </li> <li>deps: parseurl@~1.2.0<ul> <li>Cache URLs based on original value</li> <li>Remove no-longer-needed URL mis-parse work-around</li> <li>Simplify the \"fast-path\" <code>RegExp</code></li> </ul> </li> <li>deps: send@0.7.0<ul> <li>Add <code>dotfiles</code> option</li> <li>Cap <code>maxAge</code> value to 1 year</li> <li>deps: debug@1.0.4</li> <li>deps: depd@0.4.2</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#3140-2014-07-11","title":"3.14.0 / 2014-07-11","text":"<ul> <li>add explicit \"Rosetta Flash JSONP abuse\" protection</li> <li>previous versions are not vulnerable; this is just explicit protection</li> <li>deprecate <code>res.redirect(url, status)</code> -- use <code>res.redirect(status, url)</code> instead</li> <li>fix <code>res.send(status, num)</code> to send <code>num</code> as json (not error)</li> <li>remove unnecessary escaping when <code>res.jsonp</code> returns JSON response</li> <li>deps: basic-auth@1.0.0</li> <li>support empty password</li> <li>support empty username</li> <li>deps: connect@2.23.0</li> <li>deps: debug@1.0.3</li> <li>deps: express-session@~1.6.4</li> <li>deps: method-override@~2.1.0</li> <li>deps: parseurl@~1.1.3</li> <li>deps: serve-static@~1.3.1</li> <li>deps: debug@1.0.3<ul> <li>Add support for multiple wildcards in namespaces</li> </ul> </li> <li>deps: methods@1.1.0<ul> <li>add <code>CONNECT</code></li> </ul> </li> <li>deps: parseurl@~1.1.3<ul> <li>faster parsing of href-only URLs</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#3130-2014-07-03","title":"3.13.0 / 2014-07-03","text":"<ul> <li>add deprecation message to <code>app.configure</code></li> <li>add deprecation message to <code>req.auth</code></li> <li>use <code>basic-auth</code> to parse <code>Authorization</code> header</li> <li>deps: connect@2.22.0</li> <li>deps: csurf@~1.3.0</li> <li>deps: express-session@~1.6.1</li> <li>deps: multiparty@3.3.0</li> <li>deps: serve-static@~1.3.0</li> <li>deps: send@0.5.0</li> <li>Accept string for <code>maxage</code> (converted by <code>ms</code>)</li> <li>Include link in default redirect response</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#3121-2014-06-26","title":"3.12.1 / 2014-06-26","text":"<ul> <li>deps: connect@2.21.1</li> <li>deps: cookie-parser@1.3.2</li> <li>deps: cookie-signature@1.0.4</li> <li>deps: express-session@~1.5.2</li> <li>deps: type-is@~1.3.2</li> <li>deps: cookie-signature@1.0.4</li> <li>fix for timing attacks</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#3120-2014-06-21","title":"3.12.0 / 2014-06-21","text":"<ul> <li>use <code>media-typer</code> to alter content-type charset</li> <li>deps: connect@2.21.0</li> <li>deprecate <code>connect(middleware)</code> -- use <code>app.use(middleware)</code> instead</li> <li>deprecate <code>connect.createServer()</code> -- use <code>connect()</code> instead</li> <li>fix <code>res.setHeader()</code> patch to work with with get -&gt; append -&gt; set pattern</li> <li>deps: compression@~1.0.8</li> <li>deps: errorhandler@~1.1.1</li> <li>deps: express-session@~1.5.0</li> <li>deps: serve-index@~1.1.3</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#3110-2014-06-19","title":"3.11.0 / 2014-06-19","text":"<ul> <li>deprecate things with <code>depd</code> module</li> <li>deps: buffer-crc32@0.2.3</li> <li>deps: connect@2.20.2</li> <li>deprecate <code>verify</code> option to <code>json</code> -- use <code>body-parser</code> npm module instead</li> <li>deprecate <code>verify</code> option to <code>urlencoded</code> -- use <code>body-parser</code> npm module instead</li> <li>deprecate things with <code>depd</code> module</li> <li>use <code>finalhandler</code> for final response handling</li> <li>use <code>media-typer</code> to parse <code>content-type</code> for charset</li> <li>deps: body-parser@1.4.3</li> <li>deps: connect-timeout@1.1.1</li> <li>deps: cookie-parser@1.3.1</li> <li>deps: csurf@1.2.2</li> <li>deps: errorhandler@1.1.0</li> <li>deps: express-session@1.4.0</li> <li>deps: multiparty@3.2.9</li> <li>deps: serve-index@1.1.2</li> <li>deps: type-is@1.3.1</li> <li>deps: vhost@2.0.0</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#3105-2014-06-11","title":"3.10.5 / 2014-06-11","text":"<ul> <li>deps: connect@2.19.6</li> <li>deps: body-parser@1.3.1</li> <li>deps: compression@1.0.7</li> <li>deps: debug@1.0.2</li> <li>deps: serve-index@1.1.1</li> <li>deps: serve-static@1.2.3</li> <li>deps: debug@1.0.2</li> <li>deps: send@0.4.3</li> <li>Do not throw uncatchable error on file open race condition</li> <li>Use <code>escape-html</code> for HTML escaping</li> <li>deps: debug@1.0.2</li> <li>deps: finished@1.2.2</li> <li>deps: fresh@0.2.2</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#3104-2014-06-09","title":"3.10.4 / 2014-06-09","text":"<ul> <li>deps: connect@2.19.5</li> <li>fix \"event emitter leak\" warnings</li> <li>deps: csurf@1.2.1</li> <li>deps: debug@1.0.1</li> <li>deps: serve-static@1.2.2</li> <li>deps: type-is@1.2.1</li> <li>deps: debug@1.0.1</li> <li>deps: send@0.4.2</li> <li>fix \"event emitter leak\" warnings</li> <li>deps: finished@1.2.1</li> <li>deps: debug@1.0.1</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#3103-2014-06-05","title":"3.10.3 / 2014-06-05","text":"<ul> <li>use <code>vary</code> module for <code>res.vary</code></li> <li>deps: connect@2.19.4</li> <li>deps: errorhandler@1.0.2</li> <li>deps: method-override@2.0.2</li> <li>deps: serve-favicon@2.0.1</li> <li>deps: debug@1.0.0</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#3102-2014-06-03","title":"3.10.2 / 2014-06-03","text":"<ul> <li>deps: connect@2.19.3</li> <li>deps: compression@1.0.6</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#3101-2014-06-03","title":"3.10.1 / 2014-06-03","text":"<ul> <li>deps: connect@2.19.2</li> <li>deps: compression@1.0.4</li> <li>deps: proxy-addr@1.0.1</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#3100-2014-06-02","title":"3.10.0 / 2014-06-02","text":"<ul> <li>deps: connect@2.19.1</li> <li>deprecate <code>methodOverride()</code> -- use <code>method-override</code> npm module instead</li> <li>deps: body-parser@1.3.0</li> <li>deps: method-override@2.0.1</li> <li>deps: multiparty@3.2.8</li> <li>deps: response-time@2.0.0</li> <li>deps: serve-static@1.2.1</li> <li>deps: methods@1.0.1</li> <li>deps: send@0.4.1</li> <li>Send <code>max-age</code> in <code>Cache-Control</code> in correct format</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#390-2014-05-30","title":"3.9.0 / 2014-05-30","text":"<ul> <li>custom etag control with <code>app.set('etag', val)</code></li> <li><code>app.set('etag', function(body, encoding){ return '\"etag\"' })</code> custom etag generation</li> <li><code>app.set('etag', 'weak')</code> weak tag</li> <li><code>app.set('etag', 'strong')</code> strong etag</li> <li><code>app.set('etag', false)</code> turn off</li> <li><code>app.set('etag', true)</code> standard etag</li> <li>Include ETag in HEAD requests</li> <li>mark <code>res.send</code> ETag as weak and reduce collisions</li> <li>update connect to 2.18.0</li> <li>deps: compression@1.0.3</li> <li>deps: serve-index@1.1.0</li> <li>deps: serve-static@1.2.0</li> <li>update send to 0.4.0</li> <li>Calculate ETag with md5 for reduced collisions</li> <li>Ignore stream errors after request ends</li> <li>deps: debug@0.8.1</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#381-2014-05-27","title":"3.8.1 / 2014-05-27","text":"<ul> <li>update connect to 2.17.3</li> <li>deps: body-parser@1.2.2</li> <li>deps: express-session@1.2.1</li> <li>deps: method-override@1.0.2</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#380-2014-05-21","title":"3.8.0 / 2014-05-21","text":"<ul> <li>keep previous <code>Content-Type</code> for <code>res.jsonp</code></li> <li>set proper <code>charset</code> in <code>Content-Type</code> for <code>res.send</code></li> <li>update connect to 2.17.1</li> <li>fix <code>res.charset</code> appending charset when <code>content-type</code> has one</li> <li>deps: express-session@1.2.0</li> <li>deps: morgan@1.1.1</li> <li>deps: serve-index@1.0.3</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#370-2014-05-18","title":"3.7.0 / 2014-05-18","text":"<ul> <li>proper proxy trust with <code>app.set('trust proxy', trust)</code></li> <li><code>app.set('trust proxy', 1)</code> trust first hop</li> <li><code>app.set('trust proxy', 'loopback')</code> trust loopback addresses</li> <li><code>app.set('trust proxy', '10.0.0.1')</code> trust single IP</li> <li><code>app.set('trust proxy', '10.0.0.1/16')</code> trust subnet</li> <li><code>app.set('trust proxy', '10.0.0.1, 10.0.0.2')</code> trust list</li> <li><code>app.set('trust proxy', false)</code> turn off</li> <li><code>app.set('trust proxy', true)</code> trust everything</li> <li>update connect to 2.16.2</li> <li>deprecate <code>res.headerSent</code> -- use <code>res.headersSent</code></li> <li>deprecate <code>res.on(\"header\")</code> -- use on-headers module instead</li> <li>fix edge-case in <code>res.appendHeader</code> that would append in wrong order</li> <li>json: use body-parser</li> <li>urlencoded: use body-parser</li> <li>dep: bytes@1.0.0</li> <li>dep: cookie-parser@1.1.0</li> <li>dep: csurf@1.2.0</li> <li>dep: express-session@1.1.0</li> <li>dep: method-override@1.0.1</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#360-2014-05-09","title":"3.6.0 / 2014-05-09","text":"<ul> <li>deprecate <code>app.del()</code> -- use <code>app.delete()</code> instead</li> <li>deprecate <code>res.json(obj, status)</code> -- use <code>res.json(status, obj)</code> instead</li> <li>the edge-case <code>res.json(status, num)</code> requires <code>res.status(status).json(num)</code></li> <li>deprecate <code>res.jsonp(obj, status)</code> -- use <code>res.jsonp(status, obj)</code> instead</li> <li>the edge-case <code>res.jsonp(status, num)</code> requires <code>res.status(status).jsonp(num)</code></li> <li>support PURGE method</li> <li>add <code>app.purge</code></li> <li>add <code>router.purge</code></li> <li>include PURGE in <code>app.all</code></li> <li>update connect to 2.15.0</li> <li>Add <code>res.appendHeader</code></li> <li>Call error stack even when response has been sent</li> <li>Patch <code>res.headerSent</code> to return Boolean</li> <li>Patch <code>res.headersSent</code> for node.js 0.8</li> <li>Prevent default 404 handler after response sent</li> <li>dep: compression@1.0.2</li> <li>dep: connect-timeout@1.1.0</li> <li>dep: debug@^0.8.0</li> <li>dep: errorhandler@1.0.1</li> <li>dep: express-session@1.0.4</li> <li>dep: morgan@1.0.1</li> <li>dep: serve-favicon@2.0.0</li> <li>dep: serve-index@1.0.2</li> <li>update debug to 0.8.0</li> <li>add <code>enable()</code> method</li> <li>change from stderr to stdout</li> <li>update methods to 1.0.0</li> <li>add PURGE</li> <li>update mkdirp to 0.5.0</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#353-2014-05-08","title":"3.5.3 / 2014-05-08","text":"<ul> <li>fix <code>req.host</code> for IPv6 literals</li> <li>fix <code>res.jsonp</code> error if callback param is object</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#352-2014-04-24","title":"3.5.2 / 2014-04-24","text":"<ul> <li>update connect to 2.14.5</li> <li>update cookie to 0.1.2</li> <li>update mkdirp to 0.4.0</li> <li>update send to 0.3.0</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#351-2014-03-25","title":"3.5.1 / 2014-03-25","text":"<ul> <li>pin less-middleware in generated app</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#350-2014-03-06","title":"3.5.0 / 2014-03-06","text":"<ul> <li>bump deps</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#348-2014-01-13","title":"3.4.8 / 2014-01-13","text":"<ul> <li>prevent incorrect automatic OPTIONS responses #1868 @dpatti</li> <li>update binary and examples for jade 1.0 #1876 @yossi, #1877 @reqshark, #1892 @matheusazzi</li> <li>throw 400 in case of malformed paths @rlidwka</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#347-2013-12-10","title":"3.4.7 / 2013-12-10","text":"<ul> <li>update connect</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#346-2013-12-01","title":"3.4.6 / 2013-12-01","text":"<ul> <li>update connect (raw-body)</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#345-2013-11-27","title":"3.4.5 / 2013-11-27","text":"<ul> <li>update connect</li> <li>res.location: remove leading ./ #1802 @kapouer</li> <li>res.redirect: fix `res.redirect('toString') #1829 @michaelficarra</li> <li>res.send: always send ETag when content-length &gt; 0</li> <li>router: add Router.all() method</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#344-2013-10-29","title":"3.4.4 / 2013-10-29","text":"<ul> <li>update connect</li> <li>update supertest</li> <li>update methods</li> <li>express(1): replace bodyParser() with urlencoded() and json() #1795 @chirag04</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#343-2013-10-23","title":"3.4.3 / 2013-10-23","text":"<ul> <li>update connect</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#342-2013-10-18","title":"3.4.2 / 2013-10-18","text":"<ul> <li>update connect</li> <li>downgrade commander</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#341-2013-10-15","title":"3.4.1 / 2013-10-15","text":"<ul> <li>update connect</li> <li>update commander</li> <li>jsonp: check if callback is a function</li> <li>router: wrap encodeURIComponent in a try/catch #1735 (@lxe)</li> <li>res.format: now includes charset @1747 (@sorribas)</li> <li>res.links: allow multiple calls @1746 (@sorribas)</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#340-2013-09-07","title":"3.4.0 / 2013-09-07","text":"<ul> <li>add res.vary(). Closes #1682</li> <li>update connect</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#338-2013-09-02","title":"3.3.8 / 2013-09-02","text":"<ul> <li>update connect</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#337-2013-08-28","title":"3.3.7 / 2013-08-28","text":"<ul> <li>update connect</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#336-2013-08-27","title":"3.3.6 / 2013-08-27","text":"<ul> <li>Revert \"remove charset from json responses. Closes #1631\" (causes issues in some clients)</li> <li>add: req.accepts take an argument list</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#334-2013-07-08","title":"3.3.4 / 2013-07-08","text":"<ul> <li>update send and connect</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#333-2013-07-04","title":"3.3.3 / 2013-07-04","text":"<ul> <li>update connect</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#332-2013-07-03","title":"3.3.2 / 2013-07-03","text":"<ul> <li>update connect</li> <li>update send</li> <li>remove .version export</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#331-2013-06-27","title":"3.3.1 / 2013-06-27","text":"<ul> <li>update connect</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#330-2013-06-26","title":"3.3.0 / 2013-06-26","text":"<ul> <li>update connect</li> <li>add support for multiple X-Forwarded-Proto values. Closes #1646</li> <li>change: remove charset from json responses. Closes #1631</li> <li>change: return actual booleans from req.accept* functions</li> <li>fix jsonp callback array throw</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#326-2013-06-02","title":"3.2.6 / 2013-06-02","text":"<ul> <li>update connect</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#325-2013-05-21","title":"3.2.5 / 2013-05-21","text":"<ul> <li>update connect</li> <li>update node-cookie</li> <li>add: throw a meaningful error when there is no default engine</li> <li>change generation of ETags with res.send() to GET requests only. Closes #1619</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#324-2013-05-09","title":"3.2.4 / 2013-05-09","text":"<ul> <li>fix <code>req.subdomains</code> when no Host is present</li> <li>fix <code>req.host</code> when no Host is present, return undefined</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#323-2013-05-07","title":"3.2.3 / 2013-05-07","text":"<ul> <li>update connect / qs</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#322-2013-05-03","title":"3.2.2 / 2013-05-03","text":"<ul> <li>update qs</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#321-2013-04-29","title":"3.2.1 / 2013-04-29","text":"<ul> <li>add app.VERB() paths array deprecation warning</li> <li>update connect</li> <li>update qs and remove all ~ semver crap</li> <li>fix: accept number as value of Signed Cookie</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#320-2013-04-15","title":"3.2.0 / 2013-04-15","text":"<ul> <li>add \"view\" constructor setting to override view behaviour</li> <li>add req.acceptsEncoding(name)</li> <li>add req.acceptedEncodings</li> <li>revert cookie signature change causing session race conditions</li> <li>fix sorting of Accept values of the same quality</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#312-2013-04-12","title":"3.1.2 / 2013-04-12","text":"<ul> <li>add support for custom Accept parameters</li> <li>update cookie-signature</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#311-2013-04-01","title":"3.1.1 / 2013-04-01","text":"<ul> <li>add X-Forwarded-Host support to <code>req.host</code></li> <li>fix relative redirects</li> <li>update mkdirp</li> <li>update buffer-crc32</li> <li>remove legacy app.configure() method from app template.</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#310-2013-01-25","title":"3.1.0 / 2013-01-25","text":"<ul> <li>add support for leading \".\" in \"view engine\" setting</li> <li>add array support to <code>res.set()</code></li> <li>add node 0.8.x to travis.yml</li> <li>add \"subdomain offset\" setting for tweaking <code>req.subdomains</code></li> <li>add <code>res.location(url)</code> implementing <code>res.redirect()</code>-like setting of Location</li> <li>use app.get() for x-powered-by setting for inheritance</li> <li>fix colons in passwords for <code>req.auth</code></li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#306-2013-01-04","title":"3.0.6 / 2013-01-04","text":"<ul> <li>add http verb methods to Router</li> <li>update connect</li> <li>fix mangling of the <code>res.cookie()</code> options object</li> <li>fix jsonp whitespace escape. Closes #1132</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#305-2012-12-19","title":"3.0.5 / 2012-12-19","text":"<ul> <li>add throwing when a non-function is passed to a route</li> <li>fix: explicitly remove Transfer-Encoding header from 204 and 304 responses</li> <li>revert \"add 'etag' option\"</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#304-2012-12-05","title":"3.0.4 / 2012-12-05","text":"<ul> <li>add 'etag' option to disable <code>res.send()</code> Etags</li> <li>add escaping of urls in text/plain in <code>res.redirect()</code>     for old browsers interpreting as html</li> <li>change crc32 module for a more liberal license</li> <li>update connect</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#303-2012-11-13","title":"3.0.3 / 2012-11-13","text":"<ul> <li>update connect</li> <li>update cookie module</li> <li>fix cookie max-age</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#302-2012-11-08","title":"3.0.2 / 2012-11-08","text":"<ul> <li>add OPTIONS to cors example. Closes #1398</li> <li>fix route chaining regression. Closes #1397</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#301-2012-11-01","title":"3.0.1 / 2012-11-01","text":"<ul> <li>update connect</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#300-2012-10-23","title":"3.0.0 / 2012-10-23","text":"<ul> <li>add <code>make clean</code></li> <li>add \"Basic\" check to req.auth</li> <li>add <code>req.auth</code> test coverage</li> <li>add cb &amp;&amp; cb(payload) to <code>res.jsonp()</code>. Closes #1374</li> <li>add backwards compat for <code>res.redirect()</code> status. Closes #1336</li> <li>add support for <code>res.json()</code> to retain previously defined Content-Types. Closes #1349</li> <li>update connect</li> <li>change <code>res.redirect()</code> to utilize a pathname-relative Location again. Closes #1382</li> <li>remove non-primitive string support for <code>res.send()</code></li> <li>fix view-locals example. Closes #1370</li> <li>fix route-separation example</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#300rc5-2012-09-18","title":"3.0.0rc5 / 2012-09-18","text":"<ul> <li>update connect</li> <li>add redis search example</li> <li>add static-files example</li> <li>add \"x-powered-by\" setting (<code>app.disable('x-powered-by')</code>)</li> <li>add \"application/octet-stream\" redirect Accept test case. Closes #1317</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#300rc4-2012-08-30","title":"3.0.0rc4 / 2012-08-30","text":"<ul> <li>add <code>res.jsonp()</code>. Closes #1307</li> <li>add \"verbose errors\" option to error-pages example</li> <li>add another route example to express(1) so people are not so confused</li> <li>add redis online user activity tracking example</li> <li>update connect dep</li> <li>fix etag quoting. Closes #1310</li> <li>fix error-pages 404 status</li> <li>fix jsonp callback char restrictions</li> <li>remove old OPTIONS default response</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#300rc3-2012-08-13","title":"3.0.0rc3 / 2012-08-13","text":"<ul> <li>update connect dep</li> <li>fix signed cookies to work with <code>connect.cookieParser()</code> (\"s:\" prefix was missing) [tnydwrds]</li> <li>fix <code>res.render()</code> clobbering of \"locals\"</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#300rc2-2012-08-03","title":"3.0.0rc2 / 2012-08-03","text":"<ul> <li>add CORS example</li> <li>update connect dep</li> <li>deprecate <code>.createServer()</code> &amp; remove old stale examples</li> <li>fix: escape <code>res.redirect()</code> link</li> <li>fix vhost example</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#300rc1-2012-07-24","title":"3.0.0rc1 / 2012-07-24","text":"<ul> <li>add more examples to view-locals</li> <li>add scheme-relative redirects (<code>res.redirect(\"//foo.com\")</code>) support</li> <li>update cookie dep</li> <li>update connect dep</li> <li>update send dep</li> <li>fix <code>express(1)</code> -h flag, use -H for hogan. Closes #1245</li> <li>fix <code>res.sendfile()</code> socket error handling regression</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#300beta7-2012-07-16","title":"3.0.0beta7 / 2012-07-16","text":"<ul> <li>update connect dep for <code>send()</code> root normalization regression</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#300beta6-2012-07-13","title":"3.0.0beta6 / 2012-07-13","text":"<ul> <li>add <code>err.view</code> property for view errors. Closes #1226</li> <li>add \"jsonp callback name\" setting</li> <li>add support for \"/foo/:bar*\" non-greedy matches</li> <li>change <code>res.sendfile()</code> to use <code>send()</code> module</li> <li>change <code>res.send</code> to use \"response-send\" module</li> <li>remove <code>app.locals.use</code> and <code>res.locals.use</code>, use regular middleware</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#300beta5-2012-07-03","title":"3.0.0beta5 / 2012-07-03","text":"<ul> <li>add \"make check\" support</li> <li>add route-map example</li> <li>add <code>res.json(obj, status)</code> support back for BC</li> <li>add \"methods\" dep, remove internal methods module</li> <li>update connect dep</li> <li>update auth example to utilize cores pbkdf2</li> <li>updated tests to use \"supertest\"</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#300beta4-2012-06-25","title":"3.0.0beta4 / 2012-06-25","text":"<ul> <li>Added <code>req.auth</code></li> <li>Added <code>req.range(size)</code></li> <li>Added <code>res.links(obj)</code></li> <li>Added <code>res.send(body, status)</code> support back for backwards compat</li> <li>Added <code>.default()</code> support to <code>res.format()</code></li> <li>Added 2xx / 304 check to <code>req.fresh</code></li> <li>Revert \"Added + support to the router\"</li> <li>Fixed <code>res.send()</code> freshness check, respect res.statusCode</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#300beta3-2012-06-15","title":"3.0.0beta3 / 2012-06-15","text":"<ul> <li>Added hogan <code>--hjs</code> to express(1) [nullfirm]</li> <li>Added another example to content-negotiation</li> <li>Added <code>fresh</code> dep</li> <li>Changed: <code>res.send()</code> always checks freshness</li> <li>Fixed: expose connects mime module. Closes #1165</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#300beta2-2012-06-06","title":"3.0.0beta2 / 2012-06-06","text":"<ul> <li>Added <code>+</code> support to the router</li> <li>Added <code>req.host</code></li> <li>Changed <code>req.param()</code> to check route first</li> <li>Update connect dep</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#300beta1-2012-06-01","title":"3.0.0beta1 / 2012-06-01","text":"<ul> <li>Added <code>res.format()</code> callback to override default 406 behaviour</li> <li>Fixed <code>res.redirect()</code> 406. Closes #1154</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#300alpha5-2012-05-30","title":"3.0.0alpha5 / 2012-05-30","text":"<ul> <li>Added <code>req.ip</code></li> <li>Added <code>{ signed: true }</code> option to <code>res.cookie()</code></li> <li>Removed <code>res.signedCookie()</code></li> <li>Changed: dont reverse <code>req.ips</code></li> <li>Fixed \"trust proxy\" setting check for <code>req.ips</code></li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#300alpha4-2012-05-09","title":"3.0.0alpha4 / 2012-05-09","text":"<ul> <li>Added: allow <code>[]</code> in jsonp callback. Closes #1128</li> <li>Added <code>PORT</code> env var support in generated template. Closes #1118 [benatkin]</li> <li>Updated: connect 2.2.2</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#300alpha3-2012-05-04","title":"3.0.0alpha3 / 2012-05-04","text":"<ul> <li>Added public <code>app.routes</code>. Closes #887</li> <li>Added view-locals example</li> <li>Added mvc example</li> <li>Added <code>res.locals.use()</code>. Closes #1120</li> <li>Added conditional-GET support to <code>res.send()</code></li> <li>Added: coerce <code>res.set()</code> values to strings</li> <li>Changed: moved <code>static()</code> in generated apps below router</li> <li>Changed: <code>res.send()</code> only set ETag when not previously set</li> <li>Changed connect 2.2.1 dep</li> <li>Changed: <code>make test</code> now runs unit / acceptance tests</li> <li>Fixed req/res proto inheritance</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#300alpha2-2012-04-26","title":"3.0.0alpha2 / 2012-04-26","text":"<ul> <li>Added <code>make benchmark</code> back</li> <li>Added <code>res.send()</code> support for <code>String</code> objects</li> <li>Added client-side data exposing example</li> <li>Added <code>res.header()</code> and <code>req.header()</code> aliases for BC</li> <li>Added <code>express.createServer()</code> for BC</li> <li>Perf: memoize parsed urls</li> <li>Perf: connect 2.2.0 dep</li> <li>Changed: make <code>expressInit()</code> middleware self-aware</li> <li>Fixed: use app.get() for all core settings</li> <li>Fixed redis session example</li> <li>Fixed session example. Closes #1105</li> <li>Fixed generated express dep. Closes #1078</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#300alpha1-2012-04-15","title":"3.0.0alpha1 / 2012-04-15","text":"<ul> <li>Added <code>app.locals.use(callback)</code></li> <li>Added <code>app.locals</code> object</li> <li>Added <code>app.locals(obj)</code></li> <li>Added <code>res.locals</code> object</li> <li>Added <code>res.locals(obj)</code></li> <li>Added <code>res.format()</code> for content-negotiation</li> <li>Added <code>app.engine()</code></li> <li>Added <code>res.cookie()</code> JSON cookie support</li> <li>Added \"trust proxy\" setting</li> <li>Added <code>req.subdomains</code></li> <li>Added <code>req.protocol</code></li> <li>Added <code>req.secure</code></li> <li>Added <code>req.path</code></li> <li>Added <code>req.ips</code></li> <li>Added <code>req.fresh</code></li> <li>Added <code>req.stale</code></li> <li>Added comma-delimited / array support for <code>req.accepts()</code></li> <li>Added debug instrumentation</li> <li>Added <code>res.set(obj)</code></li> <li>Added <code>res.set(field, value)</code></li> <li>Added <code>res.get(field)</code></li> <li>Added <code>app.get(setting)</code>. Closes #842</li> <li>Added <code>req.acceptsLanguage()</code></li> <li>Added <code>req.acceptsCharset()</code></li> <li>Added <code>req.accepted</code></li> <li>Added <code>req.acceptedLanguages</code></li> <li>Added <code>req.acceptedCharsets</code></li> <li>Added \"json replacer\" setting</li> <li>Added \"json spaces\" setting</li> <li>Added X-Forwarded-Proto support to <code>res.redirect()</code>. Closes #92</li> <li>Added <code>--less</code> support to express(1)</li> <li>Added <code>express.response</code> prototype</li> <li>Added <code>express.request</code> prototype</li> <li>Added <code>express.application</code> prototype</li> <li>Added <code>app.path()</code></li> <li>Added <code>app.render()</code></li> <li>Added <code>res.type()</code> to replace <code>res.contentType()</code></li> <li>Changed: <code>res.redirect()</code> to add relative support</li> <li>Changed: enable \"jsonp callback\" by default</li> <li>Changed: renamed \"case sensitive routes\" to \"case sensitive routing\"</li> <li>Rewrite of all tests with mocha</li> <li>Removed \"root\" setting</li> <li>Removed <code>res.redirect('home')</code> support</li> <li>Removed <code>req.notify()</code></li> <li>Removed <code>app.register()</code></li> <li>Removed <code>app.redirect()</code></li> <li>Removed <code>app.is()</code></li> <li>Removed <code>app.helpers()</code></li> <li>Removed <code>app.dynamicHelpers()</code></li> <li>Fixed <code>res.sendfile()</code> with non-GET. Closes #723</li> <li>Fixed express(1) public dir for windows. Closes #866</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#259-2012-04-02","title":"2.5.9/ 2012-04-02","text":"<ul> <li>Added support for PURGE request method [pbuyle]</li> <li>Fixed <code>express(1)</code> generated app <code>app.address()</code> before <code>listening</code> [mmalecki]</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#258-2012-02-08","title":"2.5.8 / 2012-02-08","text":"<ul> <li>Update mkdirp dep. Closes #991</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#257-2012-02-06","title":"2.5.7 / 2012-02-06","text":"<ul> <li>Fixed <code>app.all</code> duplicate DELETE requests [mscdex]</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#256-2012-01-13","title":"2.5.6 / 2012-01-13","text":"<ul> <li>Updated hamljs dev dep. Closes #953</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#255-2012-01-08","title":"2.5.5 / 2012-01-08","text":"<ul> <li>Fixed: set <code>filename</code> on cached templates [matthewleon]</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#254-2012-01-02","title":"2.5.4 / 2012-01-02","text":"<ul> <li>Fixed <code>express(1)</code> eol on 0.4.x. Closes #947</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#253-2011-12-30","title":"2.5.3 / 2011-12-30","text":"<ul> <li>Fixed <code>req.is()</code> when a charset is present</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#252-2011-12-10","title":"2.5.2 / 2011-12-10","text":"<ul> <li>Fixed: express(1) LF -&gt; CRLF for windows</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#251-2011-11-17","title":"2.5.1 / 2011-11-17","text":"<ul> <li>Changed: updated connect to 1.8.x</li> <li>Removed sass.js support from express(1)</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#250-2011-10-24","title":"2.5.0 / 2011-10-24","text":"<ul> <li>Added ./routes dir for generated app by default</li> <li>Added npm install reminder to express(1) app gen</li> <li>Added 0.5.x support</li> <li>Removed <code>make test-cov</code> since it wont work with node 0.5.x</li> <li>Fixed express(1) public dir for windows. Closes #866</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#247-2011-10-05","title":"2.4.7 / 2011-10-05","text":"<ul> <li>Added mkdirp to express(1). Closes #795</li> <li>Added simple json-config example</li> <li>Added  shorthand for the parsed request's pathname via <code>req.path</code></li> <li>Changed connect dep to 1.7.x to fix npm issue...</li> <li>Fixed <code>res.redirect()</code> HEAD support. [reported by xerox]</li> <li>Fixed <code>req.flash()</code>, only escape args</li> <li>Fixed absolute path checking on windows. Closes #829 [reported by andrewpmckenzie]</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#246-2011-08-22","title":"2.4.6 / 2011-08-22","text":"<ul> <li>Fixed multiple param callback regression. Closes #824 [reported by TroyGoode]</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#245-2011-08-19","title":"2.4.5 / 2011-08-19","text":"<ul> <li>Added support for routes to handle errors. Closes #809</li> <li>Added <code>app.routes.all()</code>. Closes #803</li> <li>Added \"basepath\" setting to work in conjunction with reverse proxies etc.</li> <li>Refactored <code>Route</code> to use a single array of callbacks</li> <li>Added support for multiple callbacks for <code>app.param()</code>. Closes #801 Closes #805</li> <li>Changed: removed .call(self) for route callbacks</li> <li>Dependency: <code>qs &gt;= 0.3.1</code></li> <li>Fixed <code>res.redirect()</code> on windows due to <code>join()</code> usage. Closes #808</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#244-2011-08-05","title":"2.4.4 / 2011-08-05","text":"<ul> <li>Fixed <code>res.header()</code> intention of a set, even when <code>undefined</code></li> <li>Fixed <code>*</code>, value no longer required</li> <li>Fixed <code>res.send(204)</code> support. Closes #771</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#243-2011-07-14","title":"2.4.3 / 2011-07-14","text":"<ul> <li>Added docs for <code>status</code> option special-case. Closes #739</li> <li>Fixed <code>options.filename</code>, exposing the view path to template engines</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#242-2011-07-06","title":"2.4.2. / 2011-07-06","text":"<ul> <li>Revert \"removed jsonp stripping\" for XSS</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#241-2011-07-06","title":"2.4.1 / 2011-07-06","text":"<ul> <li>Added <code>res.json()</code> JSONP support. Closes #737</li> <li>Added extending-templates example. Closes #730</li> <li>Added \"strict routing\" setting for trailing slashes</li> <li>Added support for multiple envs in <code>app.configure()</code> calls. Closes #735</li> <li>Changed: <code>res.send()</code> using <code>res.json()</code></li> <li>Changed: when cookie <code>path === null</code> don't default it</li> <li>Changed; default cookie path to \"home\" setting. Closes #731</li> <li>Removed pids/logs creation from express(1)</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#240-2011-06-28","title":"2.4.0 / 2011-06-28","text":"<ul> <li>Added chainable <code>res.status(code)</code></li> <li>Added <code>res.json()</code>, an explicit version of <code>res.send(obj)</code></li> <li>Added simple web-service example</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#2312-2011-06-22","title":"2.3.12 / 2011-06-22","text":"<ul> <li>#express is now on freenode! come join!</li> <li>Added <code>req.get(field, param)</code></li> <li>Added links to Japanese documentation, thanks @hideyukisaito!</li> <li>Added; the <code>express(1)</code> generated app outputs the env</li> <li>Added <code>content-negotiation</code> example</li> <li>Dependency: connect &gt;= 1.5.1 &lt; 2.0.0</li> <li>Fixed view layout bug. Closes #720</li> <li>Fixed; ignore body on 304. Closes #701</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#2311-2011-06-04","title":"2.3.11 / 2011-06-04","text":"<ul> <li>Added <code>npm test</code></li> <li>Removed generation of dummy test file from <code>express(1)</code></li> <li>Fixed; <code>express(1)</code> adds express as a dep</li> <li>Fixed; prune on <code>prepublish</code></li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#2310-2011-05-27","title":"2.3.10 / 2011-05-27","text":"<ul> <li>Added <code>req.route</code>, exposing the current route</li> <li>Added package.json generation support to <code>express(1)</code></li> <li>Fixed call to <code>app.param()</code> function for optional params. Closes #682</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#239-2011-05-25","title":"2.3.9 / 2011-05-25","text":"<ul> <li>Fixed bug-ish with <code>../' in</code>res.partial()` calls</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#238-2011-05-24","title":"2.3.8 / 2011-05-24","text":"<ul> <li>Fixed <code>app.options()</code></li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#237-2011-05-23","title":"2.3.7 / 2011-05-23","text":"<ul> <li>Added route <code>Collection</code>, ex: <code>app.get('/user/:id').remove();</code></li> <li>Added support for <code>app.param(fn)</code> to define param logic</li> <li>Removed <code>app.param()</code> support for callback with return value</li> <li>Removed module.parent check from express(1) generated app. Closes #670</li> <li>Refactored router. Closes #639</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#236-2011-05-20","title":"2.3.6 / 2011-05-20","text":"<ul> <li>Changed; using devDependencies instead of git submodules</li> <li>Fixed redis session example</li> <li>Fixed markdown example</li> <li>Fixed view caching, should not be enabled in development</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#235-2011-05-20","title":"2.3.5 / 2011-05-20","text":"<ul> <li>Added export <code>.view</code> as alias for <code>.View</code></li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#234-2011-05-08","title":"2.3.4 / 2011-05-08","text":"<ul> <li>Added <code>./examples/say</code></li> <li>Fixed <code>res.sendfile()</code> bug preventing the transfer of files with spaces</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#233-2011-05-03","title":"2.3.3 / 2011-05-03","text":"<ul> <li>Added \"case sensitive routes\" option.</li> <li>Changed; split methods supported per rfc [slaskis]</li> <li>Fixed route-specific middleware when using the same callback function several times</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#232-2011-04-27","title":"2.3.2 / 2011-04-27","text":"<ul> <li>Fixed view hints</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#231-2011-04-26","title":"2.3.1 / 2011-04-26","text":"<ul> <li>Added <code>app.match()</code> as <code>app.match.all()</code></li> <li>Added <code>app.lookup()</code> as <code>app.lookup.all()</code></li> <li>Added <code>app.remove()</code> for <code>app.remove.all()</code></li> <li>Added <code>app.remove.VERB()</code></li> <li>Fixed template caching collision issue. Closes #644</li> <li>Moved router over from connect and started refactor</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#230-2011-04-25","title":"2.3.0 / 2011-04-25","text":"<ul> <li>Added options support to <code>res.clearCookie()</code></li> <li>Added <code>res.helpers()</code> as alias of <code>res.locals()</code></li> <li>Added; json defaults to UTF-8 with <code>res.send()</code>. Closes #632. [Daniel   * Dependency <code>connect &gt;= 1.4.0</code></li> <li>Changed; auto set Content-Type in res.attachement [Aaron Heckmann]</li> <li>Renamed \"cache views\" to \"view cache\". Closes #628</li> <li>Fixed caching of views when using several apps. Closes #637</li> <li>Fixed gotcha invoking <code>app.param()</code> callbacks once per route middleware. Closes #638</li> <li>Fixed partial lookup precedence. Closes #631 Shaw]</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#222-2011-04-12","title":"2.2.2 / 2011-04-12","text":"<ul> <li>Added second callback support for <code>res.download()</code> connection errors</li> <li>Fixed <code>filename</code> option passing to template engine</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#221-2011-04-04","title":"2.2.1 / 2011-04-04","text":"<ul> <li>Added <code>layout(path)</code> helper to change the layout within a view. Closes #610</li> <li> <p>Fixed <code>partial()</code> collection object support.     Previously only anything with <code>.length</code> would work.     When <code>.length</code> is present one must still be aware of holes,     however now <code>{ collection: {foo: 'bar'}}</code> is valid, exposes     <code>keyInCollection</code> and <code>keysInCollection</code>.</p> </li> <li> <p>Performance improved with better view caching</p> </li> <li>Removed <code>request</code> and <code>response</code> locals</li> <li>Changed; errorHandler page title is now <code>Express</code> instead of <code>Connect</code></li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#220-2011-03-30","title":"2.2.0 / 2011-03-30","text":"<ul> <li>Added <code>app.lookup.VERB()</code>, ex <code>app.lookup.put('/user/:id')</code>. Closes #606</li> <li>Added <code>app.match.VERB()</code>, ex <code>app.match.put('/user/12')</code>. Closes #606</li> <li>Added <code>app.VERB(path)</code> as alias of <code>app.lookup.VERB()</code>.</li> <li>Dependency <code>connect &gt;= 1.2.0</code></li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#211-2011-03-29","title":"2.1.1 / 2011-03-29","text":"<ul> <li>Added; expose <code>err.view</code> object when failing to locate a view</li> <li>Fixed <code>res.partial()</code> call <code>next(err)</code> when no callback is given [reported by aheckmann]</li> <li>Fixed; <code>res.send(undefined)</code> responds with 204 [aheckmann]</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#210-2011-03-24","title":"2.1.0 / 2011-03-24","text":"<ul> <li>Added <code>&lt;root&gt;/_?&lt;name&gt;</code> partial lookup support. Closes #447</li> <li>Added <code>request</code>, <code>response</code>, and <code>app</code> local variables</li> <li>Added <code>settings</code> local variable, containing the app's settings</li> <li>Added <code>req.flash()</code> exception if <code>req.session</code> is not available</li> <li>Added <code>res.send(bool)</code> support (json response)</li> <li>Fixed stylus example for latest version</li> <li>Fixed; wrap try/catch around <code>res.render()</code></li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#200-2011-03-17","title":"2.0.0 / 2011-03-17","text":"<ul> <li>Fixed up index view path alternative.</li> <li>Changed; <code>res.locals()</code> without object returns the locals</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#200rc3-2011-03-17","title":"2.0.0rc3 / 2011-03-17","text":"<ul> <li>Added <code>res.locals(obj)</code> to compliment <code>res.local(key, val)</code></li> <li>Added <code>res.partial()</code> callback support</li> <li>Fixed recursive error reporting issue in <code>res.render()</code></li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#200rc2-2011-03-17","title":"2.0.0rc2 / 2011-03-17","text":"<ul> <li>Changed; <code>partial()</code> \"locals\" are now optional</li> <li>Fixed <code>SlowBuffer</code> support. Closes #584 [reported by tyrda01]</li> <li>Fixed .filename view engine option [reported by drudge]</li> <li>Fixed blog example</li> <li>Fixed <code>{req,res}.app</code> reference when mounting [Ben Weaver]</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#200rc-2011-03-14","title":"2.0.0rc / 2011-03-14","text":"<ul> <li>Fixed; expose <code>HTTPSServer</code> constructor</li> <li>Fixed express(1) default test charset. Closes #579 [reported by secoif]</li> <li>Fixed; default charset to utf-8 instead of utf8 for lame IE [reported by NickP]</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#200beta3-2011-03-09","title":"2.0.0beta3 / 2011-03-09","text":"<ul> <li>Added support for <code>res.contentType()</code> literal     The original <code>res.contentType('.json')</code>,     <code>res.contentType('application/json')</code>, and <code>res.contentType('json')</code>     will work now.</li> <li>Added <code>res.render()</code> status option support back</li> <li>Added charset option for <code>res.render()</code></li> <li>Added <code>.charset</code> support (via connect 1.0.4)</li> <li>Added view resolution hints when in development and a lookup fails</li> <li>Added layout lookup support relative to the page view.     For example while rendering <code>./views/user/index.jade</code> if you create     <code>./views/user/layout.jade</code> it will be used in favour of the root layout.</li> <li>Fixed <code>res.redirect()</code>. RFC states absolute url [reported by unlink]</li> <li>Fixed; default <code>res.send()</code> string charset to utf8</li> <li>Removed <code>Partial</code> constructor (not currently used)</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#200beta2-2011-03-07","title":"2.0.0beta2 / 2011-03-07","text":"<ul> <li>Added res.render() <code>.locals</code> support back to aid in migration process</li> <li>Fixed flash example</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#200beta-2011-03-03","title":"2.0.0beta / 2011-03-03","text":"<ul> <li>Added HTTPS support</li> <li>Added <code>res.cookie()</code> maxAge support</li> <li>Added <code>req.header()</code> Referrer / Referer special-case, either works</li> <li>Added mount support for <code>res.redirect()</code>, now respects the mount-point</li> <li>Added <code>union()</code> util, taking place of <code>merge(clone())</code> combo</li> <li>Added stylus support to express(1) generated app</li> <li>Added secret to session middleware used in examples and generated app</li> <li>Added <code>res.local(name, val)</code> for progressive view locals</li> <li>Added default param support to <code>req.param(name, default)</code></li> <li>Added <code>app.disabled()</code> and <code>app.enabled()</code></li> <li>Added <code>app.register()</code> support for omitting leading \".\", either works</li> <li>Added <code>res.partial()</code>, using the same interface as <code>partial()</code> within a view. Closes #539</li> <li>Added <code>app.param()</code> to map route params to async/sync logic</li> <li>Added; aliased <code>app.helpers()</code> as <code>app.locals()</code>. Closes #481</li> <li>Added extname with no leading \".\" support to <code>res.contentType()</code></li> <li>Added <code>cache views</code> setting, defaulting to enabled in \"production\" env</li> <li>Added index file partial resolution, eg: partial('user') may try views/user/index.jade.</li> <li>Added <code>req.accepts()</code> support for extensions</li> <li>Changed; <code>res.download()</code> and <code>res.sendfile()</code> now utilize Connect's     static file server <code>connect.static.send()</code>.</li> <li>Changed; replaced <code>connect.utils.mime()</code> with npm mime module</li> <li>Changed; allow <code>req.query</code> to be pre-defined (via middleware or other parent</li> <li>Changed view partial resolution, now relative to parent view</li> <li>Changed view engine signature. no longer <code>engine.render(str, options, callback)</code>, now <code>engine.compile(str, options) -&gt; Function</code>, the returned function accepts <code>fn(locals)</code>.</li> <li>Fixed <code>req.param()</code> bug returning Array.prototype methods. Closes #552</li> <li>Fixed; using <code>Stream#pipe()</code> instead of <code>sys.pump()</code> in <code>res.sendfile()</code></li> <li>Fixed; using qs module instead of querystring</li> <li>Fixed; strip unsafe chars from jsonp callbacks</li> <li>Removed \"stream threshold\" setting</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#108-2011-03-01","title":"1.0.8 / 2011-03-01","text":"<ul> <li>Allow <code>req.query</code> to be pre-defined (via middleware or other parent app)</li> <li>\"connect\": \"&gt;= 0.5.0 &lt; 1.0.0\". Closes #547</li> <li>Removed the long deprecated EXPRESS_ENV support</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#107-2011-02-07","title":"1.0.7 / 2011-02-07","text":"<ul> <li>Fixed <code>render()</code> setting inheritance.     Mounted apps would not inherit \"view engine\"</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#106-2011-02-07","title":"1.0.6 / 2011-02-07","text":"<ul> <li>Fixed <code>view engine</code> setting bug when period is in dirname</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#105-2011-02-05","title":"1.0.5 / 2011-02-05","text":"<ul> <li>Added secret to generated app <code>session()</code> call</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#104-2011-02-05","title":"1.0.4 / 2011-02-05","text":"<ul> <li>Added <code>qs</code> dependency to package.json</li> <li>Fixed namespaced <code>require()</code>s for latest connect support</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#103-2011-01-13","title":"1.0.3 / 2011-01-13","text":"<ul> <li>Remove unsafe characters from JSONP callback names [Ryan Grove]</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#102-2011-01-10","title":"1.0.2 / 2011-01-10","text":"<ul> <li>Removed nested require, using <code>connect.router</code></li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#101-2010-12-29","title":"1.0.1 / 2010-12-29","text":"<ul> <li>Fixed for middleware stacked via <code>createServer()</code>     previously the <code>foo</code> middleware passed to <code>createServer(foo)</code>     would not have access to Express methods such as <code>res.send()</code>     or props like <code>req.query</code> etc.</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#100-2010-11-16","title":"1.0.0 / 2010-11-16","text":"<ul> <li>Added; deduce partial object names from the last segment.     For example by default <code>partial('forum/post', postObject)</code> will     give you the post object, providing a meaningful default.</li> <li>Added http status code string representation to <code>res.redirect()</code> body</li> <li>Added; <code>res.redirect()</code> supporting text/plain and text/html via Accept.</li> <li>Added <code>req.is()</code> to aid in content negotiation</li> <li>Added partial local inheritance [suggested by masylum]. Closes #102     providing access to parent template locals.</li> <li>Added -s, --session[s] flag to express(1) to add session related middleware</li> <li>Added --template flag to express(1) to specify the     template engine to use.</li> <li>Added --css flag to express(1) to specify the     stylesheet engine to use (or just plain css by default).</li> <li>Added <code>app.all()</code> support [thanks aheckmann]</li> <li>Added partial direct object support.     You may now <code>partial('user', user)</code> providing the \"user\" local,     vs previously <code>partial('user', { object: user })</code>.</li> <li>Added route-separation example since many people question ways     to do this with CommonJS modules. Also view the blog example for     an alternative.</li> <li>Performance; caching view path derived partial object names</li> <li>Fixed partial local inheritance precedence. [reported by Nick Poulden] Closes #454</li> <li>Fixed jsonp support; text/javascript as per mailinglist discussion</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#100rc4-2010-10-14","title":"1.0.0rc4 / 2010-10-14","text":"<ul> <li>Added NODE_ENV support, EXPRESS_ENV is deprecated and will be removed in 1.0.0</li> <li>Added route-middleware support (very helpful, see the docs)</li> <li>Added jsonp callback setting to enable/disable jsonp autowrapping [Dav Glass]</li> <li>Added callback query check on response.send to autowrap JSON objects for simple webservice implementations [Dav Glass]</li> <li>Added <code>partial()</code> support for array-like collections. Closes #434</li> <li>Added support for swappable querystring parsers</li> <li>Added session usage docs. Closes #443</li> <li>Added dynamic helper caching. Closes #439 [suggested by maritz]</li> <li>Added authentication example</li> <li>Added basic Range support to <code>res.sendfile()</code> (and <code>res.download()</code> etc)</li> <li>Changed; <code>express(1)</code> generated app using 2 spaces instead of 4</li> <li>Default env to \"development\" again [aheckmann]</li> <li>Removed context option is no more, use \"scope\"</li> <li>Fixed; exposing ./support libs to examples so they can run without installs</li> <li>Fixed mvc example</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#100rc3-2010-09-20","title":"1.0.0rc3 / 2010-09-20","text":"<ul> <li>Added confirmation for <code>express(1)</code> app generation. Closes #391</li> <li>Added extending of flash formatters via <code>app.flashFormatters</code></li> <li>Added flash formatter support. Closes #411</li> <li>Added streaming support to <code>res.sendfile()</code> using <code>sys.pump()</code> when &gt;= \"stream threshold\"</li> <li>Added stream threshold setting for <code>res.sendfile()</code></li> <li>Added <code>res.send()</code> HEAD support</li> <li>Added <code>res.clearCookie()</code></li> <li>Added <code>res.cookie()</code></li> <li>Added <code>res.render()</code> headers option</li> <li>Added <code>res.redirect()</code> response bodies</li> <li>Added <code>res.render()</code> status option support. Closes #425 [thanks aheckmann]</li> <li>Fixed <code>res.sendfile()</code> responding with 403 on malicious path</li> <li>Fixed <code>res.download()</code> bug; when an error occurs remove Content-Disposition</li> <li>Fixed; mounted apps settings now inherit from parent app [aheckmann]</li> <li>Fixed; stripping Content-Length / Content-Type when 204</li> <li>Fixed <code>res.send()</code> 204. Closes #419</li> <li>Fixed multiple Set-Cookie headers via <code>res.header()</code>. Closes #402</li> <li>Fixed bug messing with error handlers when <code>listenFD()</code> is called instead of <code>listen()</code>. [thanks guillermo]</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#100rc2-2010-08-17","title":"1.0.0rc2 / 2010-08-17","text":"<ul> <li>Added <code>app.register()</code> for template engine mapping. Closes #390</li> <li>Added <code>res.render()</code> callback support as second argument (no options)</li> <li>Added callback support to <code>res.download()</code></li> <li>Added callback support for <code>res.sendfile()</code></li> <li>Added support for middleware access via <code>express.middlewareName()</code> vs <code>connect.middlewareName()</code></li> <li>Added \"partials\" setting to docs</li> <li>Added default expresso tests to <code>express(1)</code> generated app. Closes #384</li> <li>Fixed <code>res.sendfile()</code> error handling, defer via <code>next()</code></li> <li>Fixed <code>res.render()</code> callback when a layout is used [thanks guillermo]</li> <li>Fixed; <code>make install</code> creating ~/.node_libraries when not present</li> <li>Fixed issue preventing error handlers from being defined anywhere. Closes #387</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#100rc-2010-07-28","title":"1.0.0rc / 2010-07-28","text":"<ul> <li>Added mounted hook. Closes #369</li> <li> <p>Added connect dependency to package.json</p> </li> <li> <p>Removed \"reload views\" setting and support code     development env never caches, production always caches.</p> </li> <li> <p>Removed param in route callbacks, signature is now     simply (req, res, next), previously (req, res, params, next).     Use req.params for path captures, req.query for GET params.</p> </li> <li> <p>Fixed \"home\" setting</p> </li> <li>Fixed middleware/router precedence issue. Closes #366</li> <li>Fixed; configure() callbacks called immediately. Closes #368</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#100beta2-2010-07-23","title":"1.0.0beta2 / 2010-07-23","text":"<ul> <li>Added more examples</li> <li>Added; exporting <code>Server</code> constructor</li> <li>Added <code>Server#helpers()</code> for view locals</li> <li>Added <code>Server#dynamicHelpers()</code> for dynamic view locals. Closes #349</li> <li>Added support for absolute view paths</li> <li>Added; home setting defaults to <code>Server#route</code> for mounted apps. Closes #363</li> <li>Added Guillermo Rauch to the contributor list</li> <li>Added support for \"as\" for non-collection partials. Closes #341</li> <li>Fixed install.sh, ensuring ~/.node_libraries exists. Closes #362 [thanks jf]</li> <li>Fixed <code>res.render()</code> exceptions, now passed to <code>next()</code> when no callback is given [thanks guillermo]</li> <li>Fixed instanceof <code>Array</code> checks, now <code>Array.isArray()</code></li> <li>Fixed express(1) expansion of public dirs. Closes #348</li> <li>Fixed middleware precedence. Closes #345</li> <li>Fixed view watcher, now async [thanks aheckmann]</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#100beta-2010-07-15","title":"1.0.0beta / 2010-07-15","text":"<ul> <li>Re-write<ul> <li>much faster</li> <li>much lighter</li> <li>Check ExpressJS.com for migration guide and updated docs</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#0140-2010-06-15","title":"0.14.0 / 2010-06-15","text":"<ul> <li>Utilize relative requires</li> <li>Added Static bufferSize option [aheckmann]</li> <li>Fixed caching of view and partial subdirectories [aheckmann]</li> <li>Fixed mime.type() comments now that \".ext\" is not supported</li> <li>Updated haml submodule</li> <li>Updated class submodule</li> <li>Removed bin/express</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#0130-2010-06-01","title":"0.13.0 / 2010-06-01","text":"<ul> <li>Added node v0.1.97 compatibility</li> <li>Added support for deleting cookies via Request#cookie('key', null)</li> <li>Updated haml submodule</li> <li>Fixed not-found page, now using using charset utf-8</li> <li>Fixed show-exceptions page, now using using charset utf-8</li> <li>Fixed view support due to fs.readFile Buffers</li> <li>Changed; mime.type() no longer accepts \".type\" due to node extname() changes</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#0120-2010-05-22","title":"0.12.0 / 2010-05-22","text":"<ul> <li>Added node v0.1.96 compatibility</li> <li>Added view <code>helpers</code> export which act as additional local variables</li> <li>Updated haml submodule</li> <li>Changed ETag; removed inode, modified time only</li> <li>Fixed LF to CRLF for setting multiple cookies</li> <li>Fixed cookie compilation; values are now urlencoded</li> <li>Fixed cookies parsing; accepts quoted values and url escaped cookies</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#0110-2010-05-06","title":"0.11.0 / 2010-05-06","text":"<ul> <li>Added support for layouts using different engines<ul> <li>this.render('page.html.haml', { layout: 'super-cool-layout.html.ejs' })</li> <li>this.render('page.html.haml', { layout: 'foo' }) // assumes 'foo.html.haml'</li> <li>this.render('page.html.haml', { layout: false }) // no layout</li> </ul> </li> <li>Updated ext submodule</li> <li>Updated haml submodule</li> <li>Fixed EJS partial support by passing along the context. Issue #307</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#0101-2010-05-03","title":"0.10.1 / 2010-05-03","text":"<ul> <li>Fixed binary uploads.</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#0100-2010-04-30","title":"0.10.0 / 2010-04-30","text":"<ul> <li>Added charset support via Request#charset (automatically assigned to 'UTF-8' when respond()'s     encoding is set to 'utf8' or 'utf-8'.</li> <li>Added \"encoding\" option to Request#render(). Closes #299</li> <li>Added \"dump exceptions\" setting, which is enabled by default.</li> <li>Added simple ejs template engine support</li> <li>Added error response support for text/plain, application/json. Closes #297</li> <li>Added callback function param to Request#error()</li> <li>Added Request#sendHead()</li> <li>Added Request#stream()</li> <li>Added support for Request#respond(304, null) for empty response bodies</li> <li>Added ETag support to Request#sendfile()</li> <li>Added options to Request#sendfile(), passed to fs.createReadStream()</li> <li>Added filename arg to Request#download()</li> <li>Performance enhanced due to pre-reversing plugins so that plugins.reverse() is not called on each request</li> <li>Performance enhanced by preventing several calls to toLowerCase() in Router#match()</li> <li>Changed; Request#sendfile() now streams</li> <li>Changed; Renamed Request#halt() to Request#respond(). Closes #289</li> <li>Changed; Using sys.inspect() instead of JSON.encode() for error output</li> <li>Changed; run() returns the http.Server instance. Closes #298</li> <li>Changed; Defaulting Server#host to null (INADDR_ANY)</li> <li>Changed; Logger \"common\" format scale of 0.4f</li> <li>Removed Logger \"request\" format</li> <li>Fixed; Catching ENOENT in view caching, preventing error when \"views/partials\" is not found</li> <li>Fixed several issues with http client</li> <li>Fixed Logger Content-Length output</li> <li>Fixed bug preventing Opera from retaining the generated session id. Closes #292</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#090-2010-04-14","title":"0.9.0 / 2010-04-14","text":"<ul> <li>Added DSL level error() route support</li> <li>Added DSL level notFound() route support</li> <li>Added Request#error()</li> <li>Added Request#notFound()</li> <li>Added Request#render() callback function. Closes #258</li> <li>Added \"max upload size\" setting</li> <li>Added \"magic\" variables to collection partials (__index__, __length__, __isFirst__, __isLast__). Closes #254</li> <li>Added haml.js submodule; removed haml-js</li> <li>Added callback function support to Request#halt() as 3rd/4th arg</li> <li>Added preprocessing of route param wildcards using param(). Closes #251</li> <li>Added view partial support (with collections etc)</li> <li>Fixed bug preventing falsey params (such as ?page=0). Closes #286</li> <li>Fixed setting of multiple cookies. Closes #199</li> <li>Changed; view naming convention is now NAME.TYPE.ENGINE (for example page.html.haml)</li> <li>Changed; session cookie is now httpOnly</li> <li>Changed; Request is no longer global</li> <li>Changed; Event is no longer global</li> <li>Changed; \"sys\" module is no longer global</li> <li>Changed; moved Request#download to Static plugin where it belongs</li> <li>Changed; Request instance created before body parsing. Closes #262</li> <li>Changed; Pre-caching views in memory when \"cache view contents\" is enabled. Closes #253</li> <li>Changed; Pre-caching view partials in memory when \"cache view partials\" is enabled</li> <li>Updated support to node --version 0.1.90</li> <li>Updated dependencies</li> <li>Removed set(\"session cookie\") in favour of use(Session, { cookie: { ... }})</li> <li>Removed utils.mixin(); use Object#mergeDeep()</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#080-2010-03-19","title":"0.8.0 / 2010-03-19","text":"<ul> <li>Added coffeescript example app. Closes #242</li> <li>Changed; cache api now async friendly. Closes #240</li> <li>Removed deprecated 'express/static' support. Use 'express/plugins/static'</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#076-2010-03-19","title":"0.7.6 / 2010-03-19","text":"<ul> <li>Added Request#isXHR. Closes #229</li> <li>Added <code>make install</code> (for the executable)</li> <li>Added <code>express</code> executable for setting up simple app templates</li> <li>Added \"GET /public/*\" to Static plugin, defaulting to /public <li>Added Static plugin</li> <li>Fixed; Request#render() only calls cache.get() once</li> <li>Fixed; Namespacing View caches with \"view:\"</li> <li>Fixed; Namespacing Static caches with \"static:\"</li> <li>Fixed; Both example apps now use the Static plugin</li> <li>Fixed set(\"views\"). Closes #239</li> <li>Fixed missing space for combined log format</li> <li>Deprecated Request#sendfile() and 'express/static'</li> <li>Removed Server#running</li>"},{"location":"ejemplos/servidor/node_modules/express/History/#075-2010-03-16","title":"0.7.5 / 2010-03-16","text":"<ul> <li>Added Request#flash() support without args, now returns all flashes</li> <li>Updated ext submodule</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#074-2010-03-16","title":"0.7.4 / 2010-03-16","text":"<ul> <li>Fixed session reaper</li> <li>Changed; class.js replacing js-oo Class implementation (quite a bit faster, no browser cruft)</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#073-2010-03-16","title":"0.7.3 / 2010-03-16","text":"<ul> <li>Added package.json</li> <li>Fixed requiring of haml / sass due to kiwi removal</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#072-2010-03-16","title":"0.7.2 / 2010-03-16","text":"<ul> <li>Fixed GIT submodules (HAH!)</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#071-2010-03-16","title":"0.7.1 / 2010-03-16","text":"<ul> <li>Changed; Express now using submodules again until a PM is adopted</li> <li>Changed; chat example using millisecond conversions from ext</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#070-2010-03-15","title":"0.7.0 / 2010-03-15","text":"<ul> <li>Added Request#pass() support (finds the next matching route, or the given path)</li> <li>Added Logger plugin (default \"common\" format replaces CommonLogger)</li> <li>Removed Profiler plugin</li> <li>Removed CommonLogger plugin</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#060-2010-03-11","title":"0.6.0 / 2010-03-11","text":"<ul> <li>Added seed.yml for kiwi package management support</li> <li> <p>Added HTTP client query string support when method is GET. Closes #205</p> </li> <li> <p>Added support for arbitrary view engines.     For example \"foo.engine.html\" will now require('engine'),     the exports from this module are cached after the first require().</p> </li> <li> <p>Added async plugin support</p> </li> <li> <p>Removed usage of RESTful route funcs as http client     get() etc, use http.get() and friends</p> </li> <li> <p>Removed custom exceptions</p> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#050-2010-03-10","title":"0.5.0 / 2010-03-10","text":"<ul> <li>Added ext dependency (library of js extensions)</li> <li>Removed extname() / basename() utils. Use path module</li> <li>Removed toArray() util. Use arguments.values</li> <li>Removed escapeRegexp() util. Use RegExp.escape()</li> <li>Removed process.mixin() dependency. Use utils.mixin()</li> <li>Removed Collection</li> <li>Removed ElementCollection</li> <li>Shameless self promotion of ebook \"Advanced JavaScript\" (http://dev-mag.com)  ;)</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#040-2010-02-11","title":"0.4.0 / 2010-02-11","text":"<ul> <li>Added flash() example to sample upload app</li> <li>Added high level restful http client module (express/http)</li> <li>Changed; RESTful route functions double as HTTP clients. Closes #69</li> <li>Changed; throwing error when routes are added at runtime</li> <li>Changed; defaulting render() context to the current Request. Closes #197</li> <li>Updated haml submodule</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#030-2010-02-11","title":"0.3.0 / 2010-02-11","text":"<ul> <li>Updated haml / sass submodules. Closes #200</li> <li>Added flash message support. Closes #64</li> <li>Added accepts() now allows multiple args. fixes #117</li> <li>Added support for plugins to halt. Closes #189</li> <li>Added alternate layout support. Closes #119</li> <li>Removed Route#run(). Closes #188</li> <li>Fixed broken specs due to use(Cookie) missing</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#021-2010-02-05","title":"0.2.1 / 2010-02-05","text":"<ul> <li>Added \"plot\" format option for Profiler (for gnuplot processing)</li> <li>Added request number to Profiler plugin</li> <li>Fixed binary encoding for multipart file uploads, was previously defaulting to UTF8</li> <li>Fixed issue with routes not firing when not files are present. Closes #184</li> <li>Fixed process.Promise -&gt; events.Promise</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#020-2010-02-03","title":"0.2.0 / 2010-02-03","text":"<ul> <li>Added parseParam() support for name[] etc. (allows for file inputs with \"multiple\" attr) Closes #180</li> <li>Added Both Cache and Session option \"reapInterval\" may be \"reapEvery\". Closes #174</li> <li>Added expiration support to cache api with reaper. Closes #133</li> <li>Added cache Store.Memory#reap()</li> <li>Added Cache; cache api now uses first class Cache instances</li> <li>Added abstract session Store. Closes #172</li> <li>Changed; cache Memory.Store#get() utilizing Collection</li> <li>Renamed MemoryStore -&gt; Store.Memory</li> <li>Fixed use() of the same plugin several time will always use latest options. Closes #176</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#010-2010-02-03","title":"0.1.0 / 2010-02-03","text":"<ul> <li>Changed; Hooks (before / after) pass request as arg as well as evaluated in their context</li> <li>Updated node support to 0.1.27 Closes #169</li> <li>Updated dirname(__filename) -&gt; __dirname</li> <li>Updated libxmljs support to v0.2.0</li> <li>Added session support with memory store / reaping</li> <li>Added quick uid() helper</li> <li>Added multi-part upload support</li> <li>Added Sass.js support / submodule</li> <li>Added production env caching view contents and static files</li> <li>Added static file caching. Closes #136</li> <li>Added cache plugin with memory stores</li> <li>Added support to StaticFile so that it works with non-textual files.</li> <li>Removed dirname() helper</li> <li>Removed several globals (now their modules must be required)</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#002-2010-01-10","title":"0.0.2 / 2010-01-10","text":"<ul> <li>Added view benchmarks; currently haml vs ejs</li> <li>Added Request#attachment() specs. Closes #116</li> <li>Added use of node's parseQuery() util. Closes #123</li> <li>Added <code>make init</code> for submodules</li> <li>Updated Haml</li> <li>Updated sample chat app to show messages on load</li> <li>Updated libxmljs parseString -&gt; parseHtmlString</li> <li>Fixed <code>make init</code> to work with older versions of git</li> <li>Fixed specs can now run independent specs for those who can't build deps. Closes #127</li> <li>Fixed issues introduced by the node url module changes. Closes 126.</li> <li>Fixed two assertions failing due to Collection#keys() returning strings</li> <li>Fixed faulty Collection#toArray() spec due to keys() returning strings</li> <li>Fixed <code>make test</code> now builds libxmljs.node before testing</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/History/#001-2010-01-03","title":"0.0.1 / 2010-01-03","text":"<ul> <li>Initial release</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/Readme/","title":"Readme","text":"<p>Fast, unopinionated, minimalist web framework for node.</p> <p> </p> <pre><code>const express = require('express')\nconst app = express()\n\napp.get('/', function (req, res) {\n  res.send('Hello World')\n})\n\napp.listen(3000)\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/express/Readme/#installation","title":"Installation","text":"<p>This is a Node.js module available through the npm registry.</p> <p>Before installing, download and install Node.js. Node.js 0.10 or higher is required.</p> <p>Installation is done using the <code>npm install</code> command:</p> <pre><code>$ npm install express\n</code></pre> <p>Follow our installing guide for more information.</p>"},{"location":"ejemplos/servidor/node_modules/express/Readme/#features","title":"Features","text":"<ul> <li>Robust routing</li> <li>Focus on high performance</li> <li>Super-high test coverage</li> <li>HTTP helpers (redirection, caching, etc)</li> <li>View system supporting 14+ template engines</li> <li>Content negotiation</li> <li>Executable for generating applications quickly</li> </ul>"},{"location":"ejemplos/servidor/node_modules/express/Readme/#docs-community","title":"Docs &amp; Community","text":"<ul> <li>Website and Documentation - [website repo]</li> <li>#express on freenode IRC</li> <li>GitHub Organization for Official Middleware &amp; Modules</li> <li>Visit the Wiki</li> <li>Google Group for discussion</li> <li>Gitter for support and discussion</li> </ul> <p>PROTIP Be sure to read Migrating from 3.x to 4.x as well as New features in 4.x.</p>"},{"location":"ejemplos/servidor/node_modules/express/Readme/#security-issues","title":"Security Issues","text":"<p>If you discover a security vulnerability in Express, please see Security Policies and Procedures.</p>"},{"location":"ejemplos/servidor/node_modules/express/Readme/#quick-start","title":"Quick Start","text":"<p>The quickest way to get started with express is to utilize the executable <code>express(1)</code> to generate an application as shown below:</p> <p>Install the executable. The executable's major version will match Express's:</p> <pre><code>$ npm install -g express-generator@4\n</code></pre> <p>Create the app:</p> <pre><code>$ express /tmp/foo &amp;&amp; cd /tmp/foo\n</code></pre> <p>Install dependencies:</p> <pre><code>$ npm install\n</code></pre> <p>Start the server:</p> <pre><code>$ npm start\n</code></pre> <p>View the website at: http://localhost:3000</p>"},{"location":"ejemplos/servidor/node_modules/express/Readme/#philosophy","title":"Philosophy","text":"<p>The Express philosophy is to provide small, robust tooling for HTTP servers, making   it a great solution for single page applications, web sites, hybrids, or public   HTTP APIs.</p> <p>Express does not force you to use any specific ORM or template engine. With support for over   14 template engines via Consolidate.js,   you can quickly craft your perfect framework.</p>"},{"location":"ejemplos/servidor/node_modules/express/Readme/#examples","title":"Examples","text":"<p>To view the examples, clone the Express repo and install the dependencies:</p> <pre><code>$ git clone git://github.com/expressjs/express.git --depth 1\n$ cd express\n$ npm install\n</code></pre> <p>Then run whichever example you want:</p> <pre><code>$ node examples/content-negotiation\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/express/Readme/#tests","title":"Tests","text":"<p>To run the test suite, first install the dependencies, then run <code>npm test</code>:</p> <pre><code>$ npm install\n$ npm test\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/express/Readme/#contributing","title":"Contributing","text":"<p>Contributing Guide</p>"},{"location":"ejemplos/servidor/node_modules/express/Readme/#people","title":"People","text":"<p>The original author of Express is TJ Holowaychuk</p> <p>The current lead maintainer is Douglas Christopher Wilson</p> <p>List of all contributors</p>"},{"location":"ejemplos/servidor/node_modules/express/Readme/#license","title":"License","text":"<p>MIT</p>"},{"location":"ejemplos/servidor/node_modules/finalhandler/","title":"finalhandler","text":"<p>Node.js function to invoke as the final step to respond to HTTP request.</p>"},{"location":"ejemplos/servidor/node_modules/finalhandler/#installation","title":"Installation","text":"<p>This is a Node.js module available through the npm registry. Installation is done using the <code>npm install</code> command:</p> <pre><code>$ npm install finalhandler\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/finalhandler/#api","title":"API","text":"<pre><code>var finalhandler = require('finalhandler')\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/finalhandler/#finalhandlerreq-res-options","title":"finalhandler(req, res, [options])","text":"<p>Returns function to be invoked as the final step for the given <code>req</code> and <code>res</code>. This function is to be invoked as <code>fn(err)</code>. If <code>err</code> is falsy, the handler will write out a 404 response to the <code>res</code>. If it is truthy, an error response will be written out to the <code>res</code>.</p> <p>When an error is written, the following information is added to the response:</p> <ul> <li>The <code>res.statusCode</code> is set from <code>err.status</code> (or <code>err.statusCode</code>). If     this value is outside the 4xx or 5xx range, it will be set to 500.</li> <li>The <code>res.statusMessage</code> is set according to the status code.</li> <li>The body will be the HTML of the status code message if <code>env</code> is     <code>'production'</code>, otherwise will be <code>err.stack</code>.</li> <li>Any headers specified in an <code>err.headers</code> object.</li> </ul> <p>The final handler will also unpipe anything from <code>req</code> when it is invoked.</p>"},{"location":"ejemplos/servidor/node_modules/finalhandler/#optionsenv","title":"options.env","text":"<p>By default, the environment is determined by <code>NODE_ENV</code> variable, but it can be overridden by this option.</p>"},{"location":"ejemplos/servidor/node_modules/finalhandler/#optionsonerror","title":"options.onerror","text":"<p>Provide a function to be called with the <code>err</code> when it exists. Can be used for writing errors to a central location without excessive function generation. Called as <code>onerror(err, req, res)</code>.</p>"},{"location":"ejemplos/servidor/node_modules/finalhandler/#examples","title":"Examples","text":""},{"location":"ejemplos/servidor/node_modules/finalhandler/#always-404","title":"always 404","text":"<pre><code>var finalhandler = require('finalhandler')\nvar http = require('http')\n\nvar server = http.createServer(function (req, res) {\n  var done = finalhandler(req, res)\n  done()\n})\n\nserver.listen(3000)\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/finalhandler/#perform-simple-action","title":"perform simple action","text":"<pre><code>var finalhandler = require('finalhandler')\nvar fs = require('fs')\nvar http = require('http')\n\nvar server = http.createServer(function (req, res) {\n  var done = finalhandler(req, res)\n\n  fs.readFile('index.html', function (err, buf) {\n    if (err) return done(err)\n    res.setHeader('Content-Type', 'text/html')\n    res.end(buf)\n  })\n})\n\nserver.listen(3000)\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/finalhandler/#use-with-middleware-style-functions","title":"use with middleware-style functions","text":"<pre><code>var finalhandler = require('finalhandler')\nvar http = require('http')\nvar serveStatic = require('serve-static')\n\nvar serve = serveStatic('public')\n\nvar server = http.createServer(function (req, res) {\n  var done = finalhandler(req, res)\n  serve(req, res, done)\n})\n\nserver.listen(3000)\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/finalhandler/#keep-log-of-all-errors","title":"keep log of all errors","text":"<pre><code>var finalhandler = require('finalhandler')\nvar fs = require('fs')\nvar http = require('http')\n\nvar server = http.createServer(function (req, res) {\n  var done = finalhandler(req, res, { onerror: logerror })\n\n  fs.readFile('index.html', function (err, buf) {\n    if (err) return done(err)\n    res.setHeader('Content-Type', 'text/html')\n    res.end(buf)\n  })\n})\n\nserver.listen(3000)\n\nfunction logerror (err) {\n  console.error(err.stack || err.toString())\n}\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/finalhandler/#license","title":"License","text":"<p>MIT</p>"},{"location":"ejemplos/servidor/node_modules/finalhandler/HISTORY/","title":"1.1.2 / 2019-05-09","text":"<ul> <li>Set stricter <code>Content-Security-Policy</code> header</li> <li>deps: parseurl@~1.3.3</li> <li>deps: statuses@~1.5.0</li> </ul>"},{"location":"ejemplos/servidor/node_modules/finalhandler/HISTORY/#111-2018-03-06","title":"1.1.1 / 2018-03-06","text":"<ul> <li>Fix 404 output for bad / missing pathnames</li> <li>deps: encodeurl@~1.0.2<ul> <li>Fix encoding <code>%</code> as last character</li> </ul> </li> <li>deps: statuses@~1.4.0</li> </ul>"},{"location":"ejemplos/servidor/node_modules/finalhandler/HISTORY/#110-2017-09-24","title":"1.1.0 / 2017-09-24","text":"<ul> <li>Use <code>res.headersSent</code> when available</li> </ul>"},{"location":"ejemplos/servidor/node_modules/finalhandler/HISTORY/#106-2017-09-22","title":"1.0.6 / 2017-09-22","text":"<ul> <li>deps: debug@2.6.9</li> </ul>"},{"location":"ejemplos/servidor/node_modules/finalhandler/HISTORY/#105-2017-09-15","title":"1.0.5 / 2017-09-15","text":"<ul> <li>deps: parseurl@~1.3.2<ul> <li>perf: reduce overhead for full URLs</li> <li>perf: unroll the \"fast-path\" <code>RegExp</code></li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/finalhandler/HISTORY/#104-2017-08-03","title":"1.0.4 / 2017-08-03","text":"<ul> <li>deps: debug@2.6.8</li> </ul>"},{"location":"ejemplos/servidor/node_modules/finalhandler/HISTORY/#103-2017-05-16","title":"1.0.3 / 2017-05-16","text":"<ul> <li>deps: debug@2.6.7<ul> <li>deps: ms@2.0.0</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/finalhandler/HISTORY/#102-2017-04-22","title":"1.0.2 / 2017-04-22","text":"<ul> <li>deps: debug@2.6.4<ul> <li>deps: ms@0.7.3</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/finalhandler/HISTORY/#101-2017-03-21","title":"1.0.1 / 2017-03-21","text":"<ul> <li>Fix missing <code>&lt;/html&gt;</code> in HTML document</li> <li>deps: debug@2.6.3<ul> <li>Fix: <code>DEBUG_MAX_ARRAY_LENGTH</code></li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/finalhandler/HISTORY/#100-2017-02-15","title":"1.0.0 / 2017-02-15","text":"<ul> <li>Fix exception when <code>err</code> cannot be converted to a string</li> <li>Fully URL-encode the pathname in the 404 message</li> <li>Only include the pathname in the 404 message</li> <li>Send complete HTML document</li> <li>Set <code>Content-Security-Policy: default-src 'self'</code> header</li> <li>deps: debug@2.6.1<ul> <li>Allow colors in workers</li> <li>Deprecated <code>DEBUG_FD</code> environment variable set to <code>3</code> or higher</li> <li>Fix error when running under React Native</li> <li>Use same color for same namespace</li> <li>deps: ms@0.7.2</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/finalhandler/HISTORY/#051-2016-11-12","title":"0.5.1 / 2016-11-12","text":"<ul> <li>Fix exception when <code>err.headers</code> is not an object</li> <li>deps: statuses@~1.3.1</li> <li>perf: hoist regular expressions</li> <li>perf: remove duplicate validation path</li> </ul>"},{"location":"ejemplos/servidor/node_modules/finalhandler/HISTORY/#050-2016-06-15","title":"0.5.0 / 2016-06-15","text":"<ul> <li>Change invalid or non-numeric status code to 500</li> <li>Overwrite status message to match set status code</li> <li>Prefer <code>err.statusCode</code> if <code>err.status</code> is invalid</li> <li>Set response headers from <code>err.headers</code> object</li> <li>Use <code>statuses</code> instead of <code>http</code> module for status messages<ul> <li>Includes all defined status messages</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/finalhandler/HISTORY/#041-2015-12-02","title":"0.4.1 / 2015-12-02","text":"<ul> <li>deps: escape-html@~1.0.3<ul> <li>perf: enable strict mode</li> <li>perf: optimize string replacement</li> <li>perf: use faster string coercion</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/finalhandler/HISTORY/#040-2015-06-14","title":"0.4.0 / 2015-06-14","text":"<ul> <li>Fix a false-positive when unpiping in Node.js 0.8</li> <li>Support <code>statusCode</code> property on <code>Error</code> objects</li> <li>Use <code>unpipe</code> module for unpiping requests</li> <li>deps: escape-html@1.0.2</li> <li>deps: on-finished@~2.3.0<ul> <li>Add defined behavior for HTTP <code>CONNECT</code> requests</li> <li>Add defined behavior for HTTP <code>Upgrade</code> requests</li> <li>deps: ee-first@1.1.1</li> </ul> </li> <li>perf: enable strict mode</li> <li>perf: remove argument reassignment</li> </ul>"},{"location":"ejemplos/servidor/node_modules/finalhandler/HISTORY/#036-2015-05-11","title":"0.3.6 / 2015-05-11","text":"<ul> <li>deps: debug@~2.2.0<ul> <li>deps: ms@0.7.1</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/finalhandler/HISTORY/#035-2015-04-22","title":"0.3.5 / 2015-04-22","text":"<ul> <li>deps: on-finished@~2.2.1<ul> <li>Fix <code>isFinished(req)</code> when data buffered</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/finalhandler/HISTORY/#034-2015-03-15","title":"0.3.4 / 2015-03-15","text":"<ul> <li>deps: debug@~2.1.3<ul> <li>Fix high intensity foreground color for bold</li> <li>deps: ms@0.7.0</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/finalhandler/HISTORY/#033-2015-01-01","title":"0.3.3 / 2015-01-01","text":"<ul> <li>deps: debug@~2.1.1</li> <li>deps: on-finished@~2.2.0</li> </ul>"},{"location":"ejemplos/servidor/node_modules/finalhandler/HISTORY/#032-2014-10-22","title":"0.3.2 / 2014-10-22","text":"<ul> <li>deps: on-finished@~2.1.1<ul> <li>Fix handling of pipelined requests</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/finalhandler/HISTORY/#031-2014-10-16","title":"0.3.1 / 2014-10-16","text":"<ul> <li>deps: debug@~2.1.0<ul> <li>Implement <code>DEBUG_FD</code> env variable support</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/finalhandler/HISTORY/#030-2014-09-17","title":"0.3.0 / 2014-09-17","text":"<ul> <li>Terminate in progress response only on error</li> <li>Use <code>on-finished</code> to determine request status</li> </ul>"},{"location":"ejemplos/servidor/node_modules/finalhandler/HISTORY/#020-2014-09-03","title":"0.2.0 / 2014-09-03","text":"<ul> <li>Set <code>X-Content-Type-Options: nosniff</code> header</li> <li>deps: debug@~2.0.0</li> </ul>"},{"location":"ejemplos/servidor/node_modules/finalhandler/HISTORY/#010-2014-07-16","title":"0.1.0 / 2014-07-16","text":"<ul> <li>Respond after request fully read<ul> <li>prevents hung responses and socket hang ups</li> </ul> </li> <li>deps: debug@1.0.4</li> </ul>"},{"location":"ejemplos/servidor/node_modules/finalhandler/HISTORY/#003-2014-07-11","title":"0.0.3 / 2014-07-11","text":"<ul> <li>deps: debug@1.0.3<ul> <li>Add support for multiple wildcards in namespaces</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/finalhandler/HISTORY/#002-2014-06-19","title":"0.0.2 / 2014-06-19","text":"<ul> <li>Handle invalid status codes</li> </ul>"},{"location":"ejemplos/servidor/node_modules/finalhandler/HISTORY/#001-2014-06-05","title":"0.0.1 / 2014-06-05","text":"<ul> <li>deps: debug@1.0.2</li> </ul>"},{"location":"ejemplos/servidor/node_modules/finalhandler/HISTORY/#000-2014-06-05","title":"0.0.0 / 2014-06-05","text":"<ul> <li>Extracted from connect/express</li> </ul>"},{"location":"ejemplos/servidor/node_modules/forwarded/","title":"forwarded","text":"<p>Parse HTTP X-Forwarded-For header</p>"},{"location":"ejemplos/servidor/node_modules/forwarded/#installation","title":"Installation","text":"<p>This is a Node.js module available through the npm registry. Installation is done using the <code>npm install</code> command:</p> <pre><code>$ npm install forwarded\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/forwarded/#api","title":"API","text":"<pre><code>var forwarded = require('forwarded')\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/forwarded/#forwardedreq","title":"forwarded(req)","text":"<pre><code>var addresses = forwarded(req)\n</code></pre> <p>Parse the <code>X-Forwarded-For</code> header from the request. Returns an array of the addresses, including the socket address for the <code>req</code>, in reverse order (i.e. index <code>0</code> is the socket address and the last index is the furthest address, typically the end-user).</p>"},{"location":"ejemplos/servidor/node_modules/forwarded/#testing","title":"Testing","text":"<pre><code>$ npm test\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/forwarded/#license","title":"License","text":"<p>MIT</p>"},{"location":"ejemplos/servidor/node_modules/forwarded/HISTORY/","title":"0.1.2 / 2017-09-14","text":"<ul> <li>perf: improve header parsing</li> <li>perf: reduce overhead when no <code>X-Forwarded-For</code> header</li> </ul>"},{"location":"ejemplos/servidor/node_modules/forwarded/HISTORY/#011-2017-09-10","title":"0.1.1 / 2017-09-10","text":"<ul> <li>Fix trimming leading / trailing OWS</li> <li>perf: hoist regular expression</li> </ul>"},{"location":"ejemplos/servidor/node_modules/forwarded/HISTORY/#010-2014-09-21","title":"0.1.0 / 2014-09-21","text":"<ul> <li>Initial release</li> </ul>"},{"location":"ejemplos/servidor/node_modules/fresh/","title":"fresh","text":"<p>HTTP response freshness testing</p>"},{"location":"ejemplos/servidor/node_modules/fresh/#installation","title":"Installation","text":"<p>This is a Node.js module available through the npm registry. Installation is done using the <code>npm install</code> command:</p> <pre><code>$ npm install fresh\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/fresh/#api","title":"API","text":"<pre><code>var fresh = require('fresh')\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/fresh/#freshreqheaders-resheaders","title":"fresh(reqHeaders, resHeaders)","text":"<p>Check freshness of the response using request and response headers.</p> <p>When the response is still \"fresh\" in the client's cache <code>true</code> is returned, otherwise <code>false</code> is returned to indicate that the client cache is now stale and the full response should be sent.</p> <p>When a client sends the <code>Cache-Control: no-cache</code> request header to indicate an end-to-end reload request, this module will return <code>false</code> to make handling these requests transparent.</p>"},{"location":"ejemplos/servidor/node_modules/fresh/#known-issues","title":"Known Issues","text":"<p>This module is designed to only follow the HTTP specifications, not to work-around all kinda of client bugs (especially since this module typically does not recieve enough information to understand what the client actually is).</p> <p>There is a known issue that in certain versions of Safari, Safari will incorrectly make a request that allows this module to validate freshness of the resource even when Safari does not have a representation of the resource in the cache. The module jumanji can be used in an Express application to work-around this issue and also provides links to further reading on this Safari bug.</p>"},{"location":"ejemplos/servidor/node_modules/fresh/#example","title":"Example","text":""},{"location":"ejemplos/servidor/node_modules/fresh/#api-usage","title":"API usage","text":"<pre><code>var reqHeaders = { 'if-none-match': '\"foo\"' }\nvar resHeaders = { 'etag': '\"bar\"' }\nfresh(reqHeaders, resHeaders)\n// =&gt; false\n\nvar reqHeaders = { 'if-none-match': '\"foo\"' }\nvar resHeaders = { 'etag': '\"foo\"' }\nfresh(reqHeaders, resHeaders)\n// =&gt; true\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/fresh/#using-with-nodejs-http-server","title":"Using with Node.js http server","text":"<pre><code>var fresh = require('fresh')\nvar http = require('http')\n\nvar server = http.createServer(function (req, res) {\n  // perform server logic\n  // ... including adding ETag / Last-Modified response headers\n\n  if (isFresh(req, res)) {\n    // client has a fresh copy of resource\n    res.statusCode = 304\n    res.end()\n    return\n  }\n\n  // send the resource\n  res.statusCode = 200\n  res.end('hello, world!')\n})\n\nfunction isFresh (req, res) {\n  return fresh(req.headers, {\n    'etag': res.getHeader('ETag'),\n    'last-modified': res.getHeader('Last-Modified')\n  })\n}\n\nserver.listen(3000)\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/fresh/#license","title":"License","text":"<p>MIT</p>"},{"location":"ejemplos/servidor/node_modules/fresh/HISTORY/","title":"0.5.2 / 2017-09-13","text":"<ul> <li>Fix regression matching multiple ETags in <code>If-None-Match</code></li> <li>perf: improve <code>If-None-Match</code> token parsing</li> </ul>"},{"location":"ejemplos/servidor/node_modules/fresh/HISTORY/#051-2017-09-11","title":"0.5.1 / 2017-09-11","text":"<ul> <li>Fix handling of modified headers with invalid dates</li> <li>perf: improve ETag match loop</li> </ul>"},{"location":"ejemplos/servidor/node_modules/fresh/HISTORY/#050-2017-02-21","title":"0.5.0 / 2017-02-21","text":"<ul> <li>Fix incorrect result when <code>If-None-Match</code> has both <code>*</code> and ETags</li> <li>Fix weak <code>ETag</code> matching to match spec</li> <li>perf: delay reading header values until needed</li> <li>perf: skip checking modified time if ETag check failed</li> <li>perf: skip parsing <code>If-None-Match</code> when no <code>ETag</code> header</li> <li>perf: use <code>Date.parse</code> instead of <code>new Date</code></li> </ul>"},{"location":"ejemplos/servidor/node_modules/fresh/HISTORY/#040-2017-02-05","title":"0.4.0 / 2017-02-05","text":"<ul> <li>Fix false detection of <code>no-cache</code> request directive</li> <li>perf: enable strict mode</li> <li>perf: hoist regular expressions</li> <li>perf: remove duplicate conditional</li> <li>perf: remove unnecessary boolean coercions</li> </ul>"},{"location":"ejemplos/servidor/node_modules/fresh/HISTORY/#030-2015-05-12","title":"0.3.0 / 2015-05-12","text":"<ul> <li>Add weak <code>ETag</code> matching support</li> </ul>"},{"location":"ejemplos/servidor/node_modules/fresh/HISTORY/#024-2014-09-07","title":"0.2.4 / 2014-09-07","text":"<ul> <li>Support Node.js 0.6</li> </ul>"},{"location":"ejemplos/servidor/node_modules/fresh/HISTORY/#023-2014-09-07","title":"0.2.3 / 2014-09-07","text":"<ul> <li>Move repository to jshttp</li> </ul>"},{"location":"ejemplos/servidor/node_modules/fresh/HISTORY/#022-2014-02-19","title":"0.2.2 / 2014-02-19","text":"<ul> <li>Revert \"Fix for blank page on Safari reload\"</li> </ul>"},{"location":"ejemplos/servidor/node_modules/fresh/HISTORY/#021-2014-01-29","title":"0.2.1 / 2014-01-29","text":"<ul> <li>Fix for blank page on Safari reload</li> </ul>"},{"location":"ejemplos/servidor/node_modules/fresh/HISTORY/#020-2013-08-11","title":"0.2.0 / 2013-08-11","text":"<ul> <li>Return stale for <code>Cache-Control: no-cache</code></li> </ul>"},{"location":"ejemplos/servidor/node_modules/fresh/HISTORY/#010-2012-06-15","title":"0.1.0 / 2012-06-15","text":"<ul> <li>Add <code>If-None-Match: *</code> support</li> </ul>"},{"location":"ejemplos/servidor/node_modules/fresh/HISTORY/#001-2012-06-10","title":"0.0.1 / 2012-06-10","text":"<ul> <li>Initial release</li> </ul>"},{"location":"ejemplos/servidor/node_modules/http-errors/","title":"http-errors","text":"<p>Create HTTP errors for Express, Koa, Connect, etc. with ease.</p>"},{"location":"ejemplos/servidor/node_modules/http-errors/#install","title":"Install","text":"<p>This is a Node.js module available through the npm registry. Installation is done using the <code>npm install</code> command:</p> <pre><code>$ npm install http-errors\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/http-errors/#example","title":"Example","text":"<pre><code>var createError = require('http-errors')\nvar express = require('express')\nvar app = express()\n\napp.use(function (req, res, next) {\n  if (!req.user) return next(createError(401, 'Please login to view this page.'))\n  next()\n})\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/http-errors/#api","title":"API","text":"<p>This is the current API, currently extracted from Koa and subject to change.</p>"},{"location":"ejemplos/servidor/node_modules/http-errors/#error-properties","title":"Error Properties","text":"<ul> <li><code>expose</code> - can be used to signal if <code>message</code> should be sent to the client,   defaulting to <code>false</code> when <code>status</code> &gt;= 500</li> <li><code>headers</code> - can be an object of header names to values to be sent to the   client, defaulting to <code>undefined</code>. When defined, the key names should all   be lower-cased</li> <li><code>message</code> - the traditional error message, which should be kept short and all   single line</li> <li><code>status</code> - the status code of the error, mirroring <code>statusCode</code> for general   compatibility</li> <li><code>statusCode</code> - the status code of the error, defaulting to <code>500</code></li> </ul>"},{"location":"ejemplos/servidor/node_modules/http-errors/#createerrorstatus-message-properties","title":"createError([status], [message], [properties])","text":"<p>Create a new error object with the given message <code>msg</code>. The error object inherits from <code>createError.HttpError</code>.</p> <pre><code>var err = createError(404, 'This video does not exist!')\n</code></pre> <ul> <li><code>status: 500</code> - the status code as a number</li> <li><code>message</code> - the message of the error, defaulting to node's text for that status code.</li> <li><code>properties</code> - custom properties to attach to the object</li> </ul>"},{"location":"ejemplos/servidor/node_modules/http-errors/#createerrorstatus-error-properties","title":"createError([status], [error], [properties])","text":"<p>Extend the given <code>error</code> object with <code>createError.HttpError</code> properties. This will not alter the inheritance of the given <code>error</code> object, and the modified <code>error</code> object is the return value.</p> <pre><code>fs.readFile('foo.txt', function (err, buf) {\n  if (err) {\n    if (err.code === 'ENOENT') {\n      var httpError = createError(404, err, { expose: false })\n    } else {\n      var httpError = createError(500, err)\n    }\n  }\n})\n</code></pre> <ul> <li><code>status</code> - the status code as a number</li> <li><code>error</code> - the error object to extend</li> <li><code>properties</code> - custom properties to attach to the object</li> </ul>"},{"location":"ejemplos/servidor/node_modules/http-errors/#new-createerrorcode-namemsg","title":"new createError[code || name]([msg]))","text":"<p>Create a new error object with the given message <code>msg</code>. The error object inherits from <code>createError.HttpError</code>.</p> <pre><code>var err = new createError.NotFound()\n</code></pre> <ul> <li><code>code</code> - the status code as a number</li> <li><code>name</code> - the name of the error as a \"bumpy case\", i.e. <code>NotFound</code> or <code>InternalServerError</code>.</li> </ul>"},{"location":"ejemplos/servidor/node_modules/http-errors/#list-of-all-constructors","title":"List of all constructors","text":"Status Code Constructor Name 400 BadRequest 401 Unauthorized 402 PaymentRequired 403 Forbidden 404 NotFound 405 MethodNotAllowed 406 NotAcceptable 407 ProxyAuthenticationRequired 408 RequestTimeout 409 Conflict 410 Gone 411 LengthRequired 412 PreconditionFailed 413 PayloadTooLarge 414 URITooLong 415 UnsupportedMediaType 416 RangeNotSatisfiable 417 ExpectationFailed 418 ImATeapot 421 MisdirectedRequest 422 UnprocessableEntity 423 Locked 424 FailedDependency 425 UnorderedCollection 426 UpgradeRequired 428 PreconditionRequired 429 TooManyRequests 431 RequestHeaderFieldsTooLarge 451 UnavailableForLegalReasons 500 InternalServerError 501 NotImplemented 502 BadGateway 503 ServiceUnavailable 504 GatewayTimeout 505 HTTPVersionNotSupported 506 VariantAlsoNegotiates 507 InsufficientStorage 508 LoopDetected 509 BandwidthLimitExceeded 510 NotExtended 511 NetworkAuthenticationRequired"},{"location":"ejemplos/servidor/node_modules/http-errors/#license","title":"License","text":"<p>MIT</p>"},{"location":"ejemplos/servidor/node_modules/http-errors/HISTORY/","title":"2019-02-18 / 1.7.2","text":"<ul> <li>deps: setprototypeof@1.1.1</li> </ul>"},{"location":"ejemplos/servidor/node_modules/http-errors/HISTORY/#2018-09-08-171","title":"2018-09-08 / 1.7.1","text":"<ul> <li>Fix error creating objects in some environments</li> </ul>"},{"location":"ejemplos/servidor/node_modules/http-errors/HISTORY/#2018-07-30-170","title":"2018-07-30 / 1.7.0","text":"<ul> <li>Set constructor name when possible</li> <li>Use <code>toidentifier</code> module to make class names</li> <li>deps: statuses@'&gt;= 1.5.0 &lt; 2'</li> </ul>"},{"location":"ejemplos/servidor/node_modules/http-errors/HISTORY/#2018-03-29-163","title":"2018-03-29 / 1.6.3","text":"<ul> <li>deps: depd@~1.1.2<ul> <li>perf: remove argument reassignment</li> </ul> </li> <li>deps: setprototypeof@1.1.0</li> <li>deps: statuses@'&gt;= 1.4.0 &lt; 2'</li> </ul>"},{"location":"ejemplos/servidor/node_modules/http-errors/HISTORY/#2017-08-04-162","title":"2017-08-04 / 1.6.2","text":"<ul> <li>deps: depd@1.1.1<ul> <li>Remove unnecessary <code>Buffer</code> loading</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/http-errors/HISTORY/#2017-02-20-161","title":"2017-02-20 / 1.6.1","text":"<ul> <li>deps: setprototypeof@1.0.3<ul> <li>Fix shim for old browsers</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/http-errors/HISTORY/#2017-02-14-160","title":"2017-02-14 / 1.6.0","text":"<ul> <li>Accept custom 4xx and 5xx status codes in factory</li> <li>Add deprecation message to <code>\"I'mateapot\"</code> export</li> <li>Deprecate passing status code as anything except first argument in factory</li> <li>Deprecate using non-error status codes</li> <li>Make <code>message</code> property enumerable for <code>HttpError</code>s</li> </ul>"},{"location":"ejemplos/servidor/node_modules/http-errors/HISTORY/#2016-11-16-151","title":"2016-11-16 / 1.5.1","text":"<ul> <li>deps: inherits@2.0.3<ul> <li>Fix issue loading in browser</li> </ul> </li> <li>deps: setprototypeof@1.0.2</li> <li>deps: statuses@'&gt;= 1.3.1 &lt; 2'</li> </ul>"},{"location":"ejemplos/servidor/node_modules/http-errors/HISTORY/#2016-05-18-150","title":"2016-05-18 / 1.5.0","text":"<ul> <li>Support new code <code>421 Misdirected Request</code></li> <li>Use <code>setprototypeof</code> module to replace <code>__proto__</code> setting</li> <li>deps: statuses@'&gt;= 1.3.0 &lt; 2'<ul> <li>Add <code>421 Misdirected Request</code></li> <li>perf: enable strict mode</li> </ul> </li> <li>perf: enable strict mode</li> </ul>"},{"location":"ejemplos/servidor/node_modules/http-errors/HISTORY/#2016-01-28-140","title":"2016-01-28 / 1.4.0","text":"<ul> <li>Add <code>HttpError</code> export, for <code>err instanceof createError.HttpError</code></li> <li>deps: inherits@2.0.1</li> <li>deps: statuses@'&gt;= 1.2.1 &lt; 2'<ul> <li>Fix message for status 451</li> <li>Remove incorrect nginx status code</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/http-errors/HISTORY/#2015-02-02-131","title":"2015-02-02 / 1.3.1","text":"<ul> <li>Fix regression where status can be overwritten in <code>createError</code> <code>props</code></li> </ul>"},{"location":"ejemplos/servidor/node_modules/http-errors/HISTORY/#2015-02-01-130","title":"2015-02-01 / 1.3.0","text":"<ul> <li>Construct errors using defined constructors from <code>createError</code></li> <li>Fix error names that are not identifiers<ul> <li><code>createError[\"I'mateapot\"]</code> is now <code>createError.ImATeapot</code></li> </ul> </li> <li>Set a meaningful <code>name</code> property on constructed errors</li> </ul>"},{"location":"ejemplos/servidor/node_modules/http-errors/HISTORY/#2014-12-09-128","title":"2014-12-09 / 1.2.8","text":"<ul> <li>Fix stack trace from exported function</li> <li>Remove <code>arguments.callee</code> usage</li> </ul>"},{"location":"ejemplos/servidor/node_modules/http-errors/HISTORY/#2014-10-14-127","title":"2014-10-14 / 1.2.7","text":"<ul> <li>Remove duplicate line</li> </ul>"},{"location":"ejemplos/servidor/node_modules/http-errors/HISTORY/#2014-10-02-126","title":"2014-10-02 / 1.2.6","text":"<ul> <li>Fix <code>expose</code> to be <code>true</code> for <code>ClientError</code> constructor</li> </ul>"},{"location":"ejemplos/servidor/node_modules/http-errors/HISTORY/#2014-09-28-125","title":"2014-09-28 / 1.2.5","text":"<ul> <li>deps: statuses@1</li> </ul>"},{"location":"ejemplos/servidor/node_modules/http-errors/HISTORY/#2014-09-21-124","title":"2014-09-21 / 1.2.4","text":"<ul> <li>Fix dependency version to work with old <code>npm</code>s</li> </ul>"},{"location":"ejemplos/servidor/node_modules/http-errors/HISTORY/#2014-09-21-123","title":"2014-09-21 / 1.2.3","text":"<ul> <li>deps: statuses@~1.1.0</li> </ul>"},{"location":"ejemplos/servidor/node_modules/http-errors/HISTORY/#2014-09-21-122","title":"2014-09-21 / 1.2.2","text":"<ul> <li>Fix publish error</li> </ul>"},{"location":"ejemplos/servidor/node_modules/http-errors/HISTORY/#2014-09-21-121","title":"2014-09-21 / 1.2.1","text":"<ul> <li>Support Node.js 0.6</li> <li>Use <code>inherits</code> instead of <code>util</code></li> </ul>"},{"location":"ejemplos/servidor/node_modules/http-errors/HISTORY/#2014-09-09-120","title":"2014-09-09 / 1.2.0","text":"<ul> <li>Fix the way inheriting functions</li> <li>Support <code>expose</code> being provided in properties argument</li> </ul>"},{"location":"ejemplos/servidor/node_modules/http-errors/HISTORY/#2014-09-08-110","title":"2014-09-08 / 1.1.0","text":"<ul> <li>Default status to 500</li> <li>Support provided <code>error</code> to extend</li> </ul>"},{"location":"ejemplos/servidor/node_modules/http-errors/HISTORY/#2014-09-08-101","title":"2014-09-08 / 1.0.1","text":"<ul> <li>Fix accepting string message</li> </ul>"},{"location":"ejemplos/servidor/node_modules/http-errors/HISTORY/#2014-09-08-100","title":"2014-09-08 / 1.0.0","text":"<ul> <li>Initial release</li> </ul>"},{"location":"ejemplos/servidor/node_modules/iconv-lite/","title":"Index","text":""},{"location":"ejemplos/servidor/node_modules/iconv-lite/#pure-js-character-encoding-conversion","title":"Pure JS character encoding conversion","text":"<ul> <li>Doesn't need native code compilation. Works on Windows and in sandboxed environments like Cloud9.</li> <li>Used in popular projects like Express.js (body_parser),     Grunt, Nodemailer, Yeoman and others.</li> <li>Faster than node-iconv (see below for performance comparison).</li> <li>Intuitive encode/decode API</li> <li>Streaming support for Node v0.10+</li> <li>[Deprecated] Can extend Node.js primitives (buffers, streams) to support all iconv-lite encodings.</li> <li>In-browser usage via Browserify (~180k gzip compressed with Buffer shim included).</li> <li>Typescript type definition file included.</li> <li>React Native is supported (need to explicitly <code>npm install</code> two more modules: <code>buffer</code> and <code>stream</code>).</li> <li>License: MIT.</li> </ul>"},{"location":"ejemplos/servidor/node_modules/iconv-lite/#usage","title":"Usage","text":""},{"location":"ejemplos/servidor/node_modules/iconv-lite/#basic-api","title":"Basic API","text":"<pre><code>var iconv = require('iconv-lite');\n\n// Convert from an encoded buffer to js string.\nstr = iconv.decode(Buffer.from([0x68, 0x65, 0x6c, 0x6c, 0x6f]), 'win1251');\n\n// Convert from js string to an encoded buffer.\nbuf = iconv.encode(\"Sample input string\", 'win1251');\n\n// Check if encoding is supported\niconv.encodingExists(\"us-ascii\")\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/iconv-lite/#streaming-api-node-v010","title":"Streaming API (Node v0.10+)","text":"<pre><code>// Decode stream (from binary stream to js strings)\nhttp.createServer(function(req, res) {\n    var converterStream = iconv.decodeStream('win1251');\n    req.pipe(converterStream);\n\n    converterStream.on('data', function(str) {\n        console.log(str); // Do something with decoded strings, chunk-by-chunk.\n    });\n});\n\n// Convert encoding streaming example\nfs.createReadStream('file-in-win1251.txt')\n    .pipe(iconv.decodeStream('win1251'))\n    .pipe(iconv.encodeStream('ucs2'))\n    .pipe(fs.createWriteStream('file-in-ucs2.txt'));\n\n// Sugar: all encode/decode streams have .collect(cb) method to accumulate data.\nhttp.createServer(function(req, res) {\n    req.pipe(iconv.decodeStream('win1251')).collect(function(err, body) {\n        assert(typeof body == 'string');\n        console.log(body); // full request body string\n    });\n});\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/iconv-lite/#deprecated-extend-nodejs-own-encodings","title":"[Deprecated] Extend Node.js own encodings","text":"<p>NOTE: This doesn't work on latest Node versions. See details.</p> <pre><code>// After this call all Node basic primitives will understand iconv-lite encodings.\niconv.extendNodeEncodings();\n\n// Examples:\nbuf = new Buffer(str, 'win1251');\nbuf.write(str, 'gbk');\nstr = buf.toString('latin1');\nassert(Buffer.isEncoding('iso-8859-15'));\nBuffer.byteLength(str, 'us-ascii');\n\nhttp.createServer(function(req, res) {\n    req.setEncoding('big5');\n    req.collect(function(err, body) {\n        console.log(body);\n    });\n});\n\nfs.createReadStream(\"file.txt\", \"shift_jis\");\n\n// External modules are also supported (if they use Node primitives, which they probably do).\nrequest = require('request');\nrequest({\n    url: \"http://github.com/\", \n    encoding: \"cp932\"\n});\n\n// To remove extensions\niconv.undoExtendNodeEncodings();\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/iconv-lite/#supported-encodings","title":"Supported encodings","text":"<ul> <li>All node.js native encodings: utf8, ucs2 / utf16-le, ascii, binary, base64, hex.</li> <li>Additional unicode encodings: utf16, utf16-be, utf-7, utf-7-imap.</li> <li>All widespread singlebyte encodings: Windows 125x family, ISO-8859 family,      IBM/DOS codepages, Macintosh family, KOI8 family, all others supported by iconv library.      Aliases like 'latin1', 'us-ascii' also supported.</li> <li>All widespread multibyte encodings: CP932, CP936, CP949, CP950, GB2312, GBK, GB18030, Big5, Shift_JIS, EUC-JP.</li> </ul> <p>See all supported encodings on wiki.</p> <p>Most singlebyte encodings are generated automatically from node-iconv. Thank you Ben Noordhuis and libiconv authors!</p> <p>Multibyte encodings are generated from Unicode.org mappings and WHATWG Encoding Standard mappings. Thank you, respective authors!</p>"},{"location":"ejemplos/servidor/node_modules/iconv-lite/#encodingdecoding-speed","title":"Encoding/decoding speed","text":"<p>Comparison with node-iconv module (1000x256kb, on MacBook Pro, Core i5/2.6 GHz, Node v0.12.0).  Note: your results may vary, so please always check on your hardware.</p> <pre><code>operation             iconv@2.1.4   iconv-lite@0.4.7\n----------------------------------------------------------\nencode('win1251')     ~96 Mb/s      ~320 Mb/s\ndecode('win1251')     ~95 Mb/s      ~246 Mb/s\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/iconv-lite/#bom-handling","title":"BOM handling","text":"<ul> <li>Decoding: BOM is stripped by default, unless overridden by passing <code>stripBOM: false</code> in options    (f.ex. <code>iconv.decode(buf, enc, {stripBOM: false})</code>).    A callback might also be given as a <code>stripBOM</code> parameter - it'll be called if BOM character was actually found.</li> <li>If you want to detect UTF-8 BOM when decoding other encodings, use node-autodetect-decoder-stream module.</li> <li>Encoding: No BOM added, unless overridden by <code>addBOM: true</code> option.</li> </ul>"},{"location":"ejemplos/servidor/node_modules/iconv-lite/#utf-16-encodings","title":"UTF-16 Encodings","text":"<p>This library supports UTF-16LE, UTF-16BE and UTF-16 encodings. First two are straightforward, but UTF-16 is trying to be smart about endianness in the following ways:  * Decoding: uses BOM and 'spaces heuristic' to determine input endianness. Default is UTF-16LE, but can be     overridden with <code>defaultEncoding: 'utf-16be'</code> option. Strips BOM unless <code>stripBOM: false</code>.  * Encoding: uses UTF-16LE and writes BOM by default. Use <code>addBOM: false</code> to override.</p>"},{"location":"ejemplos/servidor/node_modules/iconv-lite/#other-notes","title":"Other notes","text":"<p>When decoding, be sure to supply a Buffer to decode() method, otherwise bad things usually happen. Untranslatable characters are set to \ufffd or ?. No transliteration is currently supported. Node versions 0.10.31 and 0.11.13 are buggy, don't use them (see #65, #77).  </p>"},{"location":"ejemplos/servidor/node_modules/iconv-lite/#testing","title":"Testing","text":"<pre><code>$ git clone git@github.com:ashtuchkin/iconv-lite.git\n$ cd iconv-lite\n$ npm install\n$ npm test\n\n$ # To view performance:\n$ node test/performance.js\n\n$ # To view test coverage:\n$ npm run coverage\n$ open coverage/lcov-report/index.html\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/iconv-lite/Changelog/","title":"0.4.24 / 2018-08-22","text":"<ul> <li>Added MIK encoding (#196, by @Ivan-Kalatchev)</li> </ul>"},{"location":"ejemplos/servidor/node_modules/iconv-lite/Changelog/#0423-2018-05-07","title":"0.4.23 / 2018-05-07","text":"<ul> <li>Fix deprecation warning in Node v10 due to the last usage of <code>new Buffer</code> (#185, by @felixbuenemann)</li> <li>Switched from NodeBuffer to Buffer in typings (#155 by @felixfbecker, #186 by @larssn)</li> </ul>"},{"location":"ejemplos/servidor/node_modules/iconv-lite/Changelog/#0422-2018-05-05","title":"0.4.22 / 2018-05-05","text":"<ul> <li>Use older semver style for dependencies to be compatible with Node version 0.10 (#182, by @dougwilson)</li> <li>Fix tests to accomodate fixes in Node v10 (#182, by @dougwilson)</li> </ul>"},{"location":"ejemplos/servidor/node_modules/iconv-lite/Changelog/#0421-2018-04-06","title":"0.4.21 / 2018-04-06","text":"<ul> <li>Fix encoding canonicalization (#156)</li> <li>Fix the paths in the \"browser\" field in package.json (#174 by @LMLB)</li> <li>Removed \"contributors\" section in package.json - see Git history instead.</li> </ul>"},{"location":"ejemplos/servidor/node_modules/iconv-lite/Changelog/#0420-2018-04-06","title":"0.4.20 / 2018-04-06","text":"<ul> <li>Updated <code>new Buffer()</code> usages with recommended replacements as it's being deprecated in Node v10 (#176, #178 by @ChALkeR)</li> </ul>"},{"location":"ejemplos/servidor/node_modules/iconv-lite/Changelog/#0419-2017-09-09","title":"0.4.19 / 2017-09-09","text":"<ul> <li>Fixed iso8859-1 codec regression in handling untranslatable characters (#162, caused by #147)</li> <li>Re-generated windows1255 codec, because it was updated in iconv project</li> <li>Fixed grammar in error message when iconv-lite is loaded with encoding other than utf8</li> </ul>"},{"location":"ejemplos/servidor/node_modules/iconv-lite/Changelog/#0418-2017-06-13","title":"0.4.18 / 2017-06-13","text":"<ul> <li>Fixed CESU-8 regression in Node v8.</li> </ul>"},{"location":"ejemplos/servidor/node_modules/iconv-lite/Changelog/#0417-2017-04-22","title":"0.4.17 / 2017-04-22","text":"<ul> <li>Updated typescript definition file to support Angular 2 AoT mode (#153 by @larssn)</li> </ul>"},{"location":"ejemplos/servidor/node_modules/iconv-lite/Changelog/#0416-2017-04-22","title":"0.4.16 / 2017-04-22","text":"<ul> <li>Added support for React Native (#150)</li> <li>Changed iso8859-1 encoding to usine internal 'binary' encoding, as it's the same thing (#147 by @mscdex)</li> <li>Fixed typo in Readme (#138 by @jiangzhuo)</li> <li>Fixed build for Node v6.10+ by making correct version comparison</li> <li>Added a warning if iconv-lite is loaded not as utf-8 (see #142)</li> </ul>"},{"location":"ejemplos/servidor/node_modules/iconv-lite/Changelog/#0415-2016-11-21","title":"0.4.15 / 2016-11-21","text":"<ul> <li>Fixed typescript type definition (#137)</li> </ul>"},{"location":"ejemplos/servidor/node_modules/iconv-lite/Changelog/#0414-2016-11-20","title":"0.4.14 / 2016-11-20","text":"<ul> <li>Preparation for v1.0</li> <li>Added Node v6 and latest Node versions to Travis CI test rig</li> <li>Deprecated Node v0.8 support</li> <li>Typescript typings (@larssn)</li> <li>Fix encoding of Euro character in GB 18030 (inspired by @lygstate)</li> <li>Add ms prefix to dbcs windows encodings (@rokoroku)</li> </ul>"},{"location":"ejemplos/servidor/node_modules/iconv-lite/Changelog/#0413-2015-10-01","title":"0.4.13 / 2015-10-01","text":"<ul> <li>Fix silly mistake in deprecation notice.</li> </ul>"},{"location":"ejemplos/servidor/node_modules/iconv-lite/Changelog/#0412-2015-09-26","title":"0.4.12 / 2015-09-26","text":"<ul> <li>Node v4 support:</li> <li>Added CESU-8 decoding (#106)</li> <li>Added deprecation notice for <code>extendNodeEncodings</code></li> <li>Added Travis tests for Node v4 and io.js latest (#105 by @Mithgol)</li> </ul>"},{"location":"ejemplos/servidor/node_modules/iconv-lite/Changelog/#0411-2015-07-03","title":"0.4.11 / 2015-07-03","text":"<ul> <li>Added CESU-8 encoding.</li> </ul>"},{"location":"ejemplos/servidor/node_modules/iconv-lite/Changelog/#0410-2015-05-26","title":"0.4.10 / 2015-05-26","text":"<ul> <li>Changed UTF-16 endianness heuristic to take into account any ASCII chars, not    just spaces. This should minimize the importance of \"default\" endianness.</li> </ul>"},{"location":"ejemplos/servidor/node_modules/iconv-lite/Changelog/#049-2015-05-24","title":"0.4.9 / 2015-05-24","text":"<ul> <li>Streamlined BOM handling: strip BOM by default, add BOM when encoding if     addBOM: true. Added docs to Readme.</li> <li>UTF16 now uses UTF16-LE by default.</li> <li>Fixed minor issue with big5 encoding.</li> <li>Added io.js testing on Travis; updated node-iconv version to test against.    Now we just skip testing SBCS encodings that node-iconv doesn't support.</li> <li>(internal refactoring) Updated codec interface to use classes.</li> <li>Use strict mode in all files.</li> </ul>"},{"location":"ejemplos/servidor/node_modules/iconv-lite/Changelog/#048-2015-04-14","title":"0.4.8 / 2015-04-14","text":"<ul> <li>added alias UNICODE-1-1-UTF-7 for UTF-7 encoding (#94)</li> </ul>"},{"location":"ejemplos/servidor/node_modules/iconv-lite/Changelog/#047-2015-02-05","title":"0.4.7 / 2015-02-05","text":"<ul> <li>stop official support of Node.js v0.8. Should still work, but no guarantees.    reason: Packages needed for testing are hard to get on Travis CI.</li> <li>work in environment where Object.prototype is monkey patched with enumerable     props (#89).</li> </ul>"},{"location":"ejemplos/servidor/node_modules/iconv-lite/Changelog/#046-2015-01-12","title":"0.4.6 / 2015-01-12","text":"<ul> <li>fix rare aliases of single-byte encodings (thanks @mscdex)</li> <li>double the timeout for dbcs tests to make them less flaky on travis</li> </ul>"},{"location":"ejemplos/servidor/node_modules/iconv-lite/Changelog/#045-2014-11-20","title":"0.4.5 / 2014-11-20","text":"<ul> <li>fix windows-31j and x-sjis encoding support (@nleush)</li> <li>minor fix: undefined variable reference when internal error happens</li> </ul>"},{"location":"ejemplos/servidor/node_modules/iconv-lite/Changelog/#044-2014-07-16","title":"0.4.4 / 2014-07-16","text":"<ul> <li>added encodings UTF-7 (RFC2152) and UTF-7-IMAP (RFC3501 Section 5.1.3)</li> <li>fixed streaming base64 encoding</li> </ul>"},{"location":"ejemplos/servidor/node_modules/iconv-lite/Changelog/#043-2014-06-14","title":"0.4.3 / 2014-06-14","text":"<ul> <li>added encodings UTF-16BE and UTF-16 with BOM</li> </ul>"},{"location":"ejemplos/servidor/node_modules/iconv-lite/Changelog/#042-2014-06-12","title":"0.4.2 / 2014-06-12","text":"<ul> <li>don't throw exception if <code>extendNodeEncodings()</code> is called more than once</li> </ul>"},{"location":"ejemplos/servidor/node_modules/iconv-lite/Changelog/#041-2014-06-11","title":"0.4.1 / 2014-06-11","text":"<ul> <li>codepage 808 added</li> </ul>"},{"location":"ejemplos/servidor/node_modules/iconv-lite/Changelog/#040-2014-06-10","title":"0.4.0 / 2014-06-10","text":"<ul> <li>code is rewritten from scratch</li> <li>all widespread encodings are supported</li> <li>streaming interface added</li> <li>browserify compatibility added</li> <li>(optional) extend core primitive encodings to make usage even simpler</li> <li>moved from vows to mocha as the testing framework</li> </ul>"},{"location":"ejemplos/servidor/node_modules/inherits/","title":"Index","text":"<p>Browser-friendly inheritance fully compatible with standard node.js inherits.</p> <p>This package exports standard <code>inherits</code> from node.js <code>util</code> module in node environment, but also provides alternative browser-friendly implementation through browser field. Alternative implementation is a literal copy of standard one located in standalone module to avoid requiring of <code>util</code>. It also has a shim for old browsers with no <code>Object.create</code> support.</p> <p>While keeping you sure you are using standard <code>inherits</code> implementation in node.js environment, it allows bundlers such as browserify to not include full <code>util</code> package to your client code if all you need is just <code>inherits</code> function. It worth, because browser shim for <code>util</code> package is large and <code>inherits</code> is often the single function you need from it.</p> <p>It's recommended to use this package instead of <code>require('util').inherits</code> for any code that has chances to be used not only in node.js but in browser too.</p>"},{"location":"ejemplos/servidor/node_modules/inherits/#usage","title":"usage","text":"<pre><code>var inherits = require('inherits');\n// then use exactly as the standard one\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/inherits/#note-on-version-10","title":"note on version ~1.0","text":"<p>Version ~1.0 had completely different motivation and is not compatible neither with 2.0 nor with standard node.js <code>inherits</code>.</p> <p>If you are using version ~1.0 and planning to switch to ~2.0, be careful:</p> <ul> <li>new version uses <code>super_</code> instead of <code>super</code> for referencing   superclass</li> <li>new version overwrites current prototype while old one preserves any   existing fields on it</li> </ul>"},{"location":"ejemplos/servidor/node_modules/ipaddr.js/","title":"ipaddr.js \u2014 an IPv6 and IPv4 address manipulation library","text":"<p>ipaddr.js is a small (1.9K minified and gzipped) library for manipulating IP addresses in JavaScript environments. It runs on both CommonJS runtimes (e.g. nodejs) and in a web browser.</p> <p>ipaddr.js allows you to verify and parse string representation of an IP address, match it against a CIDR range or range list, determine if it falls into some reserved ranges (examples include loopback and private ranges), and convert between IPv4 and IPv4-mapped IPv6 addresses.</p>"},{"location":"ejemplos/servidor/node_modules/ipaddr.js/#installation","title":"Installation","text":"<p><code>npm install ipaddr.js</code></p> <p>or</p> <p><code>bower install ipaddr.js</code></p>"},{"location":"ejemplos/servidor/node_modules/ipaddr.js/#api","title":"API","text":"<p>ipaddr.js defines one object in the global scope: <code>ipaddr</code>. In CommonJS, it is exported from the module:</p> <pre><code>var ipaddr = require('ipaddr.js');\n</code></pre> <p>The API consists of several global methods and two classes: ipaddr.IPv6 and ipaddr.IPv4.</p>"},{"location":"ejemplos/servidor/node_modules/ipaddr.js/#global-methods","title":"Global methods","text":"<p>There are three global methods defined: <code>ipaddr.isValid</code>, <code>ipaddr.parse</code> and <code>ipaddr.process</code>. All of them receive a string as a single parameter.</p> <p>The <code>ipaddr.isValid</code> method returns <code>true</code> if the address is a valid IPv4 or IPv6 address, and <code>false</code> otherwise. It does not throw any exceptions.</p> <p>The <code>ipaddr.parse</code> method returns an object representing the IP address, or throws an <code>Error</code> if the passed string is not a valid representation of an IP address.</p> <p>The <code>ipaddr.process</code> method works just like the <code>ipaddr.parse</code> one, but it automatically converts IPv4-mapped IPv6 addresses to their IPv4 counterparts before returning. It is useful when you have a Node.js instance listening on an IPv6 socket, and the <code>net.ivp6.bindv6only</code> sysctl parameter (or its equivalent on non-Linux OS) is set to 0. In this case, you can accept IPv4 connections on your IPv6-only socket, but the remote address will be mangled. Use <code>ipaddr.process</code> method to automatically demangle it.</p>"},{"location":"ejemplos/servidor/node_modules/ipaddr.js/#object-representation","title":"Object representation","text":"<p>Parsing methods return an object which descends from <code>ipaddr.IPv6</code> or <code>ipaddr.IPv4</code>. These objects share some properties, but most of them differ.</p>"},{"location":"ejemplos/servidor/node_modules/ipaddr.js/#shared-properties","title":"Shared properties","text":"<p>One can determine the type of address by calling <code>addr.kind()</code>. It will return either <code>\"ipv6\"</code> or <code>\"ipv4\"</code>.</p> <p>An address can be converted back to its string representation with <code>addr.toString()</code>. Note that this method:  * does not return the original string used to create the object (in fact, there is    no way of getting that string)  * returns a compact representation (when it is applicable)</p> <p>A <code>match(range, bits)</code> method can be used to check if the address falls into a certain CIDR range. Note that an address can be (obviously) matched only against an address of the same type.</p> <p>For example:</p> <pre><code>var addr = ipaddr.parse(\"2001:db8:1234::1\");\nvar range = ipaddr.parse(\"2001:db8::\");\n\naddr.match(range, 32); // =&gt; true\n</code></pre> <p>Alternatively, <code>match</code> can also be called as <code>match([range, bits])</code>. In this way, it can be used together with the <code>parseCIDR(string)</code> method, which parses an IP address together with a CIDR range.</p> <p>For example:</p> <pre><code>var addr = ipaddr.parse(\"2001:db8:1234::1\");\n\naddr.match(ipaddr.parseCIDR(\"2001:db8::/32\")); // =&gt; true\n</code></pre> <p>A <code>range()</code> method returns one of predefined names for several special ranges defined by IP protocols. The exact names (and their respective CIDR ranges) can be looked up in the source: IPv6 ranges and IPv4 ranges. Some common ones include <code>\"unicast\"</code> (the default one) and <code>\"reserved\"</code>.</p> <p>You can match against your own range list by using <code>ipaddr.subnetMatch(address, rangeList, defaultName)</code> method. It can work with a mix of IPv6 or IPv4 addresses, and accepts a name-to-subnet map as the range list. For example:</p> <pre><code>var rangeList = {\n  documentationOnly: [ ipaddr.parse('2001:db8::'), 32 ],\n  tunnelProviders: [\n    [ ipaddr.parse('2001:470::'), 32 ], // he.net\n    [ ipaddr.parse('2001:5c0::'), 32 ]  // freenet6\n  ]\n};\nipaddr.subnetMatch(ipaddr.parse('2001:470:8:66::1'), rangeList, 'unknown'); // =&gt; \"tunnelProviders\"\n</code></pre> <p>The addresses can be converted to their byte representation with <code>toByteArray()</code>. (Actually, JavaScript mostly does not know about byte buffers. They are emulated with arrays of numbers, each in range of 0..255.)</p> <pre><code>var bytes = ipaddr.parse('2a00:1450:8007::68').toByteArray(); // ipv6.google.com\nbytes // =&gt; [42, 0x00, 0x14, 0x50, 0x80, 0x07, 0x00, &lt;zeroes...&gt;, 0x00, 0x68 ]\n</code></pre> <p>The <code>ipaddr.IPv4</code> and <code>ipaddr.IPv6</code> objects have some methods defined, too. All of them have the same interface for both protocols, and are similar to global methods.</p> <p><code>ipaddr.IPvX.isValid(string)</code> can be used to check if the string is a valid address for particular protocol, and <code>ipaddr.IPvX.parse(string)</code> is the error-throwing parser.</p> <p><code>ipaddr.IPvX.isValid(string)</code> uses the same format for parsing as the POSIX <code>inet_ntoa</code> function, which accepts unusual formats like <code>0xc0.168.1.1</code> or <code>0x10000000</code>. The function <code>ipaddr.IPv4.isValidFourPartDecimal(string)</code> validates the IPv4 address and also ensures that it is written in four-part decimal format.</p>"},{"location":"ejemplos/servidor/node_modules/ipaddr.js/#ipv6-properties","title":"IPv6 properties","text":"<p>Sometimes you will want to convert IPv6 not to a compact string representation (with the <code>::</code> substitution); the <code>toNormalizedString()</code> method will return an address where all zeroes are explicit.</p> <p>For example:</p> <pre><code>var addr = ipaddr.parse(\"2001:0db8::0001\");\naddr.toString(); // =&gt; \"2001:db8::1\"\naddr.toNormalizedString(); // =&gt; \"2001:db8:0:0:0:0:0:1\"\n</code></pre> <p>The <code>isIPv4MappedAddress()</code> method will return <code>true</code> if this address is an IPv4-mapped one, and <code>toIPv4Address()</code> will return an IPv4 object address.</p> <p>To access the underlying binary representation of the address, use <code>addr.parts</code>.</p> <pre><code>var addr = ipaddr.parse(\"2001:db8:10::1234:DEAD\");\naddr.parts // =&gt; [0x2001, 0xdb8, 0x10, 0, 0, 0, 0x1234, 0xdead]\n</code></pre> <p>A IPv6 zone index can be accessed via <code>addr.zoneId</code>:</p> <pre><code>var addr = ipaddr.parse(\"2001:db8::%eth0\");\naddr.zoneId // =&gt; 'eth0'\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/ipaddr.js/#ipv4-properties","title":"IPv4 properties","text":"<p><code>toIPv4MappedAddress()</code> will return a corresponding IPv4-mapped IPv6 address.</p> <p>To access the underlying representation of the address, use <code>addr.octets</code>.</p> <pre><code>var addr = ipaddr.parse(\"192.168.1.1\");\naddr.octets // =&gt; [192, 168, 1, 1]\n</code></pre> <p><code>prefixLengthFromSubnetMask()</code> will return a CIDR prefix length for a valid IPv4 netmask or null if the netmask is not valid.</p> <pre><code>ipaddr.IPv4.parse('255.255.255.240').prefixLengthFromSubnetMask() == 28\nipaddr.IPv4.parse('255.192.164.0').prefixLengthFromSubnetMask()  == null\n</code></pre> <p><code>subnetMaskFromPrefixLength()</code> will return an IPv4 netmask for a valid CIDR prefix length.</p> <pre><code>ipaddr.IPv4.subnetMaskFromPrefixLength(24) == \"255.255.255.0\"\nipaddr.IPv4.subnetMaskFromPrefixLength(29) == \"255.255.255.248\"\n</code></pre> <p><code>broadcastAddressFromCIDR()</code> will return the broadcast address for a given IPv4 interface and netmask in CIDR notation. <pre><code>ipaddr.IPv4.broadcastAddressFromCIDR(\"172.0.0.1/24\") == \"172.0.0.255\"\n</code></pre> <code>networkAddressFromCIDR()</code> will return the network address for a given IPv4 interface and netmask in CIDR notation. <pre><code>ipaddr.IPv4.networkAddressFromCIDR(\"172.0.0.1/24\") == \"172.0.0.0\"\n</code></pre></p>"},{"location":"ejemplos/servidor/node_modules/ipaddr.js/#conversion","title":"Conversion","text":"<p>IPv4 and IPv6 can be converted bidirectionally to and from network byte order (MSB) byte arrays.</p> <p>The <code>fromByteArray()</code> method will take an array and create an appropriate IPv4 or IPv6 object if the input satisfies the requirements. For IPv4 it has to be an array of four 8-bit values, while for IPv6 it has to be an array of sixteen 8-bit values.</p> <p>For example: <pre><code>var addr = ipaddr.fromByteArray([0x7f, 0, 0, 1]);\naddr.toString(); // =&gt; \"127.0.0.1\"\n</code></pre></p> <p>or</p> <pre><code>var addr = ipaddr.fromByteArray([0x20, 1, 0xd, 0xb8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1])\naddr.toString(); // =&gt; \"2001:db8::1\"\n</code></pre> <p>Both objects also offer a <code>toByteArray()</code> method, which returns an array in network byte order (MSB).</p> <p>For example: <pre><code>var addr = ipaddr.parse(\"127.0.0.1\");\naddr.toByteArray(); // =&gt; [0x7f, 0, 0, 1]\n</code></pre></p> <p>or</p> <pre><code>var addr = ipaddr.parse(\"2001:db8::1\");\naddr.toByteArray(); // =&gt; [0x20, 1, 0xd, 0xb8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/media-typer/","title":"media-typer","text":"<p>Simple RFC 6838 media type parser</p>"},{"location":"ejemplos/servidor/node_modules/media-typer/#installation","title":"Installation","text":"<pre><code>$ npm install media-typer\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/media-typer/#api","title":"API","text":"<pre><code>var typer = require('media-typer')\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/media-typer/#typerparsestring","title":"typer.parse(string)","text":"<pre><code>var obj = typer.parse('image/svg+xml; charset=utf-8')\n</code></pre> <p>Parse a media type string. This will return an object with the following properties (examples are shown for the string <code>'image/svg+xml; charset=utf-8'</code>):</p> <ul> <li> <p><code>type</code>: The type of the media type (always lower case). Example: <code>'image'</code></p> </li> <li> <p><code>subtype</code>: The subtype of the media type (always lower case). Example: <code>'svg'</code></p> </li> <li> <p><code>suffix</code>: The suffix of the media type (always lower case). Example: <code>'xml'</code></p> </li> <li> <p><code>parameters</code>: An object of the parameters in the media type (name of parameter always lower case). Example: <code>{charset: 'utf-8'}</code></p> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/media-typer/#typerparsereq","title":"typer.parse(req)","text":"<pre><code>var obj = typer.parse(req)\n</code></pre> <p>Parse the <code>content-type</code> header from the given <code>req</code>. Short-cut for <code>typer.parse(req.headers['content-type'])</code>.</p>"},{"location":"ejemplos/servidor/node_modules/media-typer/#typerparseres","title":"typer.parse(res)","text":"<pre><code>var obj = typer.parse(res)\n</code></pre> <p>Parse the <code>content-type</code> header set on the given <code>res</code>. Short-cut for <code>typer.parse(res.getHeader('content-type'))</code>.</p>"},{"location":"ejemplos/servidor/node_modules/media-typer/#typerformatobj","title":"typer.format(obj)","text":"<pre><code>var obj = typer.format({type: 'image', subtype: 'svg', suffix: 'xml'})\n</code></pre> <p>Format an object into a media type string. This will return a string of the mime type for the given object. For the properties of the object, see the documentation for <code>typer.parse(string)</code>.</p>"},{"location":"ejemplos/servidor/node_modules/media-typer/#license","title":"License","text":"<p>MIT</p>"},{"location":"ejemplos/servidor/node_modules/media-typer/HISTORY/","title":"0.3.0 / 2014-09-07","text":"<ul> <li>Support Node.js 0.6</li> <li>Throw error when parameter format invalid on parse</li> </ul>"},{"location":"ejemplos/servidor/node_modules/media-typer/HISTORY/#020-2014-06-18","title":"0.2.0 / 2014-06-18","text":"<ul> <li>Add <code>typer.format()</code> to format media types</li> </ul>"},{"location":"ejemplos/servidor/node_modules/media-typer/HISTORY/#010-2014-06-17","title":"0.1.0 / 2014-06-17","text":"<ul> <li>Accept <code>req</code> as argument to <code>parse</code></li> <li>Accept <code>res</code> as argument to <code>parse</code></li> <li>Parse media type with extra LWS between type and first parameter</li> </ul>"},{"location":"ejemplos/servidor/node_modules/media-typer/HISTORY/#000-2014-06-13","title":"0.0.0 / 2014-06-13","text":"<ul> <li>Initial implementation</li> </ul>"},{"location":"ejemplos/servidor/node_modules/merge-descriptors/","title":"Merge Descriptors","text":"<p>Merge objects using descriptors.</p> <pre><code>var thing = {\n  get name() {\n    return 'jon'\n  }\n}\n\nvar animal = {\n\n}\n\nmerge(animal, thing)\n\nanimal.name === 'jon'\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/merge-descriptors/#api","title":"API","text":""},{"location":"ejemplos/servidor/node_modules/merge-descriptors/#mergedestination-source","title":"merge(destination, source)","text":"<p>Redefines <code>destination</code>'s descriptors with <code>source</code>'s.</p>"},{"location":"ejemplos/servidor/node_modules/merge-descriptors/#mergedestination-source-false","title":"merge(destination, source, false)","text":"<p>Defines <code>source</code>'s descriptors on <code>destination</code> if <code>destination</code> does not have a descriptor by the same name.</p>"},{"location":"ejemplos/servidor/node_modules/merge-descriptors/#license","title":"License","text":"<p>MIT</p>"},{"location":"ejemplos/servidor/node_modules/merge-descriptors/HISTORY/","title":"1.0.1 / 2016-01-17","text":"<ul> <li>perf: enable strict mode</li> </ul>"},{"location":"ejemplos/servidor/node_modules/merge-descriptors/HISTORY/#100-2015-03-01","title":"1.0.0 / 2015-03-01","text":"<ul> <li>Add option to only add new descriptors</li> <li>Add simple argument validation</li> <li>Add jsdoc to source file</li> </ul>"},{"location":"ejemplos/servidor/node_modules/merge-descriptors/HISTORY/#002-2013-12-14","title":"0.0.2 / 2013-12-14","text":"<ul> <li>Move repository to <code>component</code> organization</li> </ul>"},{"location":"ejemplos/servidor/node_modules/merge-descriptors/HISTORY/#001-2013-10-29","title":"0.0.1 / 2013-10-29","text":"<ul> <li>Initial release</li> </ul>"},{"location":"ejemplos/servidor/node_modules/methods/","title":"Methods","text":"<p>HTTP verbs that Node.js core's HTTP parser supports.</p> <p>This module provides an export that is just like <code>http.METHODS</code> from Node.js core, with the following differences:</p> <ul> <li>All method names are lower-cased.</li> <li>Contains a fallback list of methods for Node.js versions that do not have a     <code>http.METHODS</code> export (0.10 and lower).</li> <li>Provides the fallback list when using tools like <code>browserify</code> without pulling     in the <code>http</code> shim module.</li> </ul>"},{"location":"ejemplos/servidor/node_modules/methods/#install","title":"Install","text":"<pre><code>$ npm install methods\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/methods/#api","title":"API","text":"<pre><code>var methods = require('methods')\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/methods/#methods_1","title":"methods","text":"<p>This is an array of lower-cased method names that Node.js supports. If Node.js provides the <code>http.METHODS</code> export, then this is the same array lower-cased, otherwise it is a snapshot of the verbs from Node.js 0.10.</p>"},{"location":"ejemplos/servidor/node_modules/methods/#license","title":"License","text":"<p>MIT</p>"},{"location":"ejemplos/servidor/node_modules/methods/HISTORY/","title":"1.1.2 / 2016-01-17","text":"<ul> <li>perf: enable strict mode</li> </ul>"},{"location":"ejemplos/servidor/node_modules/methods/HISTORY/#111-2014-12-30","title":"1.1.1 / 2014-12-30","text":"<ul> <li>Improve <code>browserify</code> support</li> </ul>"},{"location":"ejemplos/servidor/node_modules/methods/HISTORY/#110-2014-07-05","title":"1.1.0 / 2014-07-05","text":"<ul> <li>Add <code>CONNECT</code> method</li> </ul>"},{"location":"ejemplos/servidor/node_modules/methods/HISTORY/#101-2014-06-02","title":"1.0.1 / 2014-06-02","text":"<ul> <li>Fix module to work with harmony transform</li> </ul>"},{"location":"ejemplos/servidor/node_modules/methods/HISTORY/#100-2014-05-08","title":"1.0.0 / 2014-05-08","text":"<ul> <li>Add <code>PURGE</code> method</li> </ul>"},{"location":"ejemplos/servidor/node_modules/methods/HISTORY/#010-2013-10-28","title":"0.1.0 / 2013-10-28","text":"<ul> <li>Add <code>http.METHODS</code> support</li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime/","title":"mime","text":"<p>Comprehensive MIME type mapping API based on mime-db module.</p>"},{"location":"ejemplos/servidor/node_modules/mime/#install","title":"Install","text":"<p>Install with npm:</p> <pre><code>npm install mime\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/mime/#contributing-testing","title":"Contributing / Testing","text":"<pre><code>npm run test\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/mime/#command-line","title":"Command Line","text":"<pre><code>mime [path_string]\n</code></pre> <p>E.g.</p> <pre><code>&gt; mime scripts/jquery.js\napplication/javascript\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/mime/#api-queries","title":"API - Queries","text":""},{"location":"ejemplos/servidor/node_modules/mime/#mimelookuppath","title":"mime.lookup(path)","text":"<p>Get the mime type associated with a file, if no mime type is found <code>application/octet-stream</code> is returned. Performs a case-insensitive lookup using the extension in <code>path</code> (the substring after the last '/' or '.').  E.g.</p> <pre><code>var mime = require('mime');\n\nmime.lookup('/path/to/file.txt');         // =&gt; 'text/plain'\nmime.lookup('file.txt');                  // =&gt; 'text/plain'\nmime.lookup('.TXT');                      // =&gt; 'text/plain'\nmime.lookup('htm');                       // =&gt; 'text/html'\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/mime/#mimedefault_type","title":"mime.default_type","text":"<p>Sets the mime type returned when <code>mime.lookup</code> fails to find the extension searched for. (Default is <code>application/octet-stream</code>.)</p>"},{"location":"ejemplos/servidor/node_modules/mime/#mimeextensiontype","title":"mime.extension(type)","text":"<p>Get the default extension for <code>type</code></p> <pre><code>mime.extension('text/html');                 // =&gt; 'html'\nmime.extension('application/octet-stream');  // =&gt; 'bin'\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/mime/#mimecharsetslookup","title":"mime.charsets.lookup()","text":"<p>Map mime-type to charset</p> <pre><code>mime.charsets.lookup('text/plain');        // =&gt; 'UTF-8'\n</code></pre> <p>(The logic for charset lookups is pretty rudimentary.  Feel free to suggest improvements.)</p>"},{"location":"ejemplos/servidor/node_modules/mime/#api-defining-custom-types","title":"API - Defining Custom Types","text":"<p>Custom type mappings can be added on a per-project basis via the following APIs.</p>"},{"location":"ejemplos/servidor/node_modules/mime/#mimedefine","title":"mime.define()","text":"<p>Add custom mime/extension mappings</p> <pre><code>mime.define({\n    'text/x-some-format': ['x-sf', 'x-sft', 'x-sfml'],\n    'application/x-my-type': ['x-mt', 'x-mtt'],\n    // etc ...\n});\n\nmime.lookup('x-sft');                 // =&gt; 'text/x-some-format'\n</code></pre> <p>The first entry in the extensions array is returned by <code>mime.extension()</code>. E.g.</p> <pre><code>mime.extension('text/x-some-format'); // =&gt; 'x-sf'\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/mime/#mimeloadfilepath","title":"mime.load(filepath)","text":"<p>Load mappings from an Apache \".types\" format file</p> <p><pre><code>mime.load('./my_project.types');\n</code></pre> The .types file format is simple -  See the <code>types</code> dir for examples.</p>"},{"location":"ejemplos/servidor/node_modules/mime/CHANGELOG/","title":"Changelog","text":""},{"location":"ejemplos/servidor/node_modules/mime/CHANGELOG/#v160-24112017","title":"v1.6.0 (24/11/2017)","text":"<p>No changelog for this release.</p>"},{"location":"ejemplos/servidor/node_modules/mime/CHANGELOG/#v204-24112017","title":"v2.0.4 (24/11/2017)","text":"<ul> <li>[closed] Switch to mime-score module for resolving extension contention issues. #182</li> <li>[closed] Update mime-db to 1.31.0 in v1.x branch #181</li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime/CHANGELOG/#v150-22112017","title":"v1.5.0 (22/11/2017)","text":"<ul> <li>[closed] need ES5 version ready in npm package #179</li> <li>[closed] mime-db no trace of iWork - pages / numbers / etc. #178</li> <li>[closed] How it works in brownser ? #176</li> <li>[closed] Missing <code>./Mime</code> #175</li> <li>[closed] Vulnerable Regular Expression #167</li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime/CHANGELOG/#v203-25092017","title":"v2.0.3 (25/09/2017)","text":"<p>No changelog for this release.</p>"},{"location":"ejemplos/servidor/node_modules/mime/CHANGELOG/#v141-25092017","title":"v1.4.1 (25/09/2017)","text":"<ul> <li>[closed] Issue when bundling with webpack #172</li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime/CHANGELOG/#v202-15092017","title":"v2.0.2 (15/09/2017)","text":"<ul> <li>[V2] fs.readFileSync is not a function #165</li> <li>[closed] The extension for video/quicktime should map to .mov, not .qt #164</li> <li>[V2] [v2 Feedback request] Mime class API #163</li> <li>[V2] [v2 Feedback request] Resolving conflicts over extensions #162</li> <li>[V2] Allow callers to load module with official, full, or no defined types.  #161</li> <li>[V2] Use \"facets\" to resolve extension conflicts #160</li> <li>[V2] Remove fs and path dependencies #152</li> <li>[V2] Default content-type should not be application/octet-stream #139</li> <li>[V2] reset mime-types #124</li> <li>[V2] Extensionless paths should return null or false #113</li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime/CHANGELOG/#v201-14092017","title":"v2.0.1 (14/09/2017)","text":"<ul> <li>[closed] Changelog for v2.0 does not mention breaking changes #171</li> <li>[closed] MIME breaking with 'class' declaration as it is without 'use strict mode' #170</li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime/CHANGELOG/#v200-12092017","title":"v2.0.0 (12/09/2017)","text":"<ul> <li>[closed] woff and woff2 #168</li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime/CHANGELOG/#v140-28082017","title":"v1.4.0 (28/08/2017)","text":"<ul> <li>[closed] support for ac3 voc files #159</li> <li>[closed] Help understanding change from application/xml to text/xml #158</li> <li>[closed] no longer able to override mimetype #157</li> <li>[closed] application/vnd.adobe.photoshop #147</li> <li>[closed] Directories should appear as something other than application/octet-stream #135</li> <li>[closed] requested features #131</li> <li>[closed] Make types.json loading optional? #129</li> <li>[closed] Cannot find module './types.json' #120</li> <li>[V2] .wav files show up as \"audio/x-wav\" instead of \"audio/x-wave\" #118</li> <li>[closed] Don't be a pain in the ass for node community #108</li> <li>[closed] don't make default_type global #78</li> <li>[closed] mime.extension() fails if the content-type is parameterized #74</li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime/CHANGELOG/#v136-11052017","title":"v1.3.6 (11/05/2017)","text":"<ul> <li>[closed] .md should be text/markdown as of March 2016 #154</li> <li>[closed] Error while installing mime #153</li> <li>[closed] application/manifest+json #149</li> <li>[closed] Dynamic adaptive streaming over HTTP (DASH) file extension typo #141</li> <li>[closed] charsets image/png undefined #140</li> <li>[closed] Mime-db dependency out of date #130</li> <li>[closed] how to support plist\uff1f #126</li> <li>[closed] how does .types file format look like? #123</li> <li>[closed] Feature: support for expanding MIME patterns #121</li> <li>[closed] DEBUG_MIME doesn't work #117</li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime/CHANGELOG/#v134-06022015","title":"v1.3.4 (06/02/2015)","text":"<p>No changelog for this release.</p>"},{"location":"ejemplos/servidor/node_modules/mime/CHANGELOG/#v133-06022015","title":"v1.3.3 (06/02/2015)","text":"<p>No changelog for this release.</p>"},{"location":"ejemplos/servidor/node_modules/mime/CHANGELOG/#v131-05022015","title":"v1.3.1 (05/02/2015)","text":"<ul> <li>[closed] Consider adding support for Handlebars .hbs file ending #111</li> <li>[closed] Consider adding support for hjson. #110</li> <li>[closed] Add mime type for Opus audio files #94</li> <li>[closed] Consider making the <code>Requesting New Types</code> information more visible #77</li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime/CHANGELOG/#v130-05022015","title":"v1.3.0 (05/02/2015)","text":"<ul> <li>[closed] Add common name? #114</li> <li>[closed] application/x-yaml #104</li> <li>[closed] Add mime type for WOFF file format 2.0 #102</li> <li>[closed] application/x-msi for .msi #99</li> <li>[closed] Add mimetype for gettext translation files #98</li> <li>[closed] collaborators #88</li> <li>[closed] getting errot in installation of mime module...any1 can help? #87</li> <li>[closed] should application/json's charset be utf8? #86</li> <li>[closed] Add \"license\" and \"licenses\" to package.json #81</li> <li>[closed] lookup with extension-less file on Windows returns wrong type #68</li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime/CHANGELOG/#v1211-15082013","title":"v1.2.11 (15/08/2013)","text":"<ul> <li>[closed] Update mime.types #65</li> <li>[closed] Publish a new version #63</li> <li>[closed] README should state upfront that \"application/octet-stream\" is default for unknown extension #55</li> <li>[closed] Suggested improvement to the charset API #52</li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime/CHANGELOG/#v1210-25072013","title":"v1.2.10 (25/07/2013)","text":"<ul> <li>[closed] Mime type for woff files should be application/font-woff and not application/x-font-woff #62</li> <li>[closed] node.types in conflict with mime.types #51</li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime/CHANGELOG/#v129-17012013","title":"v1.2.9 (17/01/2013)","text":"<ul> <li>[closed] Please update \"mime\" NPM #49</li> <li>[closed] Please add semicolon #46</li> <li>[closed] parse full mime types #43</li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime/CHANGELOG/#v128-10012013","title":"v1.2.8 (10/01/2013)","text":"<ul> <li>[closed] /js directory mime is application/javascript. Is it correct? #47</li> <li>[closed] Add mime types for lua code. #45</li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime/CHANGELOG/#v127-19102012","title":"v1.2.7 (19/10/2012)","text":"<ul> <li>[closed] cannot install 1.2.7 via npm #41</li> <li>[closed] Transfer ownership to @broofa #36</li> <li>[closed] it's wrong to set charset to UTF-8 for text #30</li> <li>[closed] Allow multiple instances of MIME types container #27</li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime/CHANGELOG/#v125-16022012","title":"v1.2.5 (16/02/2012)","text":"<ul> <li>[closed] When looking up a types, check hasOwnProperty #23</li> <li>[closed] Bump version to 1.2.2 #18</li> <li>[closed] No license #16</li> <li>[closed] Some types missing that are used by html5/css3 #13</li> <li>[closed] npm install fails for 1.2.1 #12</li> <li>[closed] image/pjpeg + image/x-png #10</li> <li>[closed] symlink #8</li> <li>[closed] gzip #2</li> <li>[closed] ALL CAPS filenames return incorrect mime type #1</li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime-db/","title":"mime-db","text":"<p>This is a database of all mime types. It consists of a single, public JSON file and does not include any logic, allowing it to remain as un-opinionated as possible with an API. It aggregates data from the following sources:</p> <ul> <li>http://www.iana.org/assignments/media-types/media-types.xhtml</li> <li>http://svn.apache.org/repos/asf/httpd/httpd/trunk/docs/conf/mime.types</li> <li>http://hg.nginx.org/nginx/raw-file/default/conf/mime.types</li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime-db/#installation","title":"Installation","text":"<pre><code>npm install mime-db\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/mime-db/#database-download","title":"Database Download","text":"<p>If you're crazy enough to use this in the browser, you can just grab the JSON file using jsDelivr. It is recommended to replace <code>master</code> with a release tag as the JSON format may change in the future.</p> <pre><code>https://cdn.jsdelivr.net/gh/jshttp/mime-db@master/db.json\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/mime-db/#usage","title":"Usage","text":"<pre><code>var db = require('mime-db')\n\n// grab data on .js files\nvar data = db['application/javascript']\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/mime-db/#data-structure","title":"Data Structure","text":"<p>The JSON file is a map lookup for lowercased mime types. Each mime type has the following properties:</p> <ul> <li><code>.source</code> - where the mime type is defined.     If not set, it's probably a custom media type.<ul> <li><code>apache</code> - Apache common media types</li> <li><code>iana</code> - IANA-defined media types</li> <li><code>nginx</code> - nginx media types</li> </ul> </li> <li><code>.extensions[]</code> - known extensions associated with this mime type.</li> <li><code>.compressible</code> - whether a file of this type can be gzipped.</li> <li><code>.charset</code> - the default charset associated with this type, if any.</li> </ul> <p>If unknown, every property could be <code>undefined</code>.</p>"},{"location":"ejemplos/servidor/node_modules/mime-db/#contributing","title":"Contributing","text":"<p>To edit the database, only make PRs against <code>src/custom-types.json</code> or <code>src/custom-suffix.json</code>.</p> <p>The <code>src/custom-types.json</code> file is a JSON object with the MIME type as the keys and the values being an object with the following keys:</p> <ul> <li><code>compressible</code> - leave out if you don't know, otherwise <code>true</code>/<code>false</code> to   indicate whether the data represented by the type is typically compressible.</li> <li><code>extensions</code> - include an array of file extensions that are associated with   the type.</li> <li><code>notes</code> - human-readable notes about the type, typically what the type is.</li> <li><code>sources</code> - include an array of URLs of where the MIME type and the associated   extensions are sourced from. This needs to be a primary source;   links to type aggregating sites and Wikipedia are not acceptable.</li> </ul> <p>To update the build, run <code>npm run build</code>.</p>"},{"location":"ejemplos/servidor/node_modules/mime-db/#adding-custom-media-types","title":"Adding Custom Media Types","text":"<p>The best way to get new media types included in this library is to register them with the IANA. The community registration procedure is outlined in RFC 6838 section 5. Types registered with the IANA are automatically pulled into this library.</p> <p>If that is not possible / feasible, they can be added directly here as a \"custom\" type. To do this, it is required to have a primary source that definitively lists the media type. If an extension is going to be listed as associateed with this media type, the source must definitively link the media type and extension as well.</p>"},{"location":"ejemplos/servidor/node_modules/mime-db/HISTORY/","title":"1.45.0 / 2020-09-22","text":"<ul> <li>Add <code>application/ubjson</code> with extension <code>.ubj</code></li> <li>Add <code>image/avif</code> with extension <code>.avif</code></li> <li>Add <code>image/ktx2</code> with extension <code>.ktx2</code></li> <li>Add extension <code>.dbf</code> to <code>application/vnd.dbf</code></li> <li>Add extension <code>.rar</code> to <code>application/vnd.rar</code></li> <li>Add extension <code>.td</code> to <code>application/urc-targetdesc+xml</code></li> <li>Add new upstream MIME types</li> <li>Fix extension of <code>application/vnd.apple.keynote</code> to be <code>.key</code></li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime-db/HISTORY/#1440-2020-04-22","title":"1.44.0 / 2020-04-22","text":"<ul> <li>Add charsets from IANA</li> <li>Add extension <code>.cjs</code> to <code>application/node</code></li> <li>Add new upstream MIME types</li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime-db/HISTORY/#1430-2020-01-05","title":"1.43.0 / 2020-01-05","text":"<ul> <li>Add <code>application/x-keepass2</code> with extension <code>.kdbx</code></li> <li>Add extension <code>.mxmf</code> to <code>audio/mobile-xmf</code></li> <li>Add extensions from IANA for <code>application/*+xml</code> types</li> <li>Add new upstream MIME types</li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime-db/HISTORY/#1420-2019-09-25","title":"1.42.0 / 2019-09-25","text":"<ul> <li>Add <code>image/vnd.ms-dds</code> with extension <code>.dds</code></li> <li>Add new upstream MIME types</li> <li>Remove compressible from <code>multipart/mixed</code></li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime-db/HISTORY/#1410-2019-08-30","title":"1.41.0 / 2019-08-30","text":"<ul> <li>Add new upstream MIME types</li> <li>Add <code>application/toml</code> with extension <code>.toml</code></li> <li>Mark <code>font/ttf</code> as compressible</li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime-db/HISTORY/#1400-2019-04-20","title":"1.40.0 / 2019-04-20","text":"<ul> <li>Add extensions from IANA for <code>model/*</code> types</li> <li>Add <code>text/mdx</code> with extension <code>.mdx</code></li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime-db/HISTORY/#1390-2019-04-04","title":"1.39.0 / 2019-04-04","text":"<ul> <li>Add extensions <code>.siv</code> and <code>.sieve</code> to <code>application/sieve</code></li> <li>Add new upstream MIME types</li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime-db/HISTORY/#1380-2019-02-04","title":"1.38.0 / 2019-02-04","text":"<ul> <li>Add extension <code>.nq</code> to <code>application/n-quads</code></li> <li>Add extension <code>.nt</code> to <code>application/n-triples</code></li> <li>Add new upstream MIME types</li> <li>Mark <code>text/less</code> as compressible</li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime-db/HISTORY/#1370-2018-10-19","title":"1.37.0 / 2018-10-19","text":"<ul> <li>Add extensions to HEIC image types</li> <li>Add new upstream MIME types</li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime-db/HISTORY/#1360-2018-08-20","title":"1.36.0 / 2018-08-20","text":"<ul> <li>Add Apple file extensions from IANA</li> <li>Add extensions from IANA for <code>image/*</code> types</li> <li>Add new upstream MIME types</li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime-db/HISTORY/#1350-2018-07-15","title":"1.35.0 / 2018-07-15","text":"<ul> <li>Add extension <code>.owl</code> to <code>application/rdf+xml</code></li> <li>Add new upstream MIME types<ul> <li>Removes extension <code>.woff</code> from <code>application/font-woff</code></li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime-db/HISTORY/#1340-2018-06-03","title":"1.34.0 / 2018-06-03","text":"<ul> <li>Add extension <code>.csl</code> to <code>application/vnd.citationstyles.style+xml</code></li> <li>Add extension <code>.es</code> to <code>application/ecmascript</code></li> <li>Add new upstream MIME types</li> <li>Add <code>UTF-8</code> as default charset for <code>text/turtle</code></li> <li>Mark all XML-derived types as compressible</li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime-db/HISTORY/#1330-2018-02-15","title":"1.33.0 / 2018-02-15","text":"<ul> <li>Add extensions from IANA for <code>message/*</code> types</li> <li>Add new upstream MIME types</li> <li>Fix some incorrect OOXML types</li> <li>Remove <code>application/font-woff2</code></li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime-db/HISTORY/#1320-2017-11-29","title":"1.32.0 / 2017-11-29","text":"<ul> <li>Add new upstream MIME types</li> <li>Update <code>text/hjson</code> to registered <code>application/hjson</code></li> <li>Add <code>text/shex</code> with extension <code>.shex</code></li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime-db/HISTORY/#1310-2017-10-25","title":"1.31.0 / 2017-10-25","text":"<ul> <li>Add <code>application/raml+yaml</code> with extension <code>.raml</code></li> <li>Add <code>application/wasm</code> with extension <code>.wasm</code></li> <li>Add new <code>font</code> type from IANA</li> <li>Add new upstream font extensions</li> <li>Add new upstream MIME types</li> <li>Add extensions for JPEG-2000 images</li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime-db/HISTORY/#1300-2017-08-27","title":"1.30.0 / 2017-08-27","text":"<ul> <li>Add <code>application/vnd.ms-outlook</code></li> <li>Add <code>application/x-arj</code></li> <li>Add extension <code>.mjs</code> to <code>application/javascript</code></li> <li>Add glTF types and extensions</li> <li>Add new upstream MIME types</li> <li>Add <code>text/x-org</code></li> <li>Add VirtualBox MIME types</li> <li>Fix <code>source</code> records for <code>video/*</code> types that are IANA</li> <li>Update <code>font/opentype</code> to registered <code>font/otf</code></li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime-db/HISTORY/#1290-2017-07-10","title":"1.29.0 / 2017-07-10","text":"<ul> <li>Add <code>application/fido.trusted-apps+json</code></li> <li>Add extension <code>.wadl</code> to <code>application/vnd.sun.wadl+xml</code></li> <li>Add new upstream MIME types</li> <li>Add <code>UTF-8</code> as default charset for <code>text/css</code></li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime-db/HISTORY/#1280-2017-05-14","title":"1.28.0 / 2017-05-14","text":"<ul> <li>Add new upstream MIME types</li> <li>Add extension <code>.gz</code> to <code>application/gzip</code></li> <li>Update extensions <code>.md</code> and <code>.markdown</code> to be <code>text/markdown</code></li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime-db/HISTORY/#1270-2017-03-16","title":"1.27.0 / 2017-03-16","text":"<ul> <li>Add new upstream MIME types</li> <li>Add <code>image/apng</code> with extension <code>.apng</code></li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime-db/HISTORY/#1260-2017-01-14","title":"1.26.0 / 2017-01-14","text":"<ul> <li>Add new upstream MIME types</li> <li>Add extension <code>.geojson</code> to <code>application/geo+json</code></li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime-db/HISTORY/#1250-2016-11-11","title":"1.25.0 / 2016-11-11","text":"<ul> <li>Add new upstream MIME types</li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime-db/HISTORY/#1240-2016-09-18","title":"1.24.0 / 2016-09-18","text":"<ul> <li>Add <code>audio/mp3</code></li> <li>Add new upstream MIME types</li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime-db/HISTORY/#1230-2016-05-01","title":"1.23.0 / 2016-05-01","text":"<ul> <li>Add new upstream MIME types</li> <li>Add extension <code>.3gpp</code> to <code>audio/3gpp</code></li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime-db/HISTORY/#1220-2016-02-15","title":"1.22.0 / 2016-02-15","text":"<ul> <li>Add <code>text/slim</code></li> <li>Add extension <code>.rng</code> to <code>application/xml</code></li> <li>Add new upstream MIME types</li> <li>Fix extension of <code>application/dash+xml</code> to be <code>.mpd</code></li> <li>Update primary extension to <code>.m4a</code> for <code>audio/mp4</code></li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime-db/HISTORY/#1210-2016-01-06","title":"1.21.0 / 2016-01-06","text":"<ul> <li>Add Google document types</li> <li>Add new upstream MIME types</li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime-db/HISTORY/#1200-2015-11-10","title":"1.20.0 / 2015-11-10","text":"<ul> <li>Add <code>text/x-suse-ymp</code></li> <li>Add new upstream MIME types</li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime-db/HISTORY/#1190-2015-09-17","title":"1.19.0 / 2015-09-17","text":"<ul> <li>Add <code>application/vnd.apple.pkpass</code></li> <li>Add new upstream MIME types</li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime-db/HISTORY/#1180-2015-09-03","title":"1.18.0 / 2015-09-03","text":"<ul> <li>Add new upstream MIME types</li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime-db/HISTORY/#1170-2015-08-13","title":"1.17.0 / 2015-08-13","text":"<ul> <li>Add <code>application/x-msdos-program</code></li> <li>Add <code>audio/g711-0</code></li> <li>Add <code>image/vnd.mozilla.apng</code></li> <li>Add extension <code>.exe</code> to <code>application/x-msdos-program</code></li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime-db/HISTORY/#1160-2015-07-29","title":"1.16.0 / 2015-07-29","text":"<ul> <li>Add <code>application/vnd.uri-map</code></li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime-db/HISTORY/#1150-2015-07-13","title":"1.15.0 / 2015-07-13","text":"<ul> <li>Add <code>application/x-httpd-php</code></li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime-db/HISTORY/#1140-2015-06-25","title":"1.14.0 / 2015-06-25","text":"<ul> <li>Add <code>application/scim+json</code></li> <li>Add <code>application/vnd.3gpp.ussd+xml</code></li> <li>Add <code>application/vnd.biopax.rdf+xml</code></li> <li>Add <code>text/x-processing</code></li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime-db/HISTORY/#1130-2015-06-07","title":"1.13.0 / 2015-06-07","text":"<ul> <li>Add nginx as a source</li> <li>Add <code>application/x-cocoa</code></li> <li>Add <code>application/x-java-archive-diff</code></li> <li>Add <code>application/x-makeself</code></li> <li>Add <code>application/x-perl</code></li> <li>Add <code>application/x-pilot</code></li> <li>Add <code>application/x-redhat-package-manager</code></li> <li>Add <code>application/x-sea</code></li> <li>Add <code>audio/x-m4a</code></li> <li>Add <code>audio/x-realaudio</code></li> <li>Add <code>image/x-jng</code></li> <li>Add <code>text/mathml</code></li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime-db/HISTORY/#1120-2015-06-05","title":"1.12.0 / 2015-06-05","text":"<ul> <li>Add <code>application/bdoc</code></li> <li>Add <code>application/vnd.hyperdrive+json</code></li> <li>Add <code>application/x-bdoc</code></li> <li>Add extension <code>.rtf</code> to <code>text/rtf</code></li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime-db/HISTORY/#1110-2015-05-31","title":"1.11.0 / 2015-05-31","text":"<ul> <li>Add <code>audio/wav</code></li> <li>Add <code>audio/wave</code></li> <li>Add extension <code>.litcoffee</code> to <code>text/coffeescript</code></li> <li>Add extension <code>.sfd-hdstx</code> to <code>application/vnd.hydrostatix.sof-data</code></li> <li>Add extension <code>.n-gage</code> to <code>application/vnd.nokia.n-gage.symbian.install</code></li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime-db/HISTORY/#1100-2015-05-19","title":"1.10.0 / 2015-05-19","text":"<ul> <li>Add <code>application/vnd.balsamiq.bmpr</code></li> <li>Add <code>application/vnd.microsoft.portable-executable</code></li> <li>Add <code>application/x-ns-proxy-autoconfig</code></li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime-db/HISTORY/#191-2015-04-19","title":"1.9.1 / 2015-04-19","text":"<ul> <li>Remove <code>.json</code> extension from <code>application/manifest+json</code><ul> <li>This is causing bugs downstream</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime-db/HISTORY/#190-2015-04-19","title":"1.9.0 / 2015-04-19","text":"<ul> <li>Add <code>application/manifest+json</code></li> <li>Add <code>application/vnd.micro+json</code></li> <li>Add <code>image/vnd.zbrush.pcx</code></li> <li>Add <code>image/x-ms-bmp</code></li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime-db/HISTORY/#180-2015-03-13","title":"1.8.0 / 2015-03-13","text":"<ul> <li>Add <code>application/vnd.citationstyles.style+xml</code></li> <li>Add <code>application/vnd.fastcopy-disk-image</code></li> <li>Add <code>application/vnd.gov.sk.xmldatacontainer+xml</code></li> <li>Add extension <code>.jsonld</code> to <code>application/ld+json</code></li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime-db/HISTORY/#170-2015-02-08","title":"1.7.0 / 2015-02-08","text":"<ul> <li>Add <code>application/vnd.gerber</code></li> <li>Add <code>application/vnd.msa-disk-image</code></li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime-db/HISTORY/#161-2015-02-05","title":"1.6.1 / 2015-02-05","text":"<ul> <li>Community extensions ownership transferred from <code>node-mime</code></li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime-db/HISTORY/#160-2015-01-29","title":"1.6.0 / 2015-01-29","text":"<ul> <li>Add <code>application/jose</code></li> <li>Add <code>application/jose+json</code></li> <li>Add <code>application/json-seq</code></li> <li>Add <code>application/jwk+json</code></li> <li>Add <code>application/jwk-set+json</code></li> <li>Add <code>application/jwt</code></li> <li>Add <code>application/rdap+json</code></li> <li>Add <code>application/vnd.gov.sk.e-form+xml</code></li> <li>Add <code>application/vnd.ims.imsccv1p3</code></li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime-db/HISTORY/#150-2014-12-30","title":"1.5.0 / 2014-12-30","text":"<ul> <li>Add <code>application/vnd.oracle.resource+json</code></li> <li>Fix various invalid MIME type entries<ul> <li><code>application/mbox+xml</code></li> <li><code>application/oscp-response</code></li> <li><code>application/vwg-multiplexed</code></li> <li><code>audio/g721</code></li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime-db/HISTORY/#140-2014-12-21","title":"1.4.0 / 2014-12-21","text":"<ul> <li>Add <code>application/vnd.ims.imsccv1p2</code></li> <li>Fix various invalid MIME type entries<ul> <li><code>application/vnd-acucobol</code></li> <li><code>application/vnd-curl</code></li> <li><code>application/vnd-dart</code></li> <li><code>application/vnd-dxr</code></li> <li><code>application/vnd-fdf</code></li> <li><code>application/vnd-mif</code></li> <li><code>application/vnd-sema</code></li> <li><code>application/vnd-wap-wmlc</code></li> <li><code>application/vnd.adobe.flash-movie</code></li> <li><code>application/vnd.dece-zip</code></li> <li><code>application/vnd.dvb_service</code></li> <li><code>application/vnd.micrografx-igx</code></li> <li><code>application/vnd.sealed-doc</code></li> <li><code>application/vnd.sealed-eml</code></li> <li><code>application/vnd.sealed-mht</code></li> <li><code>application/vnd.sealed-ppt</code></li> <li><code>application/vnd.sealed-tiff</code></li> <li><code>application/vnd.sealed-xls</code></li> <li><code>application/vnd.sealedmedia.softseal-html</code></li> <li><code>application/vnd.sealedmedia.softseal-pdf</code></li> <li><code>application/vnd.wap-slc</code></li> <li><code>application/vnd.wap-wbxml</code></li> <li><code>audio/vnd.sealedmedia.softseal-mpeg</code></li> <li><code>image/vnd-djvu</code></li> <li><code>image/vnd-svf</code></li> <li><code>image/vnd-wap-wbmp</code></li> <li><code>image/vnd.sealed-png</code></li> <li><code>image/vnd.sealedmedia.softseal-gif</code></li> <li><code>image/vnd.sealedmedia.softseal-jpg</code></li> <li><code>model/vnd-dwf</code></li> <li><code>model/vnd.parasolid.transmit-binary</code></li> <li><code>model/vnd.parasolid.transmit-text</code></li> <li><code>text/vnd-a</code></li> <li><code>text/vnd-curl</code></li> <li><code>text/vnd.wap-wml</code></li> </ul> </li> <li>Remove example template MIME types<ul> <li><code>application/example</code></li> <li><code>audio/example</code></li> <li><code>image/example</code></li> <li><code>message/example</code></li> <li><code>model/example</code></li> <li><code>multipart/example</code></li> <li><code>text/example</code></li> <li><code>video/example</code></li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime-db/HISTORY/#131-2014-12-16","title":"1.3.1 / 2014-12-16","text":"<ul> <li>Fix missing extensions<ul> <li><code>application/json5</code></li> <li><code>text/hjson</code></li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime-db/HISTORY/#130-2014-12-07","title":"1.3.0 / 2014-12-07","text":"<ul> <li>Add <code>application/a2l</code></li> <li>Add <code>application/aml</code></li> <li>Add <code>application/atfx</code></li> <li>Add <code>application/atxml</code></li> <li>Add <code>application/cdfx+xml</code></li> <li>Add <code>application/dii</code></li> <li>Add <code>application/json5</code></li> <li>Add <code>application/lxf</code></li> <li>Add <code>application/mf4</code></li> <li>Add <code>application/vnd.apache.thrift.compact</code></li> <li>Add <code>application/vnd.apache.thrift.json</code></li> <li>Add <code>application/vnd.coffeescript</code></li> <li>Add <code>application/vnd.enphase.envoy</code></li> <li>Add <code>application/vnd.ims.imsccv1p1</code></li> <li>Add <code>text/csv-schema</code></li> <li>Add <code>text/hjson</code></li> <li>Add <code>text/markdown</code></li> <li>Add <code>text/yaml</code></li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime-db/HISTORY/#120-2014-11-09","title":"1.2.0 / 2014-11-09","text":"<ul> <li>Add <code>application/cea</code></li> <li>Add <code>application/dit</code></li> <li>Add <code>application/vnd.gov.sk.e-form+zip</code></li> <li>Add <code>application/vnd.tmd.mediaflex.api+xml</code></li> <li>Type <code>application/epub+zip</code> is now IANA-registered</li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime-db/HISTORY/#112-2014-10-23","title":"1.1.2 / 2014-10-23","text":"<ul> <li>Rebuild database for <code>application/x-www-form-urlencoded</code> change</li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime-db/HISTORY/#111-2014-10-20","title":"1.1.1 / 2014-10-20","text":"<ul> <li>Mark <code>application/x-www-form-urlencoded</code> as compressible.</li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime-db/HISTORY/#110-2014-09-28","title":"1.1.0 / 2014-09-28","text":"<ul> <li>Add <code>application/font-woff2</code></li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime-db/HISTORY/#103-2014-09-25","title":"1.0.3 / 2014-09-25","text":"<ul> <li>Fix engine requirement in package</li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime-db/HISTORY/#102-2014-09-25","title":"1.0.2 / 2014-09-25","text":"<ul> <li>Add <code>application/coap-group+json</code></li> <li>Add <code>application/dcd</code></li> <li>Add <code>application/vnd.apache.thrift.binary</code></li> <li>Add <code>image/vnd.tencent.tap</code></li> <li>Mark all JSON-derived types as compressible</li> <li>Update <code>text/vtt</code> data</li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime-db/HISTORY/#101-2014-08-30","title":"1.0.1 / 2014-08-30","text":"<ul> <li>Fix extension ordering</li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime-db/HISTORY/#100-2014-08-30","title":"1.0.0 / 2014-08-30","text":"<ul> <li>Add <code>application/atf</code></li> <li>Add <code>application/merge-patch+json</code></li> <li>Add <code>multipart/x-mixed-replace</code></li> <li>Add <code>source: 'apache'</code> metadata</li> <li>Add <code>source: 'iana'</code> metadata</li> <li>Remove badly-assumed charset data</li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime-types/","title":"mime-types","text":"<p>The ultimate javascript content-type utility.</p> <p>Similar to the <code>mime@1.x</code> module, except:</p> <ul> <li>No fallbacks. Instead of naively returning the first available type,   <code>mime-types</code> simply returns <code>false</code>, so do   <code>var type = mime.lookup('unrecognized') || 'application/octet-stream'</code>.</li> <li>No <code>new Mime()</code> business, so you could do <code>var lookup = require('mime-types').lookup</code>.</li> <li>No <code>.define()</code> functionality</li> <li>Bug fixes for <code>.lookup(path)</code></li> </ul> <p>Otherwise, the API is compatible with <code>mime</code> 1.x.</p>"},{"location":"ejemplos/servidor/node_modules/mime-types/#install","title":"Install","text":"<p>This is a Node.js module available through the npm registry. Installation is done using the <code>npm install</code> command:</p> <pre><code>$ npm install mime-types\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/mime-types/#adding-types","title":"Adding Types","text":"<p>All mime types are based on mime-db, so open a PR there if you'd like to add mime types.</p>"},{"location":"ejemplos/servidor/node_modules/mime-types/#api","title":"API","text":"<pre><code>var mime = require('mime-types')\n</code></pre> <p>All functions return <code>false</code> if input is invalid or not found.</p>"},{"location":"ejemplos/servidor/node_modules/mime-types/#mimelookuppath","title":"mime.lookup(path)","text":"<p>Lookup the content-type associated with a file.</p> <pre><code>mime.lookup('json') // 'application/json'\nmime.lookup('.md') // 'text/markdown'\nmime.lookup('file.html') // 'text/html'\nmime.lookup('folder/file.js') // 'application/javascript'\nmime.lookup('folder/.htaccess') // false\n\nmime.lookup('cats') // false\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/mime-types/#mimecontenttypetype","title":"mime.contentType(type)","text":"<p>Create a full content-type header given a content-type or extension. When given an extension, <code>mime.lookup</code> is used to get the matching content-type, otherwise the given content-type is used. Then if the content-type does not already have a <code>charset</code> parameter, <code>mime.charset</code> is used to get the default charset and add to the returned content-type.</p> <pre><code>mime.contentType('markdown') // 'text/x-markdown; charset=utf-8'\nmime.contentType('file.json') // 'application/json; charset=utf-8'\nmime.contentType('text/html') // 'text/html; charset=utf-8'\nmime.contentType('text/html; charset=iso-8859-1') // 'text/html; charset=iso-8859-1'\n\n// from a full path\nmime.contentType(path.extname('/path/to/file.json')) // 'application/json; charset=utf-8'\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/mime-types/#mimeextensiontype","title":"mime.extension(type)","text":"<p>Get the default extension for a content-type.</p> <pre><code>mime.extension('application/octet-stream') // 'bin'\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/mime-types/#mimecharsettype","title":"mime.charset(type)","text":"<p>Lookup the implied default charset of a content-type.</p> <pre><code>mime.charset('text/markdown') // 'UTF-8'\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/mime-types/#var-type-mimetypesextension","title":"var type = mime.types[extension]","text":"<p>A map of content-types by extension.</p>"},{"location":"ejemplos/servidor/node_modules/mime-types/#extensions-mimeextensionstype","title":"[extensions...] = mime.extensions[type]","text":"<p>A map of extensions by content-type.</p>"},{"location":"ejemplos/servidor/node_modules/mime-types/#license","title":"License","text":"<p>MIT</p>"},{"location":"ejemplos/servidor/node_modules/mime-types/HISTORY/","title":"2.1.28 / 2021-01-01","text":"<ul> <li>deps: mime-db@1.45.0<ul> <li>Add <code>application/ubjson</code> with extension <code>.ubj</code></li> <li>Add <code>image/avif</code> with extension <code>.avif</code></li> <li>Add <code>image/ktx2</code> with extension <code>.ktx2</code></li> <li>Add extension <code>.dbf</code> to <code>application/vnd.dbf</code></li> <li>Add extension <code>.rar</code> to <code>application/vnd.rar</code></li> <li>Add extension <code>.td</code> to <code>application/urc-targetdesc+xml</code></li> <li>Add new upstream MIME types</li> <li>Fix extension of <code>application/vnd.apple.keynote</code> to be <code>.key</code></li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime-types/HISTORY/#2127-2020-04-23","title":"2.1.27 / 2020-04-23","text":"<ul> <li>deps: mime-db@1.44.0<ul> <li>Add charsets from IANA</li> <li>Add extension <code>.cjs</code> to <code>application/node</code></li> <li>Add new upstream MIME types</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime-types/HISTORY/#2126-2020-01-05","title":"2.1.26 / 2020-01-05","text":"<ul> <li>deps: mime-db@1.43.0<ul> <li>Add <code>application/x-keepass2</code> with extension <code>.kdbx</code></li> <li>Add extension <code>.mxmf</code> to <code>audio/mobile-xmf</code></li> <li>Add extensions from IANA for <code>application/*+xml</code> types</li> <li>Add new upstream MIME types</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime-types/HISTORY/#2125-2019-11-12","title":"2.1.25 / 2019-11-12","text":"<ul> <li>deps: mime-db@1.42.0<ul> <li>Add new upstream MIME types</li> <li>Add <code>application/toml</code> with extension <code>.toml</code></li> <li>Add <code>image/vnd.ms-dds</code> with extension <code>.dds</code></li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime-types/HISTORY/#2124-2019-04-20","title":"2.1.24 / 2019-04-20","text":"<ul> <li>deps: mime-db@1.40.0<ul> <li>Add extensions from IANA for <code>model/*</code> types</li> <li>Add <code>text/mdx</code> with extension <code>.mdx</code></li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime-types/HISTORY/#2123-2019-04-17","title":"2.1.23 / 2019-04-17","text":"<ul> <li>deps: mime-db@~1.39.0<ul> <li>Add extensions <code>.siv</code> and <code>.sieve</code> to <code>application/sieve</code></li> <li>Add new upstream MIME types</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime-types/HISTORY/#2122-2019-02-14","title":"2.1.22 / 2019-02-14","text":"<ul> <li>deps: mime-db@~1.38.0<ul> <li>Add extension <code>.nq</code> to <code>application/n-quads</code></li> <li>Add extension <code>.nt</code> to <code>application/n-triples</code></li> <li>Add new upstream MIME types</li> <li>Mark <code>text/less</code> as compressible</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime-types/HISTORY/#2121-2018-10-19","title":"2.1.21 / 2018-10-19","text":"<ul> <li>deps: mime-db@~1.37.0<ul> <li>Add extensions to HEIC image types</li> <li>Add new upstream MIME types</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime-types/HISTORY/#2120-2018-08-26","title":"2.1.20 / 2018-08-26","text":"<ul> <li>deps: mime-db@~1.36.0<ul> <li>Add Apple file extensions from IANA</li> <li>Add extensions from IANA for <code>image/*</code> types</li> <li>Add new upstream MIME types</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime-types/HISTORY/#2119-2018-07-17","title":"2.1.19 / 2018-07-17","text":"<ul> <li>deps: mime-db@~1.35.0<ul> <li>Add extension <code>.csl</code> to <code>application/vnd.citationstyles.style+xml</code></li> <li>Add extension <code>.es</code> to <code>application/ecmascript</code></li> <li>Add extension <code>.owl</code> to <code>application/rdf+xml</code></li> <li>Add new upstream MIME types</li> <li>Add UTF-8 as default charset for <code>text/turtle</code></li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime-types/HISTORY/#2118-2018-02-16","title":"2.1.18 / 2018-02-16","text":"<ul> <li>deps: mime-db@~1.33.0<ul> <li>Add <code>application/raml+yaml</code> with extension <code>.raml</code></li> <li>Add <code>application/wasm</code> with extension <code>.wasm</code></li> <li>Add <code>text/shex</code> with extension <code>.shex</code></li> <li>Add extensions for JPEG-2000 images</li> <li>Add extensions from IANA for <code>message/*</code> types</li> <li>Add new upstream MIME types</li> <li>Update font MIME types</li> <li>Update <code>text/hjson</code> to registered <code>application/hjson</code></li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime-types/HISTORY/#2117-2017-09-01","title":"2.1.17 / 2017-09-01","text":"<ul> <li>deps: mime-db@~1.30.0<ul> <li>Add <code>application/vnd.ms-outlook</code></li> <li>Add <code>application/x-arj</code></li> <li>Add extension <code>.mjs</code> to <code>application/javascript</code></li> <li>Add glTF types and extensions</li> <li>Add new upstream MIME types</li> <li>Add <code>text/x-org</code></li> <li>Add VirtualBox MIME types</li> <li>Fix <code>source</code> records for <code>video/*</code> types that are IANA</li> <li>Update <code>font/opentype</code> to registered <code>font/otf</code></li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime-types/HISTORY/#2116-2017-07-24","title":"2.1.16 / 2017-07-24","text":"<ul> <li>deps: mime-db@~1.29.0<ul> <li>Add <code>application/fido.trusted-apps+json</code></li> <li>Add extension <code>.wadl</code> to <code>application/vnd.sun.wadl+xml</code></li> <li>Add extension <code>.gz</code> to <code>application/gzip</code></li> <li>Add new upstream MIME types</li> <li>Update extensions <code>.md</code> and <code>.markdown</code> to be <code>text/markdown</code></li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime-types/HISTORY/#2115-2017-03-23","title":"2.1.15 / 2017-03-23","text":"<ul> <li>deps: mime-db@~1.27.0<ul> <li>Add new mime types</li> <li>Add <code>image/apng</code></li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime-types/HISTORY/#2114-2017-01-14","title":"2.1.14 / 2017-01-14","text":"<ul> <li>deps: mime-db@~1.26.0<ul> <li>Add new mime types</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime-types/HISTORY/#2113-2016-11-18","title":"2.1.13 / 2016-11-18","text":"<ul> <li>deps: mime-db@~1.25.0<ul> <li>Add new mime types</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime-types/HISTORY/#2112-2016-09-18","title":"2.1.12 / 2016-09-18","text":"<ul> <li>deps: mime-db@~1.24.0<ul> <li>Add new mime types</li> <li>Add <code>audio/mp3</code></li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime-types/HISTORY/#2111-2016-05-01","title":"2.1.11 / 2016-05-01","text":"<ul> <li>deps: mime-db@~1.23.0<ul> <li>Add new mime types</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime-types/HISTORY/#2110-2016-02-15","title":"2.1.10 / 2016-02-15","text":"<ul> <li>deps: mime-db@~1.22.0<ul> <li>Add new mime types</li> <li>Fix extension of <code>application/dash+xml</code></li> <li>Update primary extension for <code>audio/mp4</code></li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime-types/HISTORY/#219-2016-01-06","title":"2.1.9 / 2016-01-06","text":"<ul> <li>deps: mime-db@~1.21.0<ul> <li>Add new mime types</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime-types/HISTORY/#218-2015-11-30","title":"2.1.8 / 2015-11-30","text":"<ul> <li>deps: mime-db@~1.20.0<ul> <li>Add new mime types</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime-types/HISTORY/#217-2015-09-20","title":"2.1.7 / 2015-09-20","text":"<ul> <li>deps: mime-db@~1.19.0<ul> <li>Add new mime types</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime-types/HISTORY/#216-2015-09-03","title":"2.1.6 / 2015-09-03","text":"<ul> <li>deps: mime-db@~1.18.0<ul> <li>Add new mime types</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime-types/HISTORY/#215-2015-08-20","title":"2.1.5 / 2015-08-20","text":"<ul> <li>deps: mime-db@~1.17.0<ul> <li>Add new mime types</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime-types/HISTORY/#214-2015-07-30","title":"2.1.4 / 2015-07-30","text":"<ul> <li>deps: mime-db@~1.16.0<ul> <li>Add new mime types</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime-types/HISTORY/#213-2015-07-13","title":"2.1.3 / 2015-07-13","text":"<ul> <li>deps: mime-db@~1.15.0<ul> <li>Add new mime types</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime-types/HISTORY/#212-2015-06-25","title":"2.1.2 / 2015-06-25","text":"<ul> <li>deps: mime-db@~1.14.0<ul> <li>Add new mime types</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime-types/HISTORY/#211-2015-06-08","title":"2.1.1 / 2015-06-08","text":"<ul> <li>perf: fix deopt during mapping</li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime-types/HISTORY/#210-2015-06-07","title":"2.1.0 / 2015-06-07","text":"<ul> <li>Fix incorrectly treating extension-less file name as extension<ul> <li>i.e. <code>'path/to/json'</code> will no longer return <code>application/json</code></li> </ul> </li> <li>Fix <code>.charset(type)</code> to accept parameters</li> <li>Fix <code>.charset(type)</code> to match case-insensitive</li> <li>Improve generation of extension to MIME mapping</li> <li>Refactor internals for readability and no argument reassignment</li> <li>Prefer <code>application/*</code> MIME types from the same source</li> <li>Prefer any type over <code>application/octet-stream</code></li> <li>deps: mime-db@~1.13.0<ul> <li>Add nginx as a source</li> <li>Add new mime types</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime-types/HISTORY/#2014-2015-06-06","title":"2.0.14 / 2015-06-06","text":"<ul> <li>deps: mime-db@~1.12.0<ul> <li>Add new mime types</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime-types/HISTORY/#2013-2015-05-31","title":"2.0.13 / 2015-05-31","text":"<ul> <li>deps: mime-db@~1.11.0<ul> <li>Add new mime types</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime-types/HISTORY/#2012-2015-05-19","title":"2.0.12 / 2015-05-19","text":"<ul> <li>deps: mime-db@~1.10.0<ul> <li>Add new mime types</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime-types/HISTORY/#2011-2015-05-05","title":"2.0.11 / 2015-05-05","text":"<ul> <li>deps: mime-db@~1.9.1<ul> <li>Add new mime types</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime-types/HISTORY/#2010-2015-03-13","title":"2.0.10 / 2015-03-13","text":"<ul> <li>deps: mime-db@~1.8.0<ul> <li>Add new mime types</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime-types/HISTORY/#209-2015-02-09","title":"2.0.9 / 2015-02-09","text":"<ul> <li>deps: mime-db@~1.7.0<ul> <li>Add new mime types</li> <li>Community extensions ownership transferred from <code>node-mime</code></li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime-types/HISTORY/#208-2015-01-29","title":"2.0.8 / 2015-01-29","text":"<ul> <li>deps: mime-db@~1.6.0<ul> <li>Add new mime types</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime-types/HISTORY/#207-2014-12-30","title":"2.0.7 / 2014-12-30","text":"<ul> <li>deps: mime-db@~1.5.0<ul> <li>Add new mime types</li> <li>Fix various invalid MIME type entries</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime-types/HISTORY/#206-2014-12-30","title":"2.0.6 / 2014-12-30","text":"<ul> <li>deps: mime-db@~1.4.0<ul> <li>Add new mime types</li> <li>Fix various invalid MIME type entries</li> <li>Remove example template MIME types</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime-types/HISTORY/#205-2014-12-29","title":"2.0.5 / 2014-12-29","text":"<ul> <li>deps: mime-db@~1.3.1<ul> <li>Fix missing extensions</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime-types/HISTORY/#204-2014-12-10","title":"2.0.4 / 2014-12-10","text":"<ul> <li>deps: mime-db@~1.3.0<ul> <li>Add new mime types</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime-types/HISTORY/#203-2014-11-09","title":"2.0.3 / 2014-11-09","text":"<ul> <li>deps: mime-db@~1.2.0<ul> <li>Add new mime types</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime-types/HISTORY/#202-2014-09-28","title":"2.0.2 / 2014-09-28","text":"<ul> <li>deps: mime-db@~1.1.0<ul> <li>Add new mime types</li> <li>Add additional compressible</li> <li>Update charsets</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime-types/HISTORY/#201-2014-09-07","title":"2.0.1 / 2014-09-07","text":"<ul> <li>Support Node.js 0.6</li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime-types/HISTORY/#200-2014-09-02","title":"2.0.0 / 2014-09-02","text":"<ul> <li>Use <code>mime-db</code></li> <li>Remove <code>.define()</code></li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime-types/HISTORY/#102-2014-08-04","title":"1.0.2 / 2014-08-04","text":"<ul> <li>Set charset=utf-8 for <code>text/javascript</code></li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime-types/HISTORY/#101-2014-06-24","title":"1.0.1 / 2014-06-24","text":"<ul> <li>Add <code>text/jsx</code> type</li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime-types/HISTORY/#100-2014-05-12","title":"1.0.0 / 2014-05-12","text":"<ul> <li>Return <code>false</code> for unknown types</li> <li>Set charset=utf-8 for <code>application/json</code></li> </ul>"},{"location":"ejemplos/servidor/node_modules/mime-types/HISTORY/#010-2014-05-02","title":"0.1.0 / 2014-05-02","text":"<ul> <li>Initial release</li> </ul>"},{"location":"ejemplos/servidor/node_modules/ms/license/","title":"License","text":"<p>The MIT License (MIT)</p> <p>Copyright (c) 2016 Zeit, Inc.</p> <p>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</p> <p>The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</p> <p>THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p>"},{"location":"ejemplos/servidor/node_modules/ms/readme/","title":"ms","text":"<p>Use this package to easily convert various time formats to milliseconds.</p>"},{"location":"ejemplos/servidor/node_modules/ms/readme/#examples","title":"Examples","text":"<pre><code>ms('2 days')  // 172800000\nms('1d')      // 86400000\nms('10h')     // 36000000\nms('2.5 hrs') // 9000000\nms('2h')      // 7200000\nms('1m')      // 60000\nms('5s')      // 5000\nms('1y')      // 31557600000\nms('100')     // 100\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/ms/readme/#convert-from-milliseconds","title":"Convert from milliseconds","text":"<pre><code>ms(60000)             // \"1m\"\nms(2 * 60000)         // \"2m\"\nms(ms('10 hours'))    // \"10h\"\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/ms/readme/#time-format-written-out","title":"Time format written-out","text":"<pre><code>ms(60000, { long: true })             // \"1 minute\"\nms(2 * 60000, { long: true })         // \"2 minutes\"\nms(ms('10 hours'), { long: true })    // \"10 hours\"\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/ms/readme/#features","title":"Features","text":"<ul> <li>Works both in node and in the browser.</li> <li>If a number is supplied to <code>ms</code>, a string with a unit is returned.</li> <li>If a string that contains the number is supplied, it returns it as a number (e.g.: it returns <code>100</code> for <code>'100'</code>).</li> <li>If you pass a string with a number and a valid unit, the number of equivalent ms is returned.</li> </ul>"},{"location":"ejemplos/servidor/node_modules/ms/readme/#caught-a-bug","title":"Caught a bug?","text":"<ol> <li>Fork this repository to your own GitHub account and then clone it to your local device</li> <li>Link the package to the global module directory: <code>npm link</code></li> <li>Within the module you want to test your local development instance of ms, just link it to the dependencies: <code>npm link ms</code>. Instead of the default one from npm, node will now use your clone of ms!</li> </ol> <p>As always, you can run the tests using: <code>npm test</code></p>"},{"location":"ejemplos/servidor/node_modules/negotiator/","title":"negotiator","text":"<p>An HTTP content negotiator for Node.js</p>"},{"location":"ejemplos/servidor/node_modules/negotiator/#installation","title":"Installation","text":"<pre><code>$ npm install negotiator\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/negotiator/#api","title":"API","text":"<pre><code>var Negotiator = require('negotiator')\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/negotiator/#accept-negotiation","title":"Accept Negotiation","text":"<pre><code>availableMediaTypes = ['text/html', 'text/plain', 'application/json']\n\n// The negotiator constructor receives a request object\nnegotiator = new Negotiator(request)\n\n// Let's say Accept header is 'text/html, application/*;q=0.2, image/jpeg;q=0.8'\n\nnegotiator.mediaTypes()\n// -&gt; ['text/html', 'image/jpeg', 'application/*']\n\nnegotiator.mediaTypes(availableMediaTypes)\n// -&gt; ['text/html', 'application/json']\n\nnegotiator.mediaType(availableMediaTypes)\n// -&gt; 'text/html'\n</code></pre> <p>You can check a working example at <code>examples/accept.js</code>.</p>"},{"location":"ejemplos/servidor/node_modules/negotiator/#methods","title":"Methods","text":""},{"location":"ejemplos/servidor/node_modules/negotiator/#mediatype","title":"mediaType()","text":"<p>Returns the most preferred media type from the client.</p>"},{"location":"ejemplos/servidor/node_modules/negotiator/#mediatypeavailablemediatype","title":"mediaType(availableMediaType)","text":"<p>Returns the most preferred media type from a list of available media types.</p>"},{"location":"ejemplos/servidor/node_modules/negotiator/#mediatypes","title":"mediaTypes()","text":"<p>Returns an array of preferred media types ordered by the client preference.</p>"},{"location":"ejemplos/servidor/node_modules/negotiator/#mediatypesavailablemediatypes","title":"mediaTypes(availableMediaTypes)","text":"<p>Returns an array of preferred media types ordered by priority from a list of available media types.</p>"},{"location":"ejemplos/servidor/node_modules/negotiator/#accept-language-negotiation","title":"Accept-Language Negotiation","text":"<pre><code>negotiator = new Negotiator(request)\n\navailableLanguages = ['en', 'es', 'fr']\n\n// Let's say Accept-Language header is 'en;q=0.8, es, pt'\n\nnegotiator.languages()\n// -&gt; ['es', 'pt', 'en']\n\nnegotiator.languages(availableLanguages)\n// -&gt; ['es', 'en']\n\nlanguage = negotiator.language(availableLanguages)\n// -&gt; 'es'\n</code></pre> <p>You can check a working example at <code>examples/language.js</code>.</p>"},{"location":"ejemplos/servidor/node_modules/negotiator/#methods_1","title":"Methods","text":""},{"location":"ejemplos/servidor/node_modules/negotiator/#language","title":"language()","text":"<p>Returns the most preferred language from the client.</p>"},{"location":"ejemplos/servidor/node_modules/negotiator/#languageavailablelanguages","title":"language(availableLanguages)","text":"<p>Returns the most preferred language from a list of available languages.</p>"},{"location":"ejemplos/servidor/node_modules/negotiator/#languages","title":"languages()","text":"<p>Returns an array of preferred languages ordered by the client preference.</p>"},{"location":"ejemplos/servidor/node_modules/negotiator/#languagesavailablelanguages","title":"languages(availableLanguages)","text":"<p>Returns an array of preferred languages ordered by priority from a list of available languages.</p>"},{"location":"ejemplos/servidor/node_modules/negotiator/#accept-charset-negotiation","title":"Accept-Charset Negotiation","text":"<pre><code>availableCharsets = ['utf-8', 'iso-8859-1', 'iso-8859-5']\n\nnegotiator = new Negotiator(request)\n\n// Let's say Accept-Charset header is 'utf-8, iso-8859-1;q=0.8, utf-7;q=0.2'\n\nnegotiator.charsets()\n// -&gt; ['utf-8', 'iso-8859-1', 'utf-7']\n\nnegotiator.charsets(availableCharsets)\n// -&gt; ['utf-8', 'iso-8859-1']\n\nnegotiator.charset(availableCharsets)\n// -&gt; 'utf-8'\n</code></pre> <p>You can check a working example at <code>examples/charset.js</code>.</p>"},{"location":"ejemplos/servidor/node_modules/negotiator/#methods_2","title":"Methods","text":""},{"location":"ejemplos/servidor/node_modules/negotiator/#charset","title":"charset()","text":"<p>Returns the most preferred charset from the client.</p>"},{"location":"ejemplos/servidor/node_modules/negotiator/#charsetavailablecharsets","title":"charset(availableCharsets)","text":"<p>Returns the most preferred charset from a list of available charsets.</p>"},{"location":"ejemplos/servidor/node_modules/negotiator/#charsets","title":"charsets()","text":"<p>Returns an array of preferred charsets ordered by the client preference.</p>"},{"location":"ejemplos/servidor/node_modules/negotiator/#charsetsavailablecharsets","title":"charsets(availableCharsets)","text":"<p>Returns an array of preferred charsets ordered by priority from a list of available charsets.</p>"},{"location":"ejemplos/servidor/node_modules/negotiator/#accept-encoding-negotiation","title":"Accept-Encoding Negotiation","text":"<pre><code>availableEncodings = ['identity', 'gzip']\n\nnegotiator = new Negotiator(request)\n\n// Let's say Accept-Encoding header is 'gzip, compress;q=0.2, identity;q=0.5'\n\nnegotiator.encodings()\n// -&gt; ['gzip', 'identity', 'compress']\n\nnegotiator.encodings(availableEncodings)\n// -&gt; ['gzip', 'identity']\n\nnegotiator.encoding(availableEncodings)\n// -&gt; 'gzip'\n</code></pre> <p>You can check a working example at <code>examples/encoding.js</code>.</p>"},{"location":"ejemplos/servidor/node_modules/negotiator/#methods_3","title":"Methods","text":""},{"location":"ejemplos/servidor/node_modules/negotiator/#encoding","title":"encoding()","text":"<p>Returns the most preferred encoding from the client.</p>"},{"location":"ejemplos/servidor/node_modules/negotiator/#encodingavailableencodings","title":"encoding(availableEncodings)","text":"<p>Returns the most preferred encoding from a list of available encodings.</p>"},{"location":"ejemplos/servidor/node_modules/negotiator/#encodings","title":"encodings()","text":"<p>Returns an array of preferred encodings ordered by the client preference.</p>"},{"location":"ejemplos/servidor/node_modules/negotiator/#encodingsavailableencodings","title":"encodings(availableEncodings)","text":"<p>Returns an array of preferred encodings ordered by priority from a list of available encodings.</p>"},{"location":"ejemplos/servidor/node_modules/negotiator/#see-also","title":"See Also","text":"<p>The accepts module builds on this module and provides an alternative interface, mime type validation, and more.</p>"},{"location":"ejemplos/servidor/node_modules/negotiator/#license","title":"License","text":"<p>MIT</p>"},{"location":"ejemplos/servidor/node_modules/negotiator/HISTORY/","title":"0.6.2 / 2019-04-29","text":"<ul> <li>Fix sorting charset, encoding, and language with extra parameters</li> </ul>"},{"location":"ejemplos/servidor/node_modules/negotiator/HISTORY/#061-2016-05-02","title":"0.6.1 / 2016-05-02","text":"<ul> <li>perf: improve <code>Accept</code> parsing speed</li> <li>perf: improve <code>Accept-Charset</code> parsing speed</li> <li>perf: improve <code>Accept-Encoding</code> parsing speed</li> <li>perf: improve <code>Accept-Language</code> parsing speed</li> </ul>"},{"location":"ejemplos/servidor/node_modules/negotiator/HISTORY/#060-2015-09-29","title":"0.6.0 / 2015-09-29","text":"<ul> <li>Fix including type extensions in parameters in <code>Accept</code> parsing</li> <li>Fix parsing <code>Accept</code> parameters with quoted equals</li> <li>Fix parsing <code>Accept</code> parameters with quoted semicolons</li> <li>Lazy-load modules from main entry point</li> <li>perf: delay type concatenation until needed</li> <li>perf: enable strict mode</li> <li>perf: hoist regular expressions</li> <li>perf: remove closures getting spec properties</li> <li>perf: remove a closure from media type parsing</li> <li>perf: remove property delete from media type parsing</li> </ul>"},{"location":"ejemplos/servidor/node_modules/negotiator/HISTORY/#053-2015-05-10","title":"0.5.3 / 2015-05-10","text":"<ul> <li>Fix media type parameter matching to be case-insensitive</li> </ul>"},{"location":"ejemplos/servidor/node_modules/negotiator/HISTORY/#052-2015-05-06","title":"0.5.2 / 2015-05-06","text":"<ul> <li>Fix comparing media types with quoted values</li> <li>Fix splitting media types with quoted commas</li> </ul>"},{"location":"ejemplos/servidor/node_modules/negotiator/HISTORY/#051-2015-02-14","title":"0.5.1 / 2015-02-14","text":"<ul> <li>Fix preference sorting to be stable for long acceptable lists</li> </ul>"},{"location":"ejemplos/servidor/node_modules/negotiator/HISTORY/#050-2014-12-18","title":"0.5.0 / 2014-12-18","text":"<ul> <li>Fix list return order when large accepted list</li> <li>Fix missing identity encoding when q=0 exists</li> <li>Remove dynamic building of Negotiator class</li> </ul>"},{"location":"ejemplos/servidor/node_modules/negotiator/HISTORY/#049-2014-10-14","title":"0.4.9 / 2014-10-14","text":"<ul> <li>Fix error when media type has invalid parameter</li> </ul>"},{"location":"ejemplos/servidor/node_modules/negotiator/HISTORY/#048-2014-09-28","title":"0.4.8 / 2014-09-28","text":"<ul> <li>Fix all negotiations to be case-insensitive</li> <li>Stable sort preferences of same quality according to client order</li> <li>Support Node.js 0.6</li> </ul>"},{"location":"ejemplos/servidor/node_modules/negotiator/HISTORY/#047-2014-06-24","title":"0.4.7 / 2014-06-24","text":"<ul> <li>Handle invalid provided languages</li> <li>Handle invalid provided media types</li> </ul>"},{"location":"ejemplos/servidor/node_modules/negotiator/HISTORY/#046-2014-06-11","title":"0.4.6 / 2014-06-11","text":"<ul> <li>Order by specificity when quality is the same</li> </ul>"},{"location":"ejemplos/servidor/node_modules/negotiator/HISTORY/#045-2014-05-29","title":"0.4.5 / 2014-05-29","text":"<ul> <li>Fix regression in empty header handling</li> </ul>"},{"location":"ejemplos/servidor/node_modules/negotiator/HISTORY/#044-2014-05-29","title":"0.4.4 / 2014-05-29","text":"<ul> <li>Fix behaviors when headers are not present</li> </ul>"},{"location":"ejemplos/servidor/node_modules/negotiator/HISTORY/#043-2014-04-16","title":"0.4.3 / 2014-04-16","text":"<ul> <li>Handle slashes on media params correctly</li> </ul>"},{"location":"ejemplos/servidor/node_modules/negotiator/HISTORY/#042-2014-02-28","title":"0.4.2 / 2014-02-28","text":"<ul> <li>Fix media type sorting</li> <li>Handle media types params strictly</li> </ul>"},{"location":"ejemplos/servidor/node_modules/negotiator/HISTORY/#041-2014-01-16","title":"0.4.1 / 2014-01-16","text":"<ul> <li>Use most specific matches</li> </ul>"},{"location":"ejemplos/servidor/node_modules/negotiator/HISTORY/#040-2014-01-09","title":"0.4.0 / 2014-01-09","text":"<ul> <li>Remove preferred prefix from methods</li> </ul>"},{"location":"ejemplos/servidor/node_modules/object-assign/readme/","title":"object-assign","text":"<p>ES2015 <code>Object.assign()</code> ponyfill</p>"},{"location":"ejemplos/servidor/node_modules/object-assign/readme/#use-the-built-in","title":"Use the built-in","text":"<p>Node.js 4 and up, as well as every evergreen browser (Chrome, Edge, Firefox, Opera, Safari), support <code>Object.assign()</code> :tada:. If you target only those environments, then by all means, use <code>Object.assign()</code> instead of this package.</p>"},{"location":"ejemplos/servidor/node_modules/object-assign/readme/#install","title":"Install","text":"<pre><code>$ npm install --save object-assign\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/object-assign/readme/#usage","title":"Usage","text":"<pre><code>const objectAssign = require('object-assign');\n\nobjectAssign({foo: 0}, {bar: 1});\n//=&gt; {foo: 0, bar: 1}\n\n// multiple sources\nobjectAssign({foo: 0}, {bar: 1}, {baz: 2});\n//=&gt; {foo: 0, bar: 1, baz: 2}\n\n// overwrites equal keys\nobjectAssign({foo: 0}, {foo: 1}, {foo: 2});\n//=&gt; {foo: 2}\n\n// ignores null and undefined sources\nobjectAssign({foo: 0}, null, {bar: 1}, undefined);\n//=&gt; {foo: 0, bar: 1}\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/object-assign/readme/#api","title":"API","text":""},{"location":"ejemplos/servidor/node_modules/object-assign/readme/#objectassigntarget-source","title":"objectAssign(target, [source, ...])","text":"<p>Assigns enumerable own properties of <code>source</code> objects to the <code>target</code> object and returns the <code>target</code> object. Additional <code>source</code> objects will overwrite previous ones.</p>"},{"location":"ejemplos/servidor/node_modules/object-assign/readme/#resources","title":"Resources","text":"<ul> <li>ES2015 spec - Object.assign</li> </ul>"},{"location":"ejemplos/servidor/node_modules/object-assign/readme/#related","title":"Related","text":"<ul> <li>deep-assign - Recursive <code>Object.assign()</code></li> </ul>"},{"location":"ejemplos/servidor/node_modules/object-assign/readme/#license","title":"License","text":"<p>MIT \u00a9 Sindre Sorhus</p>"},{"location":"ejemplos/servidor/node_modules/on-finished/","title":"on-finished","text":"<p>Execute a callback when a HTTP request closes, finishes, or errors.</p>"},{"location":"ejemplos/servidor/node_modules/on-finished/#install","title":"Install","text":"<pre><code>$ npm install on-finished\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/on-finished/#api","title":"API","text":"<pre><code>var onFinished = require('on-finished')\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/on-finished/#onfinishedres-listener","title":"onFinished(res, listener)","text":"<p>Attach a listener to listen for the response to finish. The listener will be invoked only once when the response finished. If the response finished to an error, the first argument will contain the error. If the response has already finished, the listener will be invoked.</p> <p>Listening to the end of a response would be used to close things associated with the response, like open files.</p> <p>Listener is invoked as <code>listener(err, res)</code>.</p> <pre><code>onFinished(res, function (err, res) {\n  // clean up open fds, etc.\n  // err contains the error is request error'd\n})\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/on-finished/#onfinishedreq-listener","title":"onFinished(req, listener)","text":"<p>Attach a listener to listen for the request to finish. The listener will be invoked only once when the request finished. If the request finished to an error, the first argument will contain the error. If the request has already finished, the listener will be invoked.</p> <p>Listening to the end of a request would be used to know when to continue after reading the data.</p> <p>Listener is invoked as <code>listener(err, req)</code>.</p> <pre><code>var data = ''\n\nreq.setEncoding('utf8')\nres.on('data', function (str) {\n  data += str\n})\n\nonFinished(req, function (err, req) {\n  // data is read unless there is err\n})\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/on-finished/#onfinishedisfinishedres","title":"onFinished.isFinished(res)","text":"<p>Determine if <code>res</code> is already finished. This would be useful to check and not even start certain operations if the response has already finished.</p>"},{"location":"ejemplos/servidor/node_modules/on-finished/#onfinishedisfinishedreq","title":"onFinished.isFinished(req)","text":"<p>Determine if <code>req</code> is already finished. This would be useful to check and not even start certain operations if the request has already finished.</p>"},{"location":"ejemplos/servidor/node_modules/on-finished/#special-nodejs-requests","title":"Special Node.js requests","text":""},{"location":"ejemplos/servidor/node_modules/on-finished/#http-connect-method","title":"HTTP CONNECT method","text":"<p>The meaning of the <code>CONNECT</code> method from RFC 7231, section 4.3.6:</p> <p>The CONNECT method requests that the recipient establish a tunnel to the destination origin server identified by the request-target and, if successful, thereafter restrict its behavior to blind forwarding of packets, in both directions, until the tunnel is closed.  Tunnels are commonly used to create an end-to-end virtual connection, through one or more proxies, which can then be secured using TLS (Transport Layer Security, [RFC5246]).</p> <p>In Node.js, these request objects come from the <code>'connect'</code> event on the HTTP server.</p> <p>When this module is used on a HTTP <code>CONNECT</code> request, the request is considered \"finished\" immediately, due to limitations in the Node.js interface. This means if the <code>CONNECT</code> request contains a request entity, the request will be considered \"finished\" even before it has been read.</p> <p>There is no such thing as a response object to a <code>CONNECT</code> request in Node.js, so there is no support for for one.</p>"},{"location":"ejemplos/servidor/node_modules/on-finished/#http-upgrade-request","title":"HTTP Upgrade request","text":"<p>The meaning of the <code>Upgrade</code> header from RFC 7230, section 6.1:</p> <p>The \"Upgrade\" header field is intended to provide a simple mechanism for transitioning from HTTP/1.1 to some other protocol on the same connection.</p> <p>In Node.js, these request objects come from the <code>'upgrade'</code> event on the HTTP server.</p> <p>When this module is used on a HTTP request with an <code>Upgrade</code> header, the request is considered \"finished\" immediately, due to limitations in the Node.js interface. This means if the <code>Upgrade</code> request contains a request entity, the request will be considered \"finished\" even before it has been read.</p> <p>There is no such thing as a response object to a <code>Upgrade</code> request in Node.js, so there is no support for for one.</p>"},{"location":"ejemplos/servidor/node_modules/on-finished/#example","title":"Example","text":"<p>The following code ensures that file descriptors are always closed once the response finishes.</p> <pre><code>var destroy = require('destroy')\nvar http = require('http')\nvar onFinished = require('on-finished')\n\nhttp.createServer(function onRequest(req, res) {\n  var stream = fs.createReadStream('package.json')\n  stream.pipe(res)\n  onFinished(res, function (err) {\n    destroy(stream)\n  })\n})\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/on-finished/#license","title":"License","text":"<p>MIT</p>"},{"location":"ejemplos/servidor/node_modules/on-finished/HISTORY/","title":"2.3.0 / 2015-05-26","text":"<ul> <li>Add defined behavior for HTTP <code>CONNECT</code> requests</li> <li>Add defined behavior for HTTP <code>Upgrade</code> requests</li> <li>deps: ee-first@1.1.1</li> </ul>"},{"location":"ejemplos/servidor/node_modules/on-finished/HISTORY/#221-2015-04-22","title":"2.2.1 / 2015-04-22","text":"<ul> <li>Fix <code>isFinished(req)</code> when data buffered</li> </ul>"},{"location":"ejemplos/servidor/node_modules/on-finished/HISTORY/#220-2014-12-22","title":"2.2.0 / 2014-12-22","text":"<ul> <li>Add message object to callback arguments</li> </ul>"},{"location":"ejemplos/servidor/node_modules/on-finished/HISTORY/#211-2014-10-22","title":"2.1.1 / 2014-10-22","text":"<ul> <li>Fix handling of pipelined requests</li> </ul>"},{"location":"ejemplos/servidor/node_modules/on-finished/HISTORY/#210-2014-08-16","title":"2.1.0 / 2014-08-16","text":"<ul> <li>Check if <code>socket</code> is detached</li> <li>Return <code>undefined</code> for <code>isFinished</code> if state unknown</li> </ul>"},{"location":"ejemplos/servidor/node_modules/on-finished/HISTORY/#200-2014-08-16","title":"2.0.0 / 2014-08-16","text":"<ul> <li>Add <code>isFinished</code> function</li> <li>Move to <code>jshttp</code> organization</li> <li>Remove support for plain socket argument</li> <li>Rename to <code>on-finished</code></li> <li>Support both <code>req</code> and <code>res</code> as arguments</li> <li>deps: ee-first@1.0.5</li> </ul>"},{"location":"ejemplos/servidor/node_modules/on-finished/HISTORY/#122-2014-06-10","title":"1.2.2 / 2014-06-10","text":"<ul> <li>Reduce listeners added to emitters<ul> <li>avoids \"event emitter leak\" warnings when used multiple times on same request</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/on-finished/HISTORY/#121-2014-06-08","title":"1.2.1 / 2014-06-08","text":"<ul> <li>Fix returned value when already finished</li> </ul>"},{"location":"ejemplos/servidor/node_modules/on-finished/HISTORY/#120-2014-06-05","title":"1.2.0 / 2014-06-05","text":"<ul> <li>Call callback when called on already-finished socket</li> </ul>"},{"location":"ejemplos/servidor/node_modules/on-finished/HISTORY/#114-2014-05-27","title":"1.1.4 / 2014-05-27","text":"<ul> <li>Support node.js 0.8</li> </ul>"},{"location":"ejemplos/servidor/node_modules/on-finished/HISTORY/#113-2014-04-30","title":"1.1.3 / 2014-04-30","text":"<ul> <li>Make sure errors passed as instanceof <code>Error</code></li> </ul>"},{"location":"ejemplos/servidor/node_modules/on-finished/HISTORY/#112-2014-04-18","title":"1.1.2 / 2014-04-18","text":"<ul> <li>Default the <code>socket</code> to passed-in object</li> </ul>"},{"location":"ejemplos/servidor/node_modules/on-finished/HISTORY/#111-2014-01-16","title":"1.1.1 / 2014-01-16","text":"<ul> <li>Rename module to <code>finished</code></li> </ul>"},{"location":"ejemplos/servidor/node_modules/on-finished/HISTORY/#110-2013-12-25","title":"1.1.0 / 2013-12-25","text":"<ul> <li>Call callback when called on already-errored socket</li> </ul>"},{"location":"ejemplos/servidor/node_modules/on-finished/HISTORY/#101-2013-12-20","title":"1.0.1 / 2013-12-20","text":"<ul> <li>Actually pass the error to the callback</li> </ul>"},{"location":"ejemplos/servidor/node_modules/on-finished/HISTORY/#100-2013-12-20","title":"1.0.0 / 2013-12-20","text":"<ul> <li>Initial release</li> </ul>"},{"location":"ejemplos/servidor/node_modules/packet-reader/","title":"node-packet-reader","text":"<p>Handy little well tested module for reading length-prefixed binary packets.</p> <p>Since buffers come off a socket in randomly sized chunks you can't expect them to cleanly break on packet boundaries.  This module allows you to push buffers in and read full packets out the other side, so you can get to parsing right away and not have to manage concatenating partial buffers and searching through them for packets.</p>"},{"location":"ejemplos/servidor/node_modules/packet-reader/#install","title":"install","text":"<p><code>$ npm install packet-reader</code></p>"},{"location":"ejemplos/servidor/node_modules/packet-reader/#example","title":"example","text":"<pre><code>var Reader = require('packet-reader')\n\nvar reader = new Reader()\n//assuming you have a socket emitting `data` events\nsocket.on('data', function(buffer) {\n  reader.addChunk(buffer)\n  var packet = reader.read()\n  while(packet) {\n    //do something with fully parsed packet\n  }\n})\n</code></pre> <p>here's a more full featured example:</p> <p>let's assume our \"packet\" for our protocol is 32-bit Big Endian length-prefixed strings so a \"hello world\" packet would look something like [length, string] <code>[0, 0, 0 0x0B, h, e, l, l, o, w, o, r, l, d]</code></p> <pre><code>var Transform = require('stream').Transform\nvar Reader = require('packet-reader')\nvar reader = new Reader()\nvar parser = new Transform()\nparser._transform = function(chunk, encoding, cb) {\n  reader.addChunk(chunk)\n  var packet = reader.read()\n  while(packet) {\n    this.push(packet.toString('utf8'))\n    packet = reader.read()\n  }\n  cb()\n}\n\nvar server = net.createServer(function(socket) {\n  socket.pipe(parser).pipe(stdout)\n})\n</code></pre> <p>There are a few config options for setting optional pre-length padding byte.  Read the tests for details.</p>"},{"location":"ejemplos/servidor/node_modules/packet-reader/#license","title":"License","text":"<p>MIT</p> <p>Copyright 2015 Brian M. Carlson All rights reserved.</p> <p>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</p> <p>The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</p> <p>THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p>"},{"location":"ejemplos/servidor/node_modules/parseurl/","title":"parseurl","text":"<p>Parse a URL with memoization.</p>"},{"location":"ejemplos/servidor/node_modules/parseurl/#install","title":"Install","text":"<p>This is a Node.js module available through the npm registry. Installation is done using the <code>npm install</code> command:</p> <pre><code>$ npm install parseurl\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/parseurl/#api","title":"API","text":"<pre><code>var parseurl = require('parseurl')\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/parseurl/#parseurlreq","title":"parseurl(req)","text":"<p>Parse the URL of the given request object (looks at the <code>req.url</code> property) and return the result. The result is the same as <code>url.parse</code> in Node.js core. Calling this function multiple times on the same <code>req</code> where <code>req.url</code> does not change will return a cached parsed object, rather than parsing again.</p>"},{"location":"ejemplos/servidor/node_modules/parseurl/#parseurloriginalreq","title":"parseurl.original(req)","text":"<p>Parse the original URL of the given request object and return the result. This works by trying to parse <code>req.originalUrl</code> if it is a string, otherwise parses <code>req.url</code>. The result is the same as <code>url.parse</code> in Node.js core. Calling this function multiple times on the same <code>req</code> where <code>req.originalUrl</code> does not change will return a cached parsed object, rather than parsing again.</p>"},{"location":"ejemplos/servidor/node_modules/parseurl/#benchmark","title":"Benchmark","text":"<pre><code>$ npm run-script bench\n\n&gt; parseurl@1.3.3 bench nodejs-parseurl\n&gt; node benchmark/index.js\n\n  http_parser@2.8.0\n  node@10.6.0\n  v8@6.7.288.46-node.13\n  uv@1.21.0\n  zlib@1.2.11\n  ares@1.14.0\n  modules@64\n  nghttp2@1.32.0\n  napi@3\n  openssl@1.1.0h\n  icu@61.1\n  unicode@10.0\n  cldr@33.0\n  tz@2018c\n\n&gt; node benchmark/fullurl.js\n\n  Parsing URL \"http://localhost:8888/foo/bar?user=tj&amp;pet=fluffy\"\n\n  4 tests completed.\n\n  fasturl            x 2,207,842 ops/sec \u00b13.76% (184 runs sampled)\n  nativeurl - legacy x   507,180 ops/sec \u00b10.82% (191 runs sampled)\n  nativeurl - whatwg x   290,044 ops/sec \u00b11.96% (189 runs sampled)\n  parseurl           x   488,907 ops/sec \u00b12.13% (192 runs sampled)\n\n&gt; node benchmark/pathquery.js\n\n  Parsing URL \"/foo/bar?user=tj&amp;pet=fluffy\"\n\n  4 tests completed.\n\n  fasturl            x 3,812,564 ops/sec \u00b13.15% (188 runs sampled)\n  nativeurl - legacy x 2,651,631 ops/sec \u00b11.68% (189 runs sampled)\n  nativeurl - whatwg x   161,837 ops/sec \u00b12.26% (189 runs sampled)\n  parseurl           x 4,166,338 ops/sec \u00b12.23% (184 runs sampled)\n\n&gt; node benchmark/samerequest.js\n\n  Parsing URL \"/foo/bar?user=tj&amp;pet=fluffy\" on same request object\n\n  4 tests completed.\n\n  fasturl            x  3,821,651 ops/sec \u00b12.42% (185 runs sampled)\n  nativeurl - legacy x  2,651,162 ops/sec \u00b11.90% (187 runs sampled)\n  nativeurl - whatwg x    175,166 ops/sec \u00b11.44% (188 runs sampled)\n  parseurl           x 14,912,606 ops/sec \u00b13.59% (183 runs sampled)\n\n&gt; node benchmark/simplepath.js\n\n  Parsing URL \"/foo/bar\"\n\n  4 tests completed.\n\n  fasturl            x 12,421,765 ops/sec \u00b12.04% (191 runs sampled)\n  nativeurl - legacy x  7,546,036 ops/sec \u00b11.41% (188 runs sampled)\n  nativeurl - whatwg x    198,843 ops/sec \u00b11.83% (189 runs sampled)\n  parseurl           x 24,244,006 ops/sec \u00b10.51% (194 runs sampled)\n\n&gt; node benchmark/slash.js\n\n  Parsing URL \"/\"\n\n  4 tests completed.\n\n  fasturl            x 17,159,456 ops/sec \u00b13.25% (188 runs sampled)\n  nativeurl - legacy x 11,635,097 ops/sec \u00b13.79% (184 runs sampled)\n  nativeurl - whatwg x    240,693 ops/sec \u00b10.83% (189 runs sampled)\n  parseurl           x 42,279,067 ops/sec \u00b10.55% (190 runs sampled)\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/parseurl/#license","title":"License","text":"<p>MIT</p>"},{"location":"ejemplos/servidor/node_modules/parseurl/HISTORY/","title":"1.3.3 / 2019-04-15","text":"<ul> <li>Fix Node.js 0.8 return value inconsistencies</li> </ul>"},{"location":"ejemplos/servidor/node_modules/parseurl/HISTORY/#132-2017-09-09","title":"1.3.2 / 2017-09-09","text":"<ul> <li>perf: reduce overhead for full URLs</li> <li>perf: unroll the \"fast-path\" <code>RegExp</code></li> </ul>"},{"location":"ejemplos/servidor/node_modules/parseurl/HISTORY/#131-2016-01-17","title":"1.3.1 / 2016-01-17","text":"<ul> <li>perf: enable strict mode</li> </ul>"},{"location":"ejemplos/servidor/node_modules/parseurl/HISTORY/#130-2014-08-09","title":"1.3.0 / 2014-08-09","text":"<ul> <li>Add <code>parseurl.original</code> for parsing <code>req.originalUrl</code> with fallback</li> <li>Return <code>undefined</code> if <code>req.url</code> is <code>undefined</code></li> </ul>"},{"location":"ejemplos/servidor/node_modules/parseurl/HISTORY/#120-2014-07-21","title":"1.2.0 / 2014-07-21","text":"<ul> <li>Cache URLs based on original value</li> <li>Remove no-longer-needed URL mis-parse work-around</li> <li>Simplify the \"fast-path\" <code>RegExp</code></li> </ul>"},{"location":"ejemplos/servidor/node_modules/parseurl/HISTORY/#113-2014-07-08","title":"1.1.3 / 2014-07-08","text":"<ul> <li>Fix typo</li> </ul>"},{"location":"ejemplos/servidor/node_modules/parseurl/HISTORY/#112-2014-07-08","title":"1.1.2 / 2014-07-08","text":"<ul> <li>Seriously fix Node.js 0.8 compatibility</li> </ul>"},{"location":"ejemplos/servidor/node_modules/parseurl/HISTORY/#111-2014-07-08","title":"1.1.1 / 2014-07-08","text":"<ul> <li>Fix Node.js 0.8 compatibility</li> </ul>"},{"location":"ejemplos/servidor/node_modules/parseurl/HISTORY/#110-2014-07-08","title":"1.1.0 / 2014-07-08","text":"<ul> <li>Incorporate URL href-only parse fast-path</li> </ul>"},{"location":"ejemplos/servidor/node_modules/parseurl/HISTORY/#101-2014-03-08","title":"1.0.1 / 2014-03-08","text":"<ul> <li>Add missing <code>require</code></li> </ul>"},{"location":"ejemplos/servidor/node_modules/parseurl/HISTORY/#100-2014-03-08","title":"1.0.0 / 2014-03-08","text":"<ul> <li>Genesis from <code>connect</code></li> </ul>"},{"location":"ejemplos/servidor/node_modules/path-to-regexp/History/","title":"0.1.7 / 2015-07-28","text":"<ul> <li>Fixed regression with escaped round brackets and matching groups.</li> </ul>"},{"location":"ejemplos/servidor/node_modules/path-to-regexp/History/#016-2015-06-19","title":"0.1.6 / 2015-06-19","text":"<ul> <li>Replace <code>index</code> feature by outputting all parameters, unnamed and named.</li> </ul>"},{"location":"ejemplos/servidor/node_modules/path-to-regexp/History/#015-2015-05-08","title":"0.1.5 / 2015-05-08","text":"<ul> <li>Add an index property for position in match result.</li> </ul>"},{"location":"ejemplos/servidor/node_modules/path-to-regexp/History/#014-2015-03-05","title":"0.1.4 / 2015-03-05","text":"<ul> <li>Add license information</li> </ul>"},{"location":"ejemplos/servidor/node_modules/path-to-regexp/History/#013-2014-07-06","title":"0.1.3 / 2014-07-06","text":"<ul> <li>Better array support</li> <li>Improved support for trailing slash in non-ending mode</li> </ul>"},{"location":"ejemplos/servidor/node_modules/path-to-regexp/History/#010-2014-03-06","title":"0.1.0 / 2014-03-06","text":"<ul> <li>add options.end</li> </ul>"},{"location":"ejemplos/servidor/node_modules/path-to-regexp/History/#002-2013-02-10","title":"0.0.2 / 2013-02-10","text":"<ul> <li>Update to match current express</li> <li>add .license property to component.json</li> </ul>"},{"location":"ejemplos/servidor/node_modules/path-to-regexp/Readme/","title":"Path-to-RegExp","text":"<p>Turn an Express-style path string such as <code>/user/:name</code> into a regular expression.</p> <p>Note: This is a legacy branch. You should upgrade to <code>1.x</code>.</p>"},{"location":"ejemplos/servidor/node_modules/path-to-regexp/Readme/#usage","title":"Usage","text":"<pre><code>var pathToRegexp = require('path-to-regexp');\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/path-to-regexp/Readme/#pathtoregexppath-keys-options","title":"pathToRegexp(path, keys, options)","text":"<ul> <li>path A string in the express format, an array of such strings, or a regular expression</li> <li>keys An array to be populated with the keys present in the url.  Once the function completes, this will be an array of strings.</li> <li>options</li> <li>options.sensitive Defaults to false, set this to true to make routes case sensitive</li> <li>options.strict Defaults to false, set this to true to make the trailing slash matter.</li> <li>options.end Defaults to true, set this to false to only match the prefix of the URL.</li> </ul> <pre><code>var keys = [];\nvar exp = pathToRegexp('/foo/:bar', keys);\n//keys = ['bar']\n//exp = /^\\/foo\\/(?:([^\\/]+?))\\/?$/i\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/path-to-regexp/Readme/#live-demo","title":"Live Demo","text":"<p>You can see a live demo of this library in use at express-route-tester.</p>"},{"location":"ejemplos/servidor/node_modules/path-to-regexp/Readme/#license","title":"License","text":"<p>MIT</p>"},{"location":"ejemplos/servidor/node_modules/pg/","title":"node-postgres","text":"<p>Non-blocking PostgreSQL client for Node.js. Pure JavaScript and optional native libpq bindings.</p>"},{"location":"ejemplos/servidor/node_modules/pg/#install","title":"Install","text":"<pre><code>$ npm install pg\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/pg/#star-documentation-star","title":":star: Documentation :star:","text":""},{"location":"ejemplos/servidor/node_modules/pg/#features","title":"Features","text":"<ul> <li>Pure JavaScript client and native libpq bindings share the same API</li> <li>Connection pooling</li> <li>Extensible JS \u2194 PostgreSQL data-type coercion</li> <li>Supported PostgreSQL features</li> <li>Parameterized queries</li> <li>Named statements with query plan caching</li> <li>Async notifications with <code>LISTEN/NOTIFY</code></li> <li>Bulk import &amp; export with <code>COPY TO/COPY FROM</code></li> </ul>"},{"location":"ejemplos/servidor/node_modules/pg/#extras","title":"Extras","text":"<p>node-postgres is by design pretty light on abstractions. These are some handy modules we've been using over the years to complete the picture. The entire list can be found on our wiki.</p>"},{"location":"ejemplos/servidor/node_modules/pg/#support","title":"Support","text":"<p>node-postgres is free software. If you encounter a bug with the library please open an issue on the GitHub repo. If you have questions unanswered by the documentation please open an issue pointing out how the documentation was unclear &amp; I will do my best to make it better!</p> <p>When you open an issue please provide:</p> <ul> <li>version of Node</li> <li>version of Postgres</li> <li>smallest possible snippet of code to reproduce the problem</li> </ul> <p>You can also follow me @briancarlson if that's your thing. I try to always announce noteworthy changes &amp; developments with node-postgres on Twitter.</p>"},{"location":"ejemplos/servidor/node_modules/pg/#sponsorship-two_hearts","title":"Sponsorship :two_hearts:","text":"<p>node-postgres's continued development has been made possible in part by generous finanical support from the community and these featured sponsors:</p> <p>If you or your company are benefiting from node-postgres and would like to help keep the project financially sustainable please consider supporting its development.</p>"},{"location":"ejemplos/servidor/node_modules/pg/#contributing","title":"Contributing","text":"<p>:heart: contributions!</p> <p>I will happily accept your pull request if it:</p> <ul> <li>has tests</li> <li>looks reasonable</li> <li>does not break backwards compatibility</li> </ul> <p>If your change involves breaking backwards compatibility please please point that out in the pull request &amp; we can discuss &amp; plan when and how to release it and what type of documentation or communicate it will require.</p>"},{"location":"ejemplos/servidor/node_modules/pg/#troubleshooting-and-faq","title":"Troubleshooting and FAQ","text":"<p>The causes and solutions to common errors can be found among the Frequently Asked Questions (FAQ)</p>"},{"location":"ejemplos/servidor/node_modules/pg/#license","title":"License","text":"<p>Copyright (c) 2010-2020 Brian Carlson (brian.m.carlson@gmail.com)</p> <p>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</p> <p>The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</p> <p>THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p>"},{"location":"ejemplos/servidor/node_modules/pg-connection-string/","title":"pg-connection-string","text":"<p>Functions for dealing with a PostgresSQL connection string</p> <p><code>parse</code> method taken from node-postgres Copyright (c) 2010-2014 Brian Carlson (brian.m.carlson@gmail.com) MIT License</p>"},{"location":"ejemplos/servidor/node_modules/pg-connection-string/#usage","title":"Usage","text":"<pre><code>var parse = require('pg-connection-string').parse;\n\nvar config = parse('postgres://someuser:somepassword@somehost:381/somedatabase')\n</code></pre> <p>The resulting config contains a subset of the following properties:</p> <ul> <li><code>host</code> - Postgres server hostname or, for UNIX doamain sockets, the socket filename</li> <li><code>port</code> - port on which to connect</li> <li><code>user</code> - User with which to authenticate to the server</li> <li><code>password</code> - Corresponding password</li> <li><code>database</code> - Database name within the server</li> <li><code>client_encoding</code> - string encoding the client will use</li> <li><code>ssl</code>, either a boolean or an object with properties</li> <li><code>cert</code></li> <li><code>key</code></li> <li><code>ca</code></li> <li>any other query parameters (for example, <code>application_name</code>) are preserved intact.</li> </ul>"},{"location":"ejemplos/servidor/node_modules/pg-connection-string/#connection-strings","title":"Connection Strings","text":"<p>The short summary of acceptable URLs is:</p> <ul> <li><code>socket:&lt;path&gt;?&lt;query&gt;</code> - UNIX domain socket</li> <li><code>postgres://&lt;user&gt;:&lt;password&gt;@&lt;host&gt;:&lt;port&gt;/&lt;database&gt;?&lt;query&gt;</code> - TCP connection</li> </ul> <p>But see below for more details.</p>"},{"location":"ejemplos/servidor/node_modules/pg-connection-string/#unix-domain-sockets","title":"UNIX Domain Sockets","text":"<p>When user and password are not given, the socket path follows <code>socket:</code>, as in <code>socket:/var/run/pgsql</code>. This form can be shortened to just a path: <code>/var/run/pgsql</code>.</p> <p>When user and password are given, they are included in the typical URL positions, with an empty <code>host</code>, as in <code>socket://user:pass@/var/run/pgsql</code>.</p> <p>Query parameters follow a <code>?</code> character, including the following special query parameters:</p> <ul> <li><code>db=&lt;database&gt;</code> - sets the database name (urlencoded)</li> <li><code>encoding=&lt;encoding&gt;</code> - sets the <code>client_encoding</code> property</li> </ul>"},{"location":"ejemplos/servidor/node_modules/pg-connection-string/#tcp-connections","title":"TCP Connections","text":"<p>TCP connections to the Postgres server are indicated with <code>pg:</code> or <code>postgres:</code> schemes (in fact, any scheme but <code>socket:</code> is accepted). If username and password are included, they should be urlencoded. The database name, however, should not be urlencoded.</p> <p>Query parameters follow a <code>?</code> character, including the following special query parameters:  * <code>host=&lt;host&gt;</code> - sets <code>host</code> property, overriding the URL's host  * <code>encoding=&lt;encoding&gt;</code> - sets the <code>client_encoding</code> property  * <code>ssl=1</code>, <code>ssl=true</code>, <code>ssl=0</code>, <code>ssl=false</code> - sets <code>ssl</code> to true or false, accordingly  * <code>sslcert=&lt;filename&gt;</code> - reads data from the given file and includes the result as <code>ssl.cert</code>  * <code>sslkey=&lt;filename&gt;</code> - reads data from the given file and includes the result as <code>ssl.key</code>  * <code>sslrootcert=&lt;filename&gt;</code> - reads data from the given file and includes the result as <code>ssl.ca</code></p> <p>A bare relative URL, such as <code>salesdata</code>, will indicate a database name while leaving other properties empty.</p>"},{"location":"ejemplos/servidor/node_modules/pg-int8/","title":"Index","text":"<p>64-bit big-endian signed integer-to-string conversion designed for pg.</p> <pre><code>const readInt8 = require('pg-int8');\n\nreadInt8(Buffer.from([0, 1, 2, 3, 4, 5, 6, 7]))\n// '283686952306183'\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/pg-pool/","title":"pg-pool","text":"<p>A connection pool for node-postgres</p>"},{"location":"ejemplos/servidor/node_modules/pg-pool/#install","title":"install","text":"<pre><code>npm i pg-pool pg\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/pg-pool/#use","title":"use","text":""},{"location":"ejemplos/servidor/node_modules/pg-pool/#create","title":"create","text":"<p>to use pg-pool you must first create an instance of a pool</p> <pre><code>var Pool = require('pg-pool')\n\n// by default the pool uses the same\n// configuration as whatever `pg` version you have installed\nvar pool = new Pool()\n\n// you can pass properties to the pool\n// these properties are passed unchanged to both the node-postgres Client constructor\n// and the node-pool (https://github.com/coopernurse/node-pool) constructor\n// allowing you to fully configure the behavior of both\nvar pool2 = new Pool({\n  database: 'postgres',\n  user: 'brianc',\n  password: 'secret!',\n  port: 5432,\n  ssl: true,\n  max: 20, // set pool max size to 20\n  idleTimeoutMillis: 1000, // close idle clients after 1 second\n  connectionTimeoutMillis: 1000, // return an error after 1 second if connection could not be established\n  maxUses: 7500, // close (and replace) a connection after it has been used 7500 times (see below for discussion)\n})\n\n//you can supply a custom client constructor\n//if you want to use the native postgres client\nvar NativeClient = require('pg').native.Client\nvar nativePool = new Pool({ Client: NativeClient })\n\n//you can even pool pg-native clients directly\nvar PgNativeClient = require('pg-native')\nvar pgNativePool = new Pool({ Client: PgNativeClient })\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/pg-pool/#note","title":"Note:","text":"<p>The Pool constructor does not support passing a Database URL as the parameter. To use pg-pool on heroku, for example, you need to parse the URL into a config object. Here is an example of how to parse a Database URL.</p> <pre><code>const Pool = require('pg-pool');\nconst url = require('url')\n\nconst params = url.parse(process.env.DATABASE_URL);\nconst auth = params.auth.split(':');\n\nconst config = {\n  user: auth[0],\n  password: auth[1],\n  host: params.hostname,\n  port: params.port,\n  database: params.pathname.split('/')[1],\n  ssl: true\n};\n\nconst pool = new Pool(config);\n\n/*\n  Transforms, 'postgres://DBuser:secret@DBHost:#####/myDB', into\n  config = {\n    user: 'DBuser',\n    password: 'secret',\n    host: 'DBHost',\n    port: '#####',\n    database: 'myDB',\n    ssl: true\n  }\n*/\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/pg-pool/#acquire-clients-with-a-promise","title":"acquire clients with a promise","text":"<p>pg-pool supports a fully promise-based api for acquiring clients</p> <pre><code>var pool = new Pool()\npool.connect().then(client =&gt; {\n  client.query('select $1::text as name', ['pg-pool']).then(res =&gt; {\n    client.release()\n    console.log('hello from', res.rows[0].name)\n  })\n  .catch(e =&gt; {\n    client.release()\n    console.error('query error', e.message, e.stack)\n  })\n})\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/pg-pool/#plays-nice-with-asyncawait","title":"plays nice with async/await","text":"<p>this ends up looking much nicer if you're using co or async/await:</p> <pre><code>// with async/await\n(async () =&gt; {\n  var pool = new Pool()\n  var client = await pool.connect()\n  try {\n    var result = await client.query('select $1::text as name', ['brianc'])\n    console.log('hello from', result.rows[0])\n  } finally {\n    client.release()\n  }\n})().catch(e =&gt; console.error(e.message, e.stack))\n\n// with co\nco(function * () {\n  var client = yield pool.connect()\n  try {\n    var result = yield client.query('select $1::text as name', ['brianc'])\n    console.log('hello from', result.rows[0])\n  } finally {\n    client.release()\n  }\n}).catch(e =&gt; console.error(e.message, e.stack))\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/pg-pool/#your-new-favorite-helper-method","title":"your new favorite helper method","text":"<p>because its so common to just run a query and return the client to the pool afterward pg-pool has this built-in:</p> <pre><code>var pool = new Pool()\nvar time = await pool.query('SELECT NOW()')\nvar name = await pool.query('select $1::text as name', ['brianc'])\nconsole.log(name.rows[0].name, 'says hello at', time.rows[0].name)\n</code></pre> <p>you can also use a callback here if you'd like:</p> <pre><code>var pool = new Pool()\npool.query('SELECT $1::text as name', ['brianc'], function (err, res) {\n  console.log(res.rows[0].name) // brianc\n})\n</code></pre> <p>pro tip: unless you need to run a transaction (which requires a single client for multiple queries) or you have some other edge case like streaming rows or using a cursor you should almost always just use <code>pool.query</code>.  Its easy, it does the right thing :tm:, and wont ever forget to return clients back to the pool after the query is done.</p>"},{"location":"ejemplos/servidor/node_modules/pg-pool/#drop-in-backwards-compatible","title":"drop-in backwards compatible","text":"<p>pg-pool still and will always support the traditional callback api for acquiring a client.  This is the exact API node-postgres has shipped with for years:</p> <pre><code>var pool = new Pool()\npool.connect((err, client, done) =&gt; {\n  if (err) return done(err)\n\n  client.query('SELECT $1::text as name', ['pg-pool'], (err, res) =&gt; {\n    done()\n    if (err) {\n      return console.error('query error', e.message, e.stack)\n    }\n    console.log('hello from', res.rows[0].name)\n  })\n})\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/pg-pool/#shut-it-down","title":"shut it down","text":"<p>When you are finished with the pool if all the clients are idle the pool will close them after <code>config.idleTimeoutMillis</code> and your app will shutdown gracefully.  If you don't want to wait for the timeout you can end the pool as follows:</p> <pre><code>var pool = new Pool()\nvar client = await pool.connect()\nconsole.log(await client.query('select now()'))\nclient.release()\nawait pool.end()\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/pg-pool/#a-note-on-instances","title":"a note on instances","text":"<p>The pool should be a long-lived object in your application.  Generally you'll want to instantiate one pool when your app starts up and use the same instance of the pool throughout the lifetime of your application.  If you are frequently creating a new pool within your code you likely don't have your pool initialization code in the correct place.  Example:</p> <pre><code>// assume this is a file in your program at ./your-app/lib/db.js\n\n// correct usage: create the pool and let it live\n// 'globally' here, controlling access to it through exported methods\nvar pool = new pg.Pool()\n\n// this is the right way to export the query method\nmodule.exports.query = (text, values) =&gt; {\n  console.log('query:', text, values)\n  return pool.query(text, values)\n}\n\n// this would be the WRONG way to export the connect method\nmodule.exports.connect = () =&gt; {\n  // notice how we would be creating a pool instance here\n  // every time we called 'connect' to get a new client?\n  // that's a bad thing &amp; results in creating an unbounded\n  // number of pools &amp; therefore connections\n  var aPool = new pg.Pool()\n  return aPool.connect()\n}\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/pg-pool/#events","title":"events","text":"<p>Every instance of a <code>Pool</code> is an event emitter.  These instances emit the following events:</p>"},{"location":"ejemplos/servidor/node_modules/pg-pool/#error","title":"error","text":"<p>Emitted whenever an idle client in the pool encounters an error.  This is common when your PostgreSQL server shuts down, reboots, or a network partition otherwise causes it to become unavailable while your pool has connected clients.</p> <p>Example:</p> <pre><code>const Pool = require('pg-pool')\nconst pool = new Pool()\n\n// attach an error handler to the pool for when a connected, idle client\n// receives an error by being disconnected, etc\npool.on('error', function(error, client) {\n  // handle this in the same way you would treat process.on('uncaughtException')\n  // it is supplied the error as well as the idle client which received the error\n})\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/pg-pool/#connect","title":"connect","text":"<p>Fired whenever the pool creates a new <code>pg.Client</code> instance and successfully connects it to the backend.</p> <p>Example:</p> <pre><code>const Pool = require('pg-pool')\nconst pool = new Pool()\n\nvar count = 0\n\npool.on('connect', client =&gt; {\n  client.count = count++\n})\n\npool\n  .connect()\n  .then(client =&gt; {\n    return client\n      .query('SELECT $1::int AS \"clientCount\"', [client.count])\n      .then(res =&gt; console.log(res.rows[0].clientCount)) // outputs 0\n      .then(() =&gt; client)\n  })\n  .then(client =&gt; client.release())\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/pg-pool/#acquire","title":"acquire","text":"<p>Fired whenever the a client is acquired from the pool</p> <p>Example:</p> <p>This allows you to count the number of clients which have ever been acquired from the pool.</p> <pre><code>var Pool = require('pg-pool')\nvar pool = new Pool()\n\nvar acquireCount = 0\npool.on('acquire', function (client) {\n  acquireCount++\n})\n\nvar connectCount = 0\npool.on('connect', function () {\n  connectCount++\n})\n\nfor (var i = 0; i &lt; 200; i++) {\n  pool.query('SELECT NOW()')\n}\n\nsetTimeout(function () {\n  console.log('connect count:', connectCount) // output: connect count: 10\n  console.log('acquire count:', acquireCount) // output: acquire count: 200\n}, 100)\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/pg-pool/#environment-variables","title":"environment variables","text":"<p>pg-pool &amp; node-postgres support some of the same environment variables as <code>psql</code> supports.  The most common are:</p> <pre><code>PGDATABASE=my_db\nPGUSER=username\nPGPASSWORD=\"my awesome password\"\nPGPORT=5432\nPGSSLMODE=require\n</code></pre> <p>Usually I will export these into my local environment via a <code>.env</code> file with environment settings or export them in <code>~/.bash_profile</code> or something similar.  This way I get configurability which works with both the postgres suite of tools (<code>psql</code>, <code>pg_dump</code>, <code>pg_restore</code>) and node, I can vary the environment variables locally and in production, and it supports the concept of a 12-factor app out of the box.</p>"},{"location":"ejemplos/servidor/node_modules/pg-pool/#bring-your-own-promise","title":"bring your own promise","text":"<p>In versions of node <code>&lt;=0.12.x</code> there is no native promise implementation available globally.  You can polyfill the promise globally like this:</p> <pre><code>// first run `npm install promise-polyfill --save\nif (typeof Promise == 'undefined') {\n  global.Promise = require('promise-polyfill')\n}\n</code></pre> <p>You can use any other promise implementation you'd like.  The pool also allows you to configure the promise implementation on a per-pool level:</p> <pre><code>var bluebirdPool = new Pool({\n  Promise: require('bluebird')\n})\n</code></pre> <p>please note: in node <code>&lt;=0.12.x</code> the pool will throw if you do not provide a promise constructor in one of the two ways mentioned above.  In node <code>&gt;=4.0.0</code> the pool will use the native promise implementation by default; however, the two methods above still allow you to \"bring your own.\"</p>"},{"location":"ejemplos/servidor/node_modules/pg-pool/#maxuses-and-read-replica-autoscaling-eg-aws-aurora","title":"maxUses and read-replica autoscaling (e.g. AWS Aurora)","text":"<p>The maxUses config option can help an application instance rebalance load against a replica set that has been auto-scaled after the connection pool is already full of healthy connections.</p> <p>The mechanism here is that a connection is considered \"expended\" after it has been acquired and released <code>maxUses</code> number of times.  Depending on the load on your system, this means there will be an approximate time in which any given connection will live, thus creating a window for rebalancing.</p> <p>Imagine a scenario where you have 10 app instances providing an API running against a replica cluster of 3 that are accessed via a round-robin DNS entry.  Each instance runs a connection pool size of 20.  With an ambient load of 50 requests per second, the connection pool will likely fill up in a few minutes with healthy connections.</p> <p>If you have weekly bursts of traffic which peak at 1,000 requests per second, you might want to grow your replicas to 10 during this period.  Without setting <code>maxUses</code>, the new replicas will not be adopted by the app servers without an intervention -- namely, restarting each in turn in order to build up new connection pools that are balanced against all the replicas.  Adding additional app server instances will help to some extent because they will adopt all the replicas in an even way, but the initial app servers will continue to focus additional load on the original replicas.</p> <p>This is where the <code>maxUses</code> configuration option comes into play.  Setting <code>maxUses</code> to 7500 will ensure that over a period of 30 minutes or so the new replicas will be adopted as the pre-existing connections are closed and replaced with new ones, thus creating a window for eventual balance.</p> <p>You'll want to test based on your own scenarios, but one way to make a first guess at <code>maxUses</code> is to identify an acceptable window for rebalancing and then solve for the value:</p> <pre><code>maxUses = rebalanceWindowSeconds * totalRequestsPerSecond / numAppInstances / poolSize\n</code></pre> <p>In the example above, assuming we acquire and release 1 connection per request and we are aiming for a 30 minute rebalancing window:</p> <pre><code>maxUses = rebalanceWindowSeconds * totalRequestsPerSecond / numAppInstances / poolSize\n   7200 =        1800            *          1000          /        10       /    25\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/pg-pool/#tests","title":"tests","text":"<p>To run tests clone the repo, <code>npm i</code> in the working dir, and then run <code>npm test</code></p>"},{"location":"ejemplos/servidor/node_modules/pg-pool/#contributions","title":"contributions","text":"<p>I love contributions.  Please make sure they have tests, and submit a PR.  If you're not sure if the issue is worth it or will be accepted it never hurts to open an issue to begin the conversation.  If you're interested in keeping up with node-postgres releated stuff, you can follow me on twitter at @briancarlson - I generally announce any noteworthy updates there.</p>"},{"location":"ejemplos/servidor/node_modules/pg-pool/#license","title":"license","text":"<p>The MIT License (MIT) Copyright (c) 2016 Brian M. Carlson</p> <p>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</p> <p>The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</p> <p>THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p>"},{"location":"ejemplos/servidor/node_modules/pg-protocol/","title":"pg-protocol","text":"<p>Low level postgres wire protocol parser and serailizer written in Typescript. Used by node-postgres. Needs more documentation. :smile:</p>"},{"location":"ejemplos/servidor/node_modules/pg-types/","title":"pg-types","text":"<p>This is the code that turns all the raw text from postgres into JavaScript types for node-postgres</p>"},{"location":"ejemplos/servidor/node_modules/pg-types/#use","title":"use","text":"<p>This module is consumed and exported from the root <code>pg</code> object of node-postgres.  To access it, do the following:</p> <pre><code>var types = require('pg').types\n</code></pre> <p>Generally what you'll want to do is override how a specific data-type is parsed and turned into a JavaScript type.  By default the PostgreSQL backend server returns everything as strings.  Every data type corresponds to a unique <code>OID</code> within the server, and these <code>OIDs</code> are sent back with the query response.  So, you need to match a particluar <code>OID</code> to a function you'd like to use to take the raw text input and produce a valid JavaScript object as a result. <code>null</code> values are never parsed.</p> <p>Let's do something I commonly like to do on projects: return 64-bit integers <code>(int8)</code> as JavaScript integers.  Because JavaScript doesn't have support for 64-bit integers node-postgres cannot confidently parse <code>int8</code> data type results as numbers because if you have a huge number it will overflow and the result you'd get back from node-postgres would not be the result in the datbase.  That would be a very bad thing so node-postgres just returns <code>int8</code> results as strings and leaves the parsing up to you.  Let's say that you know you don't and wont ever have numbers greater than <code>int4</code> in your database, but you're tired of recieving results from the <code>COUNT(*)</code> function as strings (because that function returns <code>int8</code>).  You would do this:</p> <pre><code>var types = require('pg').types\ntypes.setTypeParser(20, function(val) {\n  return parseInt(val)\n})\n</code></pre> <p>boom: now you get numbers instead of strings.</p> <p>Just as another example -- not saying this is a good idea -- let's say you want to return all dates from your database as moment objects.  Okay, do this:</p> <p><pre><code>var types = require('pg').types\nvar moment = require('moment')\nvar parseFn = function(val) {\n   return val === null ? null : moment(val)\n}\ntypes.setTypeParser(types.builtins.TIMESTAMPTZ, parseFn)\ntypes.setTypeParser(types.builtins.TIMESTAMP, parseFn)\n</code></pre> note: I've never done that with my dates, and I'm not 100% sure moment can parse all the date strings returned from postgres.  It's just an example!</p> <p>If you're thinking \"gee, this seems pretty handy, but how can I get a list of all the OIDs in the database and what they correspond to?!?!?!\" worry not:</p> <pre><code>$ psql -c \"select typname, oid, typarray from pg_type order by oid\"\n</code></pre> <p>If you want to find out the OID of a specific type:</p> <pre><code>$ psql -c \"select typname, oid, typarray from pg_type where typname = 'daterange' order by oid\"\n</code></pre> <p>:smile:</p>"},{"location":"ejemplos/servidor/node_modules/pg-types/#license","title":"license","text":"<p>The MIT License (MIT)</p> <p>Copyright (c) 2014 Brian M. Carlson</p> <p>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</p> <p>The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</p> <p>THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p>"},{"location":"ejemplos/servidor/node_modules/pgpass/","title":"pgpass","text":""},{"location":"ejemplos/servidor/node_modules/pgpass/#install","title":"Install","text":"<pre><code>npm install pgpass\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/pgpass/#usage","title":"Usage","text":"<pre><code>var pgPass = require('pgpass');\n\nvar connInfo = {\n  'host' : 'pgserver' ,\n  'user' : 'the_user_name' ,\n};\n\npgPass(connInfo, function(pass){\n  conn_info.password = pass;\n  // connect to postgresql server\n});\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/pgpass/#description","title":"Description","text":"<p>This module tries to read the <code>~/.pgpass</code> file (or the equivalent for windows systems). If the environment variable <code>PGPASSFILE</code> is set, this file is used instead. If everything goes right, the password from said file is passed to the callback; if the password cannot be read <code>undefined</code> is passed to the callback.</p> <p>Cases where <code>undefined</code> is returned:</p> <ul> <li>the environment variable <code>PGPASSWORD</code> is set</li> <li>the file cannot be read (wrong permissions, no such file, ...)</li> <li>for non windows systems: the file is write-/readable by the group or by other users</li> <li>there is no matching line for the given connection info</li> </ul> <p>There should be no need to use this module directly; it is already included in <code>node-postgres</code>.</p>"},{"location":"ejemplos/servidor/node_modules/pgpass/#configuration","title":"Configuration","text":"<p>The module reads the environment variable <code>PGPASS_NO_DEESCAPE</code> to decide if the the read tokens from the password file should be de-escaped or not. Default is to do de-escaping. For further information on this see this commit.</p>"},{"location":"ejemplos/servidor/node_modules/pgpass/#tests","title":"Tests","text":"<p>There are tests in <code>./test/</code>; including linting and coverage testing. Running <code>npm test</code> runs:</p> <ul> <li><code>jshint</code></li> <li><code>mocha</code> tests</li> <li><code>jscoverage</code> and <code>mocha -R html-cov</code></li> </ul> <p>You can see the coverage report in <code>coverage.html</code>.</p>"},{"location":"ejemplos/servidor/node_modules/pgpass/#development-patches-bugs","title":"Development, Patches, Bugs, ...","text":"<p>If you find Bugs or have improvements, please feel free to open a issue on GitHub. If you provide a pull request, I'm more than happy to merge them, just make sure to add tests for your changes.</p>"},{"location":"ejemplos/servidor/node_modules/pgpass/#links","title":"Links","text":"<ul> <li>https://github.com/hoegaarden/node-pgpass</li> <li>http://www.postgresql.org/docs/current/static/libpq-pgpass.html</li> <li>https://wiki.postgresql.org/wiki/Pgpass</li> <li>https://github.com/postgres/postgres/blob/master/src/interfaces/libpq/fe-connect.c</li> </ul>"},{"location":"ejemplos/servidor/node_modules/pgpass/#license","title":"License","text":"<p>Copyright (c) 2013-2016 Hannes H\u00f6rl</p> <p>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</p> <p>The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</p> <p>THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p>"},{"location":"ejemplos/servidor/node_modules/postgres-array/readme/","title":"postgres-array","text":"<p>Parse postgres array columns</p>"},{"location":"ejemplos/servidor/node_modules/postgres-array/readme/#install","title":"Install","text":"<pre><code>$ npm install --save postgres-array\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/postgres-array/readme/#usage","title":"Usage","text":"<pre><code>var postgresArray = require('postgres-array')\n\npostgresArray.parse('{1,2,3}', (value) =&gt; parseInt(value, 10))\n//=&gt; [1, 2, 3]\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/postgres-array/readme/#api","title":"API","text":""},{"location":"ejemplos/servidor/node_modules/postgres-array/readme/#parseinput-transform-array","title":"<code>parse(input, [transform])</code> -&gt; <code>array</code>","text":""},{"location":"ejemplos/servidor/node_modules/postgres-array/readme/#input","title":"input","text":"<p>Required Type: <code>string</code></p> <p>A Postgres array string.</p>"},{"location":"ejemplos/servidor/node_modules/postgres-array/readme/#transform","title":"transform","text":"<p>Type: <code>function</code> Default: <code>identity</code></p> <p>A function that transforms non-null values inserted into the array.</p>"},{"location":"ejemplos/servidor/node_modules/postgres-array/readme/#license","title":"License","text":"<p>MIT \u00a9 Ben Drucker</p>"},{"location":"ejemplos/servidor/node_modules/postgres-bytea/readme/","title":"postgres-bytea","text":"<p>Postgres bytea parser</p>"},{"location":"ejemplos/servidor/node_modules/postgres-bytea/readme/#install","title":"Install","text":"<pre><code>$ npm install --save postgres-bytea\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/postgres-bytea/readme/#usage","title":"Usage","text":"<pre><code>var bytea = require('postgres-bytea');\nbytea('\\\\000\\\\100\\\\200')\n//=&gt; buffer\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/postgres-bytea/readme/#api","title":"API","text":""},{"location":"ejemplos/servidor/node_modules/postgres-bytea/readme/#byteainput-buffer","title":"<code>bytea(input)</code> -&gt; <code>buffer</code>","text":""},{"location":"ejemplos/servidor/node_modules/postgres-bytea/readme/#input","title":"input","text":"<p>Required Type: <code>string</code></p> <p>A Postgres bytea binary string.</p>"},{"location":"ejemplos/servidor/node_modules/postgres-bytea/readme/#license","title":"License","text":"<p>MIT \u00a9 Ben Drucker</p>"},{"location":"ejemplos/servidor/node_modules/postgres-date/readme/","title":"postgres-date","text":"<p>Postgres date output parser</p> <p>This package parses date/time outputs from Postgres into Javascript <code>Date</code> objects. Its goal is to match Postgres behavior and preserve data accuracy.</p> <p>If you find a case where a valid Postgres output results in incorrect parsing (including loss of precision), please create a pull request and provide a failing test.</p> <p>Supported Postgres Versions: <code>&gt;= 9.6</code></p> <p>All prior versions of Postgres are likely compatible but not officially supported.</p>"},{"location":"ejemplos/servidor/node_modules/postgres-date/readme/#install","title":"Install","text":"<pre><code>$ npm install --save postgres-date\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/postgres-date/readme/#usage","title":"Usage","text":"<pre><code>var parse = require('postgres-date')\nparse('2011-01-23 22:15:51Z')\n// =&gt; 2011-01-23T22:15:51.000Z\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/postgres-date/readme/#api","title":"API","text":""},{"location":"ejemplos/servidor/node_modules/postgres-date/readme/#parseisodate-date","title":"<code>parse(isoDate)</code> -&gt; <code>date</code>","text":""},{"location":"ejemplos/servidor/node_modules/postgres-date/readme/#isodate","title":"isoDate","text":"<p>Required Type: <code>string</code></p> <p>A date string from Postgres.</p>"},{"location":"ejemplos/servidor/node_modules/postgres-date/readme/#releases","title":"Releases","text":"<p>The following semantic versioning increments will be used for changes:</p> <ul> <li>Major: Removal of support for Node.js versions or Postgres versions (not expected)</li> <li>Minor: Unused, since Postgres returns dates in standard ISO 8601 format</li> <li>Patch: Any fix for parsing behavior</li> </ul>"},{"location":"ejemplos/servidor/node_modules/postgres-date/readme/#license","title":"License","text":"<p>MIT \u00a9 Ben Drucker</p>"},{"location":"ejemplos/servidor/node_modules/postgres-interval/readme/","title":"postgres-interval","text":"<p>Parse Postgres interval columns</p>"},{"location":"ejemplos/servidor/node_modules/postgres-interval/readme/#install","title":"Install","text":"<pre><code>$ npm install --save postgres-interval\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/postgres-interval/readme/#usage","title":"Usage","text":"<pre><code>var parse = require('postgres-interval')\nvar interval = parse('01:02:03')\n//=&gt; {hours: 1, minutes: 2, seconds: 3}\ninterval.toPostgres()\n// 3 seconds 2 minutes 1 hours\ninterval.toISO()\n// P0Y0M0DT1H2M3S\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/postgres-interval/readme/#api","title":"API","text":""},{"location":"ejemplos/servidor/node_modules/postgres-interval/readme/#parsepginterval-interval","title":"<code>parse(pgInterval)</code> -&gt; <code>interval</code>","text":""},{"location":"ejemplos/servidor/node_modules/postgres-interval/readme/#pginterval","title":"pgInterval","text":"<p>Required Type: <code>string</code></p> <p>A Postgres interval string.</p>"},{"location":"ejemplos/servidor/node_modules/postgres-interval/readme/#intervaltopostgres-string","title":"<code>interval.toPostgres()</code> -&gt; <code>string</code>","text":"<p>Returns an interval string. This allows the interval object to be passed into prepared statements.</p>"},{"location":"ejemplos/servidor/node_modules/postgres-interval/readme/#intervaltoisostring-string","title":"<code>interval.toISOString()</code> -&gt; <code>string</code>","text":"<p>Returns an ISO 8601 compliant string.</p> <p>Also available as <code>interval.toISO()</code> for backwards compatibility.</p>"},{"location":"ejemplos/servidor/node_modules/postgres-interval/readme/#license","title":"License","text":"<p>MIT \u00a9 Ben Drucker</p>"},{"location":"ejemplos/servidor/node_modules/proxy-addr/","title":"proxy-addr","text":"<p>Determine address of proxied request</p>"},{"location":"ejemplos/servidor/node_modules/proxy-addr/#install","title":"Install","text":"<p>This is a Node.js module available through the npm registry. Installation is done using the <code>npm install</code> command:</p> <pre><code>$ npm install proxy-addr\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/proxy-addr/#api","title":"API","text":"<pre><code>var proxyaddr = require('proxy-addr')\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/proxy-addr/#proxyaddrreq-trust","title":"proxyaddr(req, trust)","text":"<p>Return the address of the request, using the given <code>trust</code> parameter.</p> <p>The <code>trust</code> argument is a function that returns <code>true</code> if you trust the address, <code>false</code> if you don't. The closest untrusted address is returned.</p> <pre><code>proxyaddr(req, function (addr) { return addr === '127.0.0.1' })\nproxyaddr(req, function (addr, i) { return i &lt; 1 })\n</code></pre> <p>The <code>trust</code> arugment may also be a single IP address string or an array of trusted addresses, as plain IP addresses, CIDR-formatted strings, or IP/netmask strings.</p> <pre><code>proxyaddr(req, '127.0.0.1')\nproxyaddr(req, ['127.0.0.0/8', '10.0.0.0/8'])\nproxyaddr(req, ['127.0.0.0/255.0.0.0', '192.168.0.0/255.255.0.0'])\n</code></pre> <p>This module also supports IPv6. Your IPv6 addresses will be normalized automatically (i.e. <code>fe80::00ed:1</code> equals <code>fe80:0:0:0:0:0:ed:1</code>).</p> <pre><code>proxyaddr(req, '::1')\nproxyaddr(req, ['::1/128', 'fe80::/10'])\n</code></pre> <p>This module will automatically work with IPv4-mapped IPv6 addresses as well to support node.js in IPv6-only mode. This means that you do not have to specify both <code>::ffff:a00:1</code> and <code>10.0.0.1</code>.</p> <p>As a convenience, this module also takes certain pre-defined names in addition to IP addresses, which expand into IP addresses:</p> <pre><code>proxyaddr(req, 'loopback')\nproxyaddr(req, ['loopback', 'fc00:ac:1ab5:fff::1/64'])\n</code></pre> <ul> <li><code>loopback</code>: IPv4 and IPv6 loopback addresses (like <code>::1</code> and     <code>127.0.0.1</code>).</li> <li><code>linklocal</code>: IPv4 and IPv6 link-local addresses (like     <code>fe80::1:1:1:1</code> and <code>169.254.0.1</code>).</li> <li><code>uniquelocal</code>: IPv4 private addresses and IPv6 unique-local     addresses (like <code>fc00:ac:1ab5:fff::1</code> and <code>192.168.0.1</code>).</li> </ul> <p>When <code>trust</code> is specified as a function, it will be called for each address to determine if it is a trusted address. The function is given two arguments: <code>addr</code> and <code>i</code>, where <code>addr</code> is a string of the address to check and <code>i</code> is a number that represents the distance from the socket address.</p>"},{"location":"ejemplos/servidor/node_modules/proxy-addr/#proxyaddrallreq-trust","title":"proxyaddr.all(req, [trust])","text":"<p>Return all the addresses of the request, optionally stopping at the first untrusted. This array is ordered from closest to furthest (i.e. <code>arr[0] === req.connection.remoteAddress</code>).</p> <pre><code>proxyaddr.all(req)\n</code></pre> <p>The optional <code>trust</code> argument takes the same arguments as <code>trust</code> does in <code>proxyaddr(req, trust)</code>.</p> <pre><code>proxyaddr.all(req, 'loopback')\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/proxy-addr/#proxyaddrcompileval","title":"proxyaddr.compile(val)","text":"<p>Compiles argument <code>val</code> into a <code>trust</code> function. This function takes the same arguments as <code>trust</code> does in <code>proxyaddr(req, trust)</code> and returns a function suitable for <code>proxyaddr(req, trust)</code>.</p> <pre><code>var trust = proxyaddr.compile('loopback')\nvar addr = proxyaddr(req, trust)\n</code></pre> <p>This function is meant to be optimized for use against every request. It is recommend to compile a trust function up-front for the trusted configuration and pass that to <code>proxyaddr(req, trust)</code> for each request.</p>"},{"location":"ejemplos/servidor/node_modules/proxy-addr/#testing","title":"Testing","text":"<pre><code>$ npm test\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/proxy-addr/#benchmarks","title":"Benchmarks","text":"<pre><code>$ npm run-script bench\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/proxy-addr/#license","title":"License","text":"<p>MIT</p>"},{"location":"ejemplos/servidor/node_modules/proxy-addr/HISTORY/","title":"2.0.6 / 2020-02-24","text":"<ul> <li>deps: ipaddr.js@1.9.1</li> </ul>"},{"location":"ejemplos/servidor/node_modules/proxy-addr/HISTORY/#205-2019-04-16","title":"2.0.5 / 2019-04-16","text":"<ul> <li>deps: ipaddr.js@1.9.0</li> </ul>"},{"location":"ejemplos/servidor/node_modules/proxy-addr/HISTORY/#204-2018-07-26","title":"2.0.4 / 2018-07-26","text":"<ul> <li>deps: ipaddr.js@1.8.0</li> </ul>"},{"location":"ejemplos/servidor/node_modules/proxy-addr/HISTORY/#203-2018-02-19","title":"2.0.3 / 2018-02-19","text":"<ul> <li>deps: ipaddr.js@1.6.0</li> </ul>"},{"location":"ejemplos/servidor/node_modules/proxy-addr/HISTORY/#202-2017-09-24","title":"2.0.2 / 2017-09-24","text":"<ul> <li>deps: forwarded@~0.1.2<ul> <li>perf: improve header parsing</li> <li>perf: reduce overhead when no <code>X-Forwarded-For</code> header</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/proxy-addr/HISTORY/#201-2017-09-10","title":"2.0.1 / 2017-09-10","text":"<ul> <li>deps: forwarded@~0.1.1<ul> <li>Fix trimming leading / trailing OWS</li> <li>perf: hoist regular expression</li> </ul> </li> <li>deps: ipaddr.js@1.5.2</li> </ul>"},{"location":"ejemplos/servidor/node_modules/proxy-addr/HISTORY/#200-2017-08-08","title":"2.0.0 / 2017-08-08","text":"<ul> <li>Drop support for Node.js below 0.10</li> </ul>"},{"location":"ejemplos/servidor/node_modules/proxy-addr/HISTORY/#115-2017-07-25","title":"1.1.5 / 2017-07-25","text":"<ul> <li>Fix array argument being altered</li> <li>deps: ipaddr.js@1.4.0</li> </ul>"},{"location":"ejemplos/servidor/node_modules/proxy-addr/HISTORY/#114-2017-03-24","title":"1.1.4 / 2017-03-24","text":"<ul> <li>deps: ipaddr.js@1.3.0</li> </ul>"},{"location":"ejemplos/servidor/node_modules/proxy-addr/HISTORY/#113-2017-01-14","title":"1.1.3 / 2017-01-14","text":"<ul> <li>deps: ipaddr.js@1.2.0</li> </ul>"},{"location":"ejemplos/servidor/node_modules/proxy-addr/HISTORY/#112-2016-05-29","title":"1.1.2 / 2016-05-29","text":"<ul> <li>deps: ipaddr.js@1.1.1<ul> <li>Fix IPv6-mapped IPv4 validation edge cases</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/proxy-addr/HISTORY/#111-2016-05-03","title":"1.1.1 / 2016-05-03","text":"<ul> <li>Fix regression matching mixed versions against multiple subnets</li> </ul>"},{"location":"ejemplos/servidor/node_modules/proxy-addr/HISTORY/#110-2016-05-01","title":"1.1.0 / 2016-05-01","text":"<ul> <li>Fix accepting various invalid netmasks<ul> <li>IPv4 netmasks must be contingous</li> <li>IPv6 addresses cannot be used as a netmask</li> </ul> </li> <li>deps: ipaddr.js@1.1.0</li> </ul>"},{"location":"ejemplos/servidor/node_modules/proxy-addr/HISTORY/#1010-2015-12-09","title":"1.0.10 / 2015-12-09","text":"<ul> <li>deps: ipaddr.js@1.0.5<ul> <li>Fix regression in <code>isValid</code> with non-string arguments</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/proxy-addr/HISTORY/#109-2015-12-01","title":"1.0.9 / 2015-12-01","text":"<ul> <li>deps: ipaddr.js@1.0.4<ul> <li>Fix accepting some invalid IPv6 addresses</li> <li>Reject CIDRs with negative or overlong masks</li> </ul> </li> <li>perf: enable strict mode</li> </ul>"},{"location":"ejemplos/servidor/node_modules/proxy-addr/HISTORY/#108-2015-05-10","title":"1.0.8 / 2015-05-10","text":"<ul> <li>deps: ipaddr.js@1.0.1</li> </ul>"},{"location":"ejemplos/servidor/node_modules/proxy-addr/HISTORY/#107-2015-03-16","title":"1.0.7 / 2015-03-16","text":"<ul> <li>deps: ipaddr.js@0.1.9<ul> <li>Fix OOM on certain inputs to <code>isValid</code></li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/proxy-addr/HISTORY/#106-2015-02-01","title":"1.0.6 / 2015-02-01","text":"<ul> <li>deps: ipaddr.js@0.1.8</li> </ul>"},{"location":"ejemplos/servidor/node_modules/proxy-addr/HISTORY/#105-2015-01-08","title":"1.0.5 / 2015-01-08","text":"<ul> <li>deps: ipaddr.js@0.1.6</li> </ul>"},{"location":"ejemplos/servidor/node_modules/proxy-addr/HISTORY/#104-2014-11-23","title":"1.0.4 / 2014-11-23","text":"<ul> <li>deps: ipaddr.js@0.1.5<ul> <li>Fix edge cases with <code>isValid</code></li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/proxy-addr/HISTORY/#103-2014-09-21","title":"1.0.3 / 2014-09-21","text":"<ul> <li>Use <code>forwarded</code> npm module</li> </ul>"},{"location":"ejemplos/servidor/node_modules/proxy-addr/HISTORY/#102-2014-09-18","title":"1.0.2 / 2014-09-18","text":"<ul> <li>Fix a global leak when multiple subnets are trusted</li> <li>Support Node.js 0.6</li> <li>deps: ipaddr.js@0.1.3</li> </ul>"},{"location":"ejemplos/servidor/node_modules/proxy-addr/HISTORY/#101-2014-06-03","title":"1.0.1 / 2014-06-03","text":"<ul> <li>Fix links in npm package</li> </ul>"},{"location":"ejemplos/servidor/node_modules/proxy-addr/HISTORY/#100-2014-05-08","title":"1.0.0 / 2014-05-08","text":"<ul> <li>Add <code>trust</code> argument to determine proxy trust on<ul> <li>Accepts custom function</li> <li>Accepts IPv4/IPv6 address(es)</li> <li>Accepts subnets</li> <li>Accepts pre-defined names</li> </ul> </li> <li>Add optional <code>trust</code> argument to <code>proxyaddr.all</code> to     stop at first untrusted</li> <li>Add <code>proxyaddr.compile</code> to pre-compile <code>trust</code> function     to make subsequent calls faster</li> </ul>"},{"location":"ejemplos/servidor/node_modules/proxy-addr/HISTORY/#001-2014-05-04","title":"0.0.1 / 2014-05-04","text":"<ul> <li>Fix bad npm publish</li> </ul>"},{"location":"ejemplos/servidor/node_modules/proxy-addr/HISTORY/#000-2014-05-04","title":"0.0.0 / 2014-05-04","text":"<ul> <li>Initial release</li> </ul>"},{"location":"ejemplos/servidor/node_modules/qs/","title":"qs","text":"<p>A querystring parsing and stringifying library with some added security.</p> <p>Lead Maintainer: Jordan Harband</p> <p>The qs module was originally created and maintained by TJ Holowaychuk.</p>"},{"location":"ejemplos/servidor/node_modules/qs/#usage","title":"Usage","text":"<pre><code>var qs = require('qs');\nvar assert = require('assert');\n\nvar obj = qs.parse('a=c');\nassert.deepEqual(obj, { a: 'c' });\n\nvar str = qs.stringify(obj);\nassert.equal(str, 'a=c');\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/qs/#parsing-objects","title":"Parsing Objects","text":"<p> <pre><code>qs.parse(string, [options]);\n</code></pre></p> <p>qs allows you to create nested objects within your query strings, by surrounding the name of sub-keys with square brackets <code>[]</code>. For example, the string <code>'foo[bar]=baz'</code> converts to:</p> <pre><code>assert.deepEqual(qs.parse('foo[bar]=baz'), {\n    foo: {\n        bar: 'baz'\n    }\n});\n</code></pre> <p>When using the <code>plainObjects</code> option the parsed value is returned as a null object, created via <code>Object.create(null)</code> and as such you should be aware that prototype methods will not exist on it and a user may set those names to whatever value they like:</p> <pre><code>var nullObject = qs.parse('a[hasOwnProperty]=b', { plainObjects: true });\nassert.deepEqual(nullObject, { a: { hasOwnProperty: 'b' } });\n</code></pre> <p>By default parameters that would overwrite properties on the object prototype are ignored, if you wish to keep the data from those fields either use <code>plainObjects</code> as mentioned above, or set <code>allowPrototypes</code> to <code>true</code> which will allow user input to overwrite those properties. WARNING It is generally a bad idea to enable this option as it can cause problems when attempting to use the properties that have been overwritten. Always be careful with this option.</p> <pre><code>var protoObject = qs.parse('a[hasOwnProperty]=b', { allowPrototypes: true });\nassert.deepEqual(protoObject, { a: { hasOwnProperty: 'b' } });\n</code></pre> <p>URI encoded strings work too:</p> <pre><code>assert.deepEqual(qs.parse('a%5Bb%5D=c'), {\n    a: { b: 'c' }\n});\n</code></pre> <p>You can also nest your objects, like <code>'foo[bar][baz]=foobarbaz'</code>:</p> <pre><code>assert.deepEqual(qs.parse('foo[bar][baz]=foobarbaz'), {\n    foo: {\n        bar: {\n            baz: 'foobarbaz'\n        }\n    }\n});\n</code></pre> <p>By default, when nesting objects qs will only parse up to 5 children deep. This means if you attempt to parse a string like <code>'a[b][c][d][e][f][g][h][i]=j'</code> your resulting object will be:</p> <pre><code>var expected = {\n    a: {\n        b: {\n            c: {\n                d: {\n                    e: {\n                        f: {\n                            '[g][h][i]': 'j'\n                        }\n                    }\n                }\n            }\n        }\n    }\n};\nvar string = 'a[b][c][d][e][f][g][h][i]=j';\nassert.deepEqual(qs.parse(string), expected);\n</code></pre> <p>This depth can be overridden by passing a <code>depth</code> option to <code>qs.parse(string, [options])</code>:</p> <pre><code>var deep = qs.parse('a[b][c][d][e][f][g][h][i]=j', { depth: 1 });\nassert.deepEqual(deep, { a: { b: { '[c][d][e][f][g][h][i]': 'j' } } });\n</code></pre> <p>The depth limit helps mitigate abuse when qs is used to parse user input, and it is recommended to keep it a reasonably small number.</p> <p>For similar reasons, by default qs will only parse up to 1000 parameters. This can be overridden by passing a <code>parameterLimit</code> option:</p> <pre><code>var limited = qs.parse('a=b&amp;c=d', { parameterLimit: 1 });\nassert.deepEqual(limited, { a: 'b' });\n</code></pre> <p>To bypass the leading question mark, use <code>ignoreQueryPrefix</code>:</p> <pre><code>var prefixed = qs.parse('?a=b&amp;c=d', { ignoreQueryPrefix: true });\nassert.deepEqual(prefixed, { a: 'b', c: 'd' });\n</code></pre> <p>An optional delimiter can also be passed:</p> <pre><code>var delimited = qs.parse('a=b;c=d', { delimiter: ';' });\nassert.deepEqual(delimited, { a: 'b', c: 'd' });\n</code></pre> <p>Delimiters can be a regular expression too:</p> <pre><code>var regexed = qs.parse('a=b;c=d,e=f', { delimiter: /[;,]/ });\nassert.deepEqual(regexed, { a: 'b', c: 'd', e: 'f' });\n</code></pre> <p>Option <code>allowDots</code> can be used to enable dot notation:</p> <pre><code>var withDots = qs.parse('a.b=c', { allowDots: true });\nassert.deepEqual(withDots, { a: { b: 'c' } });\n</code></pre> <p>If you have to deal with legacy browsers or services, there's also support for decoding percent-encoded octets as iso-8859-1:</p> <pre><code>var oldCharset = qs.parse('a=%A7', { charset: 'iso-8859-1' });\nassert.deepEqual(oldCharset, { a: '\u00a7' });\n</code></pre> <p>Some services add an initial <code>utf8=\u2713</code> value to forms so that old Internet Explorer versions are more likely to submit the form as utf-8. Additionally, the server can check the value against wrong encodings of the checkmark character and detect that a query string or <code>application/x-www-form-urlencoded</code> body was not sent as utf-8, eg. if the form had an <code>accept-charset</code> parameter or the containing page had a different character set.</p> <p>qs supports this mechanism via the <code>charsetSentinel</code> option. If specified, the <code>utf8</code> parameter will be omitted from the returned object. It will be used to switch to <code>iso-8859-1</code>/<code>utf-8</code> mode depending on how the checkmark is encoded.</p> <p>Important: When you specify both the <code>charset</code> option and the <code>charsetSentinel</code> option, the <code>charset</code> will be overridden when the request contains a <code>utf8</code> parameter from which the actual charset can be deduced. In that sense the <code>charset</code> will behave as the default charset rather than the authoritative charset.</p> <pre><code>var detectedAsUtf8 = qs.parse('utf8=%E2%9C%93&amp;a=%C3%B8', {\n    charset: 'iso-8859-1',\n    charsetSentinel: true\n});\nassert.deepEqual(detectedAsUtf8, { a: '\u00f8' });\n\n// Browsers encode the checkmark as &amp;#10003; when submitting as iso-8859-1:\nvar detectedAsIso8859_1 = qs.parse('utf8=%26%2310003%3B&amp;a=%F8', {\n    charset: 'utf-8',\n    charsetSentinel: true\n});\nassert.deepEqual(detectedAsIso8859_1, { a: '\u00f8' });\n</code></pre> <p>If you want to decode the <code>&amp;#...;</code> syntax to the actual character, you can specify the <code>interpretNumericEntities</code> option as well:</p> <pre><code>var detectedAsIso8859_1 = qs.parse('a=%26%239786%3B', {\n    charset: 'iso-8859-1',\n    interpretNumericEntities: true\n});\nassert.deepEqual(detectedAsIso8859_1, { a: '\u263a' });\n</code></pre> <p>It also works when the charset has been detected in <code>charsetSentinel</code> mode.</p>"},{"location":"ejemplos/servidor/node_modules/qs/#parsing-arrays","title":"Parsing Arrays","text":"<p>qs can also parse arrays using a similar <code>[]</code> notation:</p> <pre><code>var withArray = qs.parse('a[]=b&amp;a[]=c');\nassert.deepEqual(withArray, { a: ['b', 'c'] });\n</code></pre> <p>You may specify an index as well:</p> <pre><code>var withIndexes = qs.parse('a[1]=c&amp;a[0]=b');\nassert.deepEqual(withIndexes, { a: ['b', 'c'] });\n</code></pre> <p>Note that the only difference between an index in an array and a key in an object is that the value between the brackets must be a number to create an array. When creating arrays with specific indices, qs will compact a sparse array to only the existing values preserving their order:</p> <pre><code>var noSparse = qs.parse('a[1]=b&amp;a[15]=c');\nassert.deepEqual(noSparse, { a: ['b', 'c'] });\n</code></pre> <p>Note that an empty string is also a value, and will be preserved:</p> <pre><code>var withEmptyString = qs.parse('a[]=&amp;a[]=b');\nassert.deepEqual(withEmptyString, { a: ['', 'b'] });\n\nvar withIndexedEmptyString = qs.parse('a[0]=b&amp;a[1]=&amp;a[2]=c');\nassert.deepEqual(withIndexedEmptyString, { a: ['b', '', 'c'] });\n</code></pre> <p>qs will also limit specifying indices in an array to a maximum index of <code>20</code>. Any array members with an index of greater than <code>20</code> will instead be converted to an object with the index as the key. This is needed to handle cases when someone sent, for example, <code>a[999999999]</code> and it will take significant time to iterate over this huge array.</p> <pre><code>var withMaxIndex = qs.parse('a[100]=b');\nassert.deepEqual(withMaxIndex, { a: { '100': 'b' } });\n</code></pre> <p>This limit can be overridden by passing an <code>arrayLimit</code> option:</p> <pre><code>var withArrayLimit = qs.parse('a[1]=b', { arrayLimit: 0 });\nassert.deepEqual(withArrayLimit, { a: { '1': 'b' } });\n</code></pre> <p>To disable array parsing entirely, set <code>parseArrays</code> to <code>false</code>.</p> <pre><code>var noParsingArrays = qs.parse('a[]=b', { parseArrays: false });\nassert.deepEqual(noParsingArrays, { a: { '0': 'b' } });\n</code></pre> <p>If you mix notations, qs will merge the two items into an object:</p> <pre><code>var mixedNotation = qs.parse('a[0]=b&amp;a[b]=c');\nassert.deepEqual(mixedNotation, { a: { '0': 'b', b: 'c' } });\n</code></pre> <p>You can also create arrays of objects:</p> <pre><code>var arraysOfObjects = qs.parse('a[][b]=c');\nassert.deepEqual(arraysOfObjects, { a: [{ b: 'c' }] });\n</code></pre> <p>Some people use comma to join array, qs can parse it: <pre><code>var arraysOfObjects = qs.parse('a=b,c', { comma: true })\nassert.deepEqual(arraysOfObjects, { a: ['b', 'c'] })\n</code></pre> (this cannot convert nested objects, such as <code>a={b:1},{c:d}</code>)</p>"},{"location":"ejemplos/servidor/node_modules/qs/#stringifying","title":"Stringifying","text":"<p> <pre><code>qs.stringify(object, [options]);\n</code></pre></p> <p>When stringifying, qs by default URI encodes output. Objects are stringified as you would expect:</p> <pre><code>assert.equal(qs.stringify({ a: 'b' }), 'a=b');\nassert.equal(qs.stringify({ a: { b: 'c' } }), 'a%5Bb%5D=c');\n</code></pre> <p>This encoding can be disabled by setting the <code>encode</code> option to <code>false</code>:</p> <pre><code>var unencoded = qs.stringify({ a: { b: 'c' } }, { encode: false });\nassert.equal(unencoded, 'a[b]=c');\n</code></pre> <p>Encoding can be disabled for keys by setting the <code>encodeValuesOnly</code> option to <code>true</code>: <pre><code>var encodedValues = qs.stringify(\n    { a: 'b', c: ['d', 'e=f'], f: [['g'], ['h']] },\n    { encodeValuesOnly: true }\n);\nassert.equal(encodedValues,'a=b&amp;c[0]=d&amp;c[1]=e%3Df&amp;f[0][0]=g&amp;f[1][0]=h');\n</code></pre></p> <p>This encoding can also be replaced by a custom encoding method set as <code>encoder</code> option:</p> <pre><code>var encoded = qs.stringify({ a: { b: 'c' } }, { encoder: function (str) {\n    // Passed in values `a`, `b`, `c`\n    return // Return encoded string\n}})\n</code></pre> <p>(Note: the <code>encoder</code> option does not apply if <code>encode</code> is <code>false</code>)</p> <p>Analogue to the <code>encoder</code> there is a <code>decoder</code> option for <code>parse</code> to override decoding of properties and values:</p> <pre><code>var decoded = qs.parse('x=z', { decoder: function (str) {\n    // Passed in values `x`, `z`\n    return // Return decoded string\n}})\n</code></pre> <p>Examples beyond this point will be shown as though the output is not URI encoded for clarity. Please note that the return values in these cases will be URI encoded during real usage.</p> <p>When arrays are stringified, by default they are given explicit indices:</p> <pre><code>qs.stringify({ a: ['b', 'c', 'd'] });\n// 'a[0]=b&amp;a[1]=c&amp;a[2]=d'\n</code></pre> <p>You may override this by setting the <code>indices</code> option to <code>false</code>:</p> <pre><code>qs.stringify({ a: ['b', 'c', 'd'] }, { indices: false });\n// 'a=b&amp;a=c&amp;a=d'\n</code></pre> <p>You may use the <code>arrayFormat</code> option to specify the format of the output array:</p> <pre><code>qs.stringify({ a: ['b', 'c'] }, { arrayFormat: 'indices' })\n// 'a[0]=b&amp;a[1]=c'\nqs.stringify({ a: ['b', 'c'] }, { arrayFormat: 'brackets' })\n// 'a[]=b&amp;a[]=c'\nqs.stringify({ a: ['b', 'c'] }, { arrayFormat: 'repeat' })\n// 'a=b&amp;a=c'\nqs.stringify({ a: ['b', 'c'] }, { arrayFormat: 'comma' })\n// 'a=b,c'\n</code></pre> <p>When objects are stringified, by default they use bracket notation:</p> <pre><code>qs.stringify({ a: { b: { c: 'd', e: 'f' } } });\n// 'a[b][c]=d&amp;a[b][e]=f'\n</code></pre> <p>You may override this to use dot notation by setting the <code>allowDots</code> option to <code>true</code>:</p> <pre><code>qs.stringify({ a: { b: { c: 'd', e: 'f' } } }, { allowDots: true });\n// 'a.b.c=d&amp;a.b.e=f'\n</code></pre> <p>Empty strings and null values will omit the value, but the equals sign (=) remains in place:</p> <pre><code>assert.equal(qs.stringify({ a: '' }), 'a=');\n</code></pre> <p>Key with no values (such as an empty object or array) will return nothing:</p> <pre><code>assert.equal(qs.stringify({ a: [] }), '');\nassert.equal(qs.stringify({ a: {} }), '');\nassert.equal(qs.stringify({ a: [{}] }), '');\nassert.equal(qs.stringify({ a: { b: []} }), '');\nassert.equal(qs.stringify({ a: { b: {}} }), '');\n</code></pre> <p>Properties that are set to <code>undefined</code> will be omitted entirely:</p> <pre><code>assert.equal(qs.stringify({ a: null, b: undefined }), 'a=');\n</code></pre> <p>The query string may optionally be prepended with a question mark:</p> <pre><code>assert.equal(qs.stringify({ a: 'b', c: 'd' }, { addQueryPrefix: true }), '?a=b&amp;c=d');\n</code></pre> <p>The delimiter may be overridden with stringify as well:</p> <pre><code>assert.equal(qs.stringify({ a: 'b', c: 'd' }, { delimiter: ';' }), 'a=b;c=d');\n</code></pre> <p>If you only want to override the serialization of <code>Date</code> objects, you can provide a <code>serializeDate</code> option:</p> <pre><code>var date = new Date(7);\nassert.equal(qs.stringify({ a: date }), 'a=1970-01-01T00:00:00.007Z'.replace(/:/g, '%3A'));\nassert.equal(\n    qs.stringify({ a: date }, { serializeDate: function (d) { return d.getTime(); } }),\n    'a=7'\n);\n</code></pre> <p>You may use the <code>sort</code> option to affect the order of parameter keys:</p> <pre><code>function alphabeticalSort(a, b) {\n    return a.localeCompare(b);\n}\nassert.equal(qs.stringify({ a: 'c', z: 'y', b : 'f' }, { sort: alphabeticalSort }), 'a=c&amp;b=f&amp;z=y');\n</code></pre> <p>Finally, you can use the <code>filter</code> option to restrict which keys will be included in the stringified output. If you pass a function, it will be called for each key to obtain the replacement value. Otherwise, if you pass an array, it will be used to select properties and array indices for stringification:</p> <pre><code>function filterFunc(prefix, value) {\n    if (prefix == 'b') {\n        // Return an `undefined` value to omit a property.\n        return;\n    }\n    if (prefix == 'e[f]') {\n        return value.getTime();\n    }\n    if (prefix == 'e[g][0]') {\n        return value * 2;\n    }\n    return value;\n}\nqs.stringify({ a: 'b', c: 'd', e: { f: new Date(123), g: [2] } }, { filter: filterFunc });\n// 'a=b&amp;c=d&amp;e[f]=123&amp;e[g][0]=4'\nqs.stringify({ a: 'b', c: 'd', e: 'f' }, { filter: ['a', 'e'] });\n// 'a=b&amp;e=f'\nqs.stringify({ a: ['b', 'c', 'd'], e: 'f' }, { filter: ['a', 0, 2] });\n// 'a[0]=b&amp;a[2]=d'\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/qs/#handling-of-null-values","title":"Handling of <code>null</code> values","text":"<p>By default, <code>null</code> values are treated like empty strings:</p> <pre><code>var withNull = qs.stringify({ a: null, b: '' });\nassert.equal(withNull, 'a=&amp;b=');\n</code></pre> <p>Parsing does not distinguish between parameters with and without equal signs. Both are converted to empty strings.</p> <pre><code>var equalsInsensitive = qs.parse('a&amp;b=');\nassert.deepEqual(equalsInsensitive, { a: '', b: '' });\n</code></pre> <p>To distinguish between <code>null</code> values and empty strings use the <code>strictNullHandling</code> flag. In the result string the <code>null</code> values have no <code>=</code> sign:</p> <pre><code>var strictNull = qs.stringify({ a: null, b: '' }, { strictNullHandling: true });\nassert.equal(strictNull, 'a&amp;b=');\n</code></pre> <p>To parse values without <code>=</code> back to <code>null</code> use the <code>strictNullHandling</code> flag:</p> <pre><code>var parsedStrictNull = qs.parse('a&amp;b=', { strictNullHandling: true });\nassert.deepEqual(parsedStrictNull, { a: null, b: '' });\n</code></pre> <p>To completely skip rendering keys with <code>null</code> values, use the <code>skipNulls</code> flag:</p> <pre><code>var nullsSkipped = qs.stringify({ a: 'b', c: null}, { skipNulls: true });\nassert.equal(nullsSkipped, 'a=b');\n</code></pre> <p>If you're communicating with legacy systems, you can switch to <code>iso-8859-1</code> using the <code>charset</code> option:</p> <pre><code>var iso = qs.stringify({ \u00e6: '\u00e6' }, { charset: 'iso-8859-1' });\nassert.equal(iso, '%E6=%E6');\n</code></pre> <p>Characters that don't exist in <code>iso-8859-1</code> will be converted to numeric entities, similar to what browsers do:</p> <pre><code>var numeric = qs.stringify({ a: '\u263a' }, { charset: 'iso-8859-1' });\nassert.equal(numeric, 'a=%26%239786%3B');\n</code></pre> <p>You can use the <code>charsetSentinel</code> option to announce the character by including an <code>utf8=\u2713</code> parameter with the proper encoding if the checkmark, similar to what Ruby on Rails and others do when submitting forms.</p> <pre><code>var sentinel = qs.stringify({ a: '\u263a' }, { charsetSentinel: true });\nassert.equal(sentinel, 'utf8=%E2%9C%93&amp;a=%E2%98%BA');\n\nvar isoSentinel = qs.stringify({ a: '\u00e6' }, { charsetSentinel: true, charset: 'iso-8859-1' });\nassert.equal(isoSentinel, 'utf8=%26%2310003%3B&amp;a=%E6');\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/qs/#dealing-with-special-character-sets","title":"Dealing with special character sets","text":"<p>By default the encoding and decoding of characters is done in <code>utf-8</code>, and <code>iso-8859-1</code> support is also built in via the <code>charset</code> parameter.</p> <p>If you wish to encode querystrings to a different character set (i.e. Shift JIS) you can use the <code>qs-iconv</code> library:</p> <pre><code>var encoder = require('qs-iconv/encoder')('shift_jis');\nvar shiftJISEncoded = qs.stringify({ a: '\u3053\u3093\u306b\u3061\u306f\uff01' }, { encoder: encoder });\nassert.equal(shiftJISEncoded, 'a=%82%B1%82%F1%82%C9%82%BF%82%CD%81I');\n</code></pre> <p>This also works for decoding of query strings:</p> <pre><code>var decoder = require('qs-iconv/decoder')('shift_jis');\nvar obj = qs.parse('a=%82%B1%82%F1%82%C9%82%BF%82%CD%81I', { decoder: decoder });\nassert.deepEqual(obj, { a: '\u3053\u3093\u306b\u3061\u306f\uff01' });\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/qs/#rfc-3986-and-rfc-1738-space-encoding","title":"RFC 3986 and RFC 1738 space encoding","text":"<p>RFC3986 used as default option and encodes ' ' to %20 which is backward compatible. In the same time, output can be stringified as per RFC1738 with ' ' equal to '+'.</p> <pre><code>assert.equal(qs.stringify({ a: 'b c' }), 'a=b%20c');\nassert.equal(qs.stringify({ a: 'b c' }, { format : 'RFC3986' }), 'a=b%20c');\nassert.equal(qs.stringify({ a: 'b c' }, { format : 'RFC1738' }), 'a=b+c');\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/qs/CHANGELOG/","title":"CHANGELOG","text":""},{"location":"ejemplos/servidor/node_modules/qs/CHANGELOG/#670","title":"6.7.0","text":"<ul> <li>[New] <code>stringify</code>/<code>parse</code>: add <code>comma</code> as an <code>arrayFormat</code> option (#276, #219)</li> <li>[Fix] correctly parse nested arrays (#212)</li> <li>[Fix] <code>utils.merge</code>: avoid a crash with a null target and a truthy non-array source, also with an array source</li> <li>[Robustness] <code>stringify</code>: cache <code>Object.prototype.hasOwnProperty</code></li> <li>[Refactor] <code>utils</code>: <code>isBuffer</code>: small tweak; add tests</li> <li>[Refactor] use cached <code>Array.isArray</code></li> <li>[Refactor] <code>parse</code>/<code>stringify</code>: make a function to normalize the options</li> <li>[Refactor] <code>utils</code>: reduce observable [[Get]]s</li> <li>[Refactor] <code>stringify</code>/<code>utils</code>: cache <code>Array.isArray</code></li> <li>[Tests] always use <code>String(x)</code> over <code>x.toString()</code></li> <li>[Tests] fix Buffer tests to work in node &lt; 4.5 and node &lt; 5.10</li> <li>[Tests] temporarily allow coverage to fail</li> </ul>"},{"location":"ejemplos/servidor/node_modules/qs/CHANGELOG/#660","title":"6.6.0","text":"<ul> <li>[New] Add support for iso-8859-1, utf8 \"sentinel\" and numeric entities (#268)</li> <li>[New] move two-value combine to a <code>utils</code> function (#189)</li> <li>[Fix] <code>stringify</code>: fix a crash with <code>strictNullHandling</code> and a custom <code>filter</code>/<code>serializeDate</code> (#279)</li> <li>[Fix] when <code>parseArrays</code> is false, properly handle keys ending in <code>[]</code> (#260)</li> <li>[Fix] <code>stringify</code>: do not crash in an obscure combo of <code>interpretNumericEntities</code>, a bad custom <code>decoder</code>, &amp; <code>iso-8859-1</code></li> <li>[Fix] <code>utils</code>: <code>merge</code>: fix crash when <code>source</code> is a truthy primitive &amp; no options are provided</li> <li>[refactor] <code>stringify</code>: Avoid arr = arr.concat(...), push to the existing instance (#269)</li> <li>[Refactor] <code>parse</code>: only need to reassign the var once</li> <li>[Refactor] <code>parse</code>/<code>stringify</code>: clean up <code>charset</code> options checking; fix defaults</li> <li>[Refactor] add missing defaults</li> <li>[Refactor] <code>parse</code>: one less <code>concat</code> call</li> <li>[Refactor] <code>utils</code>: <code>compactQueue</code>: make it explicitly side-effecting</li> <li>[Dev Deps] update <code>browserify</code>, <code>eslint</code>, <code>@ljharb/eslint-config</code>, <code>iconv-lite</code>, <code>safe-publish-latest</code>, <code>tape</code></li> <li>[Tests] up to <code>node</code> <code>v10.10</code>, <code>v9.11</code>, <code>v8.12</code>, <code>v6.14</code>, <code>v4.9</code>; pin included builds to LTS</li> </ul>"},{"location":"ejemplos/servidor/node_modules/qs/CHANGELOG/#652","title":"6.5.2","text":"<ul> <li>[Fix] use <code>safer-buffer</code> instead of <code>Buffer</code> constructor</li> <li>[Refactor] utils: <code>module.exports</code> one thing, instead of mutating <code>exports</code> (#230)</li> <li>[Dev Deps] update <code>browserify</code>, <code>eslint</code>, <code>iconv-lite</code>, <code>safer-buffer</code>, <code>tape</code>, <code>browserify</code></li> </ul>"},{"location":"ejemplos/servidor/node_modules/qs/CHANGELOG/#651","title":"6.5.1","text":"<ul> <li>[Fix] Fix parsing &amp; compacting very deep objects (#224)</li> <li>[Refactor] name utils functions</li> <li>[Dev Deps] update <code>eslint</code>, <code>@ljharb/eslint-config</code>, <code>tape</code></li> <li>[Tests] up to <code>node</code> <code>v8.4</code>; use <code>nvm install-latest-npm</code> so newer npm doesn\u2019t break older node</li> <li>[Tests] Use precise dist for Node.js 0.6 runtime (#225)</li> <li>[Tests] make 0.6 required, now that it\u2019s passing</li> <li>[Tests] on <code>node</code> <code>v8.2</code>; fix npm on node 0.6</li> </ul>"},{"location":"ejemplos/servidor/node_modules/qs/CHANGELOG/#650","title":"6.5.0","text":"<ul> <li>[New] add <code>utils.assign</code></li> <li>[New] pass default encoder/decoder to custom encoder/decoder functions (#206)</li> <li>[New] <code>parse</code>/<code>stringify</code>: add <code>ignoreQueryPrefix</code>/<code>addQueryPrefix</code> options, respectively (#213)</li> <li>[Fix] Handle stringifying empty objects with addQueryPrefix (#217)</li> <li>[Fix] do not mutate <code>options</code> argument (#207)</li> <li>[Refactor] <code>parse</code>: cache index to reuse in else statement (#182)</li> <li>[Docs] add various badges to readme (#208)</li> <li>[Dev Deps] update <code>eslint</code>, <code>browserify</code>, <code>iconv-lite</code>, <code>tape</code></li> <li>[Tests] up to <code>node</code> <code>v8.1</code>, <code>v7.10</code>, <code>v6.11</code>; npm v4.6 breaks on node &lt; v1; npm v5+ breaks on node &lt; v4</li> <li>[Tests] add <code>editorconfig-tools</code></li> </ul>"},{"location":"ejemplos/servidor/node_modules/qs/CHANGELOG/#640","title":"6.4.0","text":"<ul> <li>[New] <code>qs.stringify</code>: add <code>encodeValuesOnly</code> option</li> <li>[Fix] follow <code>allowPrototypes</code> option during merge (#201, #201)</li> <li>[Fix] support keys starting with brackets (#202, #200)</li> <li>[Fix] chmod a-x</li> <li>[Dev Deps] update <code>eslint</code></li> <li>[Tests] up to <code>node</code> <code>v7.7</code>, <code>v6.10</code>,<code>v4.8</code>; disable osx builds since they block linux builds</li> <li>[eslint] reduce warnings</li> </ul>"},{"location":"ejemplos/servidor/node_modules/qs/CHANGELOG/#632","title":"6.3.2","text":"<ul> <li>[Fix] follow <code>allowPrototypes</code> option during merge (#201, #200)</li> <li>[Dev Deps] update <code>eslint</code></li> <li>[Fix] chmod a-x</li> <li>[Fix] support keys starting with brackets (#202, #200)</li> <li>[Tests] up to <code>node</code> <code>v7.7</code>, <code>v6.10</code>,<code>v4.8</code>; disable osx builds since they block linux builds</li> </ul>"},{"location":"ejemplos/servidor/node_modules/qs/CHANGELOG/#631","title":"6.3.1","text":"<ul> <li>[Fix] ensure that <code>allowPrototypes: false</code> does not ever shadow Object.prototype properties (thanks, @snyk!)</li> <li>[Dev Deps] update <code>eslint</code>, <code>@ljharb/eslint-config</code>, <code>browserify</code>, <code>iconv-lite</code>, <code>qs-iconv</code>, <code>tape</code></li> <li>[Tests] on all node minors; improve test matrix</li> <li>[Docs] document stringify option <code>allowDots</code> (#195)</li> <li>[Docs] add empty object and array values example (#195)</li> <li>[Docs] Fix minor inconsistency/typo (#192)</li> <li>[Docs] document stringify option <code>sort</code> (#191)</li> <li>[Refactor] <code>stringify</code>: throw faster with an invalid encoder</li> <li>[Refactor] remove unnecessary escapes (#184)</li> <li>Remove contributing.md, since <code>qs</code> is no longer part of <code>hapi</code> (#183)</li> </ul>"},{"location":"ejemplos/servidor/node_modules/qs/CHANGELOG/#630","title":"6.3.0","text":"<ul> <li>[New] Add support for RFC 1738 (#174, #173)</li> <li>[New] <code>stringify</code>: Add <code>serializeDate</code> option to customize Date serialization (#159)</li> <li>[Fix] ensure <code>utils.merge</code> handles merging two arrays</li> <li>[Refactor] only constructors should be capitalized</li> <li>[Refactor] capitalized var names are for constructors only</li> <li>[Refactor] avoid using a sparse array</li> <li>[Robustness] <code>formats</code>: cache <code>String#replace</code></li> <li>[Dev Deps] update <code>browserify</code>, <code>eslint</code>, <code>@ljharb/eslint-config</code>; add <code>safe-publish-latest</code></li> <li>[Tests] up to <code>node</code> <code>v6.8</code>, <code>v4.6</code>; improve test matrix</li> <li>[Tests] flesh out arrayLimit/arrayFormat tests (#107)</li> <li>[Tests] skip Object.create tests when null objects are not available</li> <li>[Tests] Turn on eslint for test files (#175)</li> </ul>"},{"location":"ejemplos/servidor/node_modules/qs/CHANGELOG/#623","title":"6.2.3","text":"<ul> <li>[Fix] follow <code>allowPrototypes</code> option during merge (#201, #200)</li> <li>[Fix] chmod a-x</li> <li>[Fix] support keys starting with brackets (#202, #200)</li> <li>[Tests] up to <code>node</code> <code>v7.7</code>, <code>v6.10</code>,<code>v4.8</code>; disable osx builds since they block linux builds</li> </ul>"},{"location":"ejemplos/servidor/node_modules/qs/CHANGELOG/#622","title":"6.2.2","text":"<ul> <li>[Fix] ensure that <code>allowPrototypes: false</code> does not ever shadow Object.prototype properties</li> </ul>"},{"location":"ejemplos/servidor/node_modules/qs/CHANGELOG/#621","title":"6.2.1","text":"<ul> <li>[Fix] ensure <code>key[]=x&amp;key[]&amp;key[]=y</code> results in 3, not 2, values</li> <li>[Refactor] Be explicit and use <code>Object.prototype.hasOwnProperty.call</code></li> <li>[Tests] remove <code>parallelshell</code> since it does not reliably report failures</li> <li>[Tests] up to <code>node</code> <code>v6.3</code>, <code>v5.12</code></li> <li>[Dev Deps] update <code>tape</code>, <code>eslint</code>, <code>@ljharb/eslint-config</code>, <code>qs-iconv</code></li> </ul>"},{"location":"ejemplos/servidor/node_modules/qs/CHANGELOG/#620","title":"6.2.0","text":"<ul> <li>[New] pass Buffers to the encoder/decoder directly (#161)</li> <li>[New] add \"encoder\" and \"decoder\" options, for custom param encoding/decoding (#160)</li> <li>[Fix] fix compacting of nested sparse arrays (#150)</li> </ul>"},{"location":"ejemplos/servidor/node_modules/qs/CHANGELOG/#612","title":"**6.1.2","text":"<ul> <li>[Fix] follow <code>allowPrototypes</code> option during merge (#201, #200)</li> <li>[Fix] chmod a-x</li> <li>[Fix] support keys starting with brackets (#202, #200)</li> <li>[Tests] up to <code>node</code> <code>v7.7</code>, <code>v6.10</code>,<code>v4.8</code>; disable osx builds since they block linux builds</li> </ul>"},{"location":"ejemplos/servidor/node_modules/qs/CHANGELOG/#611","title":"6.1.1","text":"<ul> <li>[Fix] ensure that <code>allowPrototypes: false</code> does not ever shadow Object.prototype properties</li> </ul>"},{"location":"ejemplos/servidor/node_modules/qs/CHANGELOG/#610","title":"6.1.0","text":"<ul> <li>[New] allowDots option for <code>stringify</code> (#151)</li> <li>[Fix] \"sort\" option should work at a depth of 3 or more (#151)</li> <li>[Fix] Restore <code>dist</code> directory; will be removed in v7 (#148)</li> </ul>"},{"location":"ejemplos/servidor/node_modules/qs/CHANGELOG/#604","title":"6.0.4","text":"<ul> <li>[Fix] follow <code>allowPrototypes</code> option during merge (#201, #200)</li> <li>[Fix] chmod a-x</li> <li>[Fix] support keys starting with brackets (#202, #200)</li> <li>[Tests] up to <code>node</code> <code>v7.7</code>, <code>v6.10</code>,<code>v4.8</code>; disable osx builds since they block linux builds</li> </ul>"},{"location":"ejemplos/servidor/node_modules/qs/CHANGELOG/#603","title":"6.0.3","text":"<ul> <li>[Fix] ensure that <code>allowPrototypes: false</code> does not ever shadow Object.prototype properties</li> <li>[Fix] Restore <code>dist</code> directory; will be removed in v7 (#148)</li> </ul>"},{"location":"ejemplos/servidor/node_modules/qs/CHANGELOG/#602","title":"6.0.2","text":"<ul> <li>Revert ES6 requirement and restore support for node down to v0.8.</li> </ul>"},{"location":"ejemplos/servidor/node_modules/qs/CHANGELOG/#601","title":"6.0.1","text":"<ul> <li>#127 Fix engines definition in package.json</li> </ul>"},{"location":"ejemplos/servidor/node_modules/qs/CHANGELOG/#600","title":"6.0.0","text":"<ul> <li>#124 Use ES6 and drop support for node &lt; v4</li> </ul>"},{"location":"ejemplos/servidor/node_modules/qs/CHANGELOG/#521","title":"5.2.1","text":"<ul> <li>[Fix] ensure <code>key[]=x&amp;key[]&amp;key[]=y</code> results in 3, not 2, values</li> </ul>"},{"location":"ejemplos/servidor/node_modules/qs/CHANGELOG/#520","title":"5.2.0","text":"<ul> <li>#64 Add option to sort object keys in the query string</li> </ul>"},{"location":"ejemplos/servidor/node_modules/qs/CHANGELOG/#510","title":"5.1.0","text":"<ul> <li>#117 make URI encoding stringified results optional</li> <li>#106 Add flag <code>skipNulls</code> to optionally skip null values in stringify</li> </ul>"},{"location":"ejemplos/servidor/node_modules/qs/CHANGELOG/#500","title":"5.0.0","text":"<ul> <li>#114 default allowDots to false</li> <li>#100 include dist to npm</li> </ul>"},{"location":"ejemplos/servidor/node_modules/qs/CHANGELOG/#400","title":"4.0.0","text":"<ul> <li>#98 make returning plain objects and allowing prototype overwriting properties optional</li> </ul>"},{"location":"ejemplos/servidor/node_modules/qs/CHANGELOG/#310","title":"3.1.0","text":"<ul> <li>#89 Add option to disable \"Transform dot notation to bracket notation\"</li> </ul>"},{"location":"ejemplos/servidor/node_modules/qs/CHANGELOG/#300","title":"3.0.0","text":"<ul> <li>#80 qs.parse silently drops properties</li> <li>#77 Perf boost</li> <li>#60 Add explicit option to disable array parsing</li> <li>#74 Bad parse when turning array into object</li> <li>#81 Add a <code>filter</code> option</li> <li>#68 Fixed issue with recursion and passing strings into objects.</li> <li>#66 Add mixed array and object dot notation support Closes: #47</li> <li>#76 RFC 3986</li> <li>#85 No equal sign</li> <li>#84 update license attribute</li> </ul>"},{"location":"ejemplos/servidor/node_modules/qs/CHANGELOG/#241","title":"2.4.1","text":"<ul> <li>#73 Property 'hasOwnProperty' of object #"},{"location":"ejemplos/servidor/node_modules/qs/CHANGELOG/#240","title":"CHANGELOG","text":""},{"location":"ejemplos/servidor/node_modules/qs/CHANGELOG/#233","title":"CHANGELOG","text":""},{"location":"ejemplos/servidor/node_modules/qs/CHANGELOG/#232","title":"CHANGELOG","text":""},{"location":"ejemplos/servidor/node_modules/qs/CHANGELOG/#231","title":"CHANGELOG","text":""},{"location":"ejemplos/servidor/node_modules/qs/CHANGELOG/#230","title":"CHANGELOG","text":""},{"location":"ejemplos/servidor/node_modules/qs/CHANGELOG/#225","title":"CHANGELOG","text":""},{"location":"ejemplos/servidor/node_modules/qs/CHANGELOG/#224","title":"CHANGELOG","text":""},{"location":"ejemplos/servidor/node_modules/qs/CHANGELOG/#223","title":"CHANGELOG","text":""},{"location":"ejemplos/servidor/node_modules/qs/CHANGELOG/#222","title":"CHANGELOG","text":""},{"location":"ejemplos/servidor/node_modules/qs/CHANGELOG/#221","title":"CHANGELOG","text":""},{"location":"ejemplos/servidor/node_modules/qs/CHANGELOG/#220","title":"CHANGELOG","text":""},{"location":"ejemplos/servidor/node_modules/qs/CHANGELOG/#210","title":"CHANGELOG","text":""},{"location":"ejemplos/servidor/node_modules/qs/CHANGELOG/#200","title":"CHANGELOG","text":""},{"location":"ejemplos/servidor/node_modules/qs/CHANGELOG/#122","title":"CHANGELOG","text":""},{"location":"ejemplos/servidor/node_modules/qs/CHANGELOG/#121","title":"CHANGELOG","text":""},{"location":"ejemplos/servidor/node_modules/qs/CHANGELOG/#120","title":"CHANGELOG","text":""},{"location":"ejemplos/servidor/node_modules/qs/CHANGELOG/#110","title":"CHANGELOG","text":""},{"location":"ejemplos/servidor/node_modules/qs/CHANGELOG/#102","title":"CHANGELOG","text":""},{"location":"ejemplos/servidor/node_modules/range-parser/","title":"range-parser","text":"<p>Range header field parser.</p>"},{"location":"ejemplos/servidor/node_modules/range-parser/#installation","title":"Installation","text":"<p>This is a Node.js module available through the npm registry. Installation is done using the <code>npm install</code> command:</p> <pre><code>$ npm install range-parser\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/range-parser/#api","title":"API","text":"<pre><code>var parseRange = require('range-parser')\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/range-parser/#parserangesize-header-options","title":"parseRange(size, header, options)","text":"<p>Parse the given <code>header</code> string where <code>size</code> is the maximum size of the resource. An array of ranges will be returned or negative numbers indicating an error parsing.</p> <ul> <li><code>-2</code> signals a malformed header string</li> <li><code>-1</code> signals an unsatisfiable range</li> </ul> <pre><code>// parse header from request\nvar range = parseRange(size, req.headers.range)\n\n// the type of the range\nif (range.type === 'bytes') {\n  // the ranges\n  range.forEach(function (r) {\n    // do something with r.start and r.end\n  })\n}\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/range-parser/#options","title":"Options","text":"<p>These properties are accepted in the options object.</p>"},{"location":"ejemplos/servidor/node_modules/range-parser/#combine","title":"combine","text":"<p>Specifies if overlapping &amp; adjacent ranges should be combined, defaults to <code>false</code>. When <code>true</code>, ranges will be combined and returned as if they were specified that way in the header.</p> <pre><code>parseRange(100, 'bytes=50-55,0-10,5-10,56-60', { combine: true })\n// =&gt; [\n//      { start: 0,  end: 10 },\n//      { start: 50, end: 60 }\n//    ]\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/range-parser/#license","title":"License","text":"<p>MIT</p>"},{"location":"ejemplos/servidor/node_modules/range-parser/HISTORY/","title":"1.2.1 / 2019-05-10","text":"<ul> <li>Improve error when <code>str</code> is not a string</li> </ul>"},{"location":"ejemplos/servidor/node_modules/range-parser/HISTORY/#120-2016-06-01","title":"1.2.0 / 2016-06-01","text":"<ul> <li>Add <code>combine</code> option to combine overlapping ranges</li> </ul>"},{"location":"ejemplos/servidor/node_modules/range-parser/HISTORY/#110-2016-05-13","title":"1.1.0 / 2016-05-13","text":"<ul> <li>Fix incorrectly returning -1 when there is at least one valid range</li> <li>perf: remove internal function</li> </ul>"},{"location":"ejemplos/servidor/node_modules/range-parser/HISTORY/#103-2015-10-29","title":"1.0.3 / 2015-10-29","text":"<ul> <li>perf: enable strict mode</li> </ul>"},{"location":"ejemplos/servidor/node_modules/range-parser/HISTORY/#102-2014-09-08","title":"1.0.2 / 2014-09-08","text":"<ul> <li>Support Node.js 0.6</li> </ul>"},{"location":"ejemplos/servidor/node_modules/range-parser/HISTORY/#101-2014-09-07","title":"1.0.1 / 2014-09-07","text":"<ul> <li>Move repository to jshttp</li> </ul>"},{"location":"ejemplos/servidor/node_modules/range-parser/HISTORY/#100-2013-12-11","title":"1.0.0 / 2013-12-11","text":"<ul> <li>Add repository to package.json</li> <li>Add MIT license</li> </ul>"},{"location":"ejemplos/servidor/node_modules/range-parser/HISTORY/#004-2012-06-17","title":"0.0.4 / 2012-06-17","text":"<ul> <li>Change ret -1 for unsatisfiable and -2 when invalid</li> </ul>"},{"location":"ejemplos/servidor/node_modules/range-parser/HISTORY/#003-2012-06-17","title":"0.0.3 / 2012-06-17","text":"<ul> <li>Fix last-byte-pos default to len - 1</li> </ul>"},{"location":"ejemplos/servidor/node_modules/range-parser/HISTORY/#002-2012-06-14","title":"0.0.2 / 2012-06-14","text":"<ul> <li>Add <code>.type</code></li> </ul>"},{"location":"ejemplos/servidor/node_modules/range-parser/HISTORY/#001-2012-06-11","title":"0.0.1 / 2012-06-11","text":"<ul> <li>Initial release</li> </ul>"},{"location":"ejemplos/servidor/node_modules/raw-body/","title":"raw-body","text":"<p>Gets the entire buffer of a stream either as a <code>Buffer</code> or a string. Validates the stream's length against an expected length and maximum limit. Ideal for parsing request bodies.</p>"},{"location":"ejemplos/servidor/node_modules/raw-body/#install","title":"Install","text":"<p>This is a Node.js module available through the npm registry. Installation is done using the <code>npm install</code> command:</p> <pre><code>$ npm install raw-body\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/raw-body/#typescript","title":"TypeScript","text":"<p>This module includes a TypeScript declaration file to enable auto complete in compatible editors and type information for TypeScript projects. This module depends on the Node.js types, so install <code>@types/node</code>:</p> <pre><code>$ npm install @types/node\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/raw-body/#api","title":"API","text":"<pre><code>var getRawBody = require('raw-body')\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/raw-body/#getrawbodystream-options-callback","title":"getRawBody(stream, [options], [callback])","text":"<p>Returns a promise if no callback specified and global <code>Promise</code> exists.</p> <p>Options:</p> <ul> <li><code>length</code> - The length of the stream.   If the contents of the stream do not add up to this length,   an <code>400</code> error code is returned.</li> <li><code>limit</code> - The byte limit of the body.   This is the number of bytes or any string format supported by   bytes,   for example <code>1000</code>, <code>'500kb'</code> or <code>'3mb'</code>.   If the body ends up being larger than this limit,   a <code>413</code> error code is returned.</li> <li><code>encoding</code> - The encoding to use to decode the body into a string.   By default, a <code>Buffer</code> instance will be returned when no encoding is specified.   Most likely, you want <code>utf-8</code>, so setting <code>encoding</code> to <code>true</code> will decode as <code>utf-8</code>.   You can use any type of encoding supported by iconv-lite.</li> </ul> <p>You can also pass a string in place of options to just specify the encoding.</p> <p>If an error occurs, the stream will be paused, everything unpiped, and you are responsible for correctly disposing the stream. For HTTP requests, no handling is required if you send a response. For streams that use file descriptors, you should <code>stream.destroy()</code> or <code>stream.close()</code> to prevent leaks.</p>"},{"location":"ejemplos/servidor/node_modules/raw-body/#errors","title":"Errors","text":"<p>This module creates errors depending on the error condition during reading. The error may be an error from the underlying Node.js implementation, but is otherwise an error created by this module, which has the following attributes:</p> <ul> <li><code>limit</code> - the limit in bytes</li> <li><code>length</code> and <code>expected</code> - the expected length of the stream</li> <li><code>received</code> - the received bytes</li> <li><code>encoding</code> - the invalid encoding</li> <li><code>status</code> and <code>statusCode</code> - the corresponding status code for the error</li> <li><code>type</code> - the error type</li> </ul>"},{"location":"ejemplos/servidor/node_modules/raw-body/#types","title":"Types","text":"<p>The errors from this module have a <code>type</code> property which allows for the progamatic determination of the type of error returned.</p>"},{"location":"ejemplos/servidor/node_modules/raw-body/#encodingunsupported","title":"encoding.unsupported","text":"<p>This error will occur when the <code>encoding</code> option is specified, but the value does not map to an encoding supported by the iconv-lite module.</p>"},{"location":"ejemplos/servidor/node_modules/raw-body/#entitytoolarge","title":"entity.too.large","text":"<p>This error will occur when the <code>limit</code> option is specified, but the stream has an entity that is larger.</p>"},{"location":"ejemplos/servidor/node_modules/raw-body/#requestaborted","title":"request.aborted","text":"<p>This error will occur when the request stream is aborted by the client before reading the body has finished.</p>"},{"location":"ejemplos/servidor/node_modules/raw-body/#requestsizeinvalid","title":"request.size.invalid","text":"<p>This error will occur when the <code>length</code> option is specified, but the stream has emitted more bytes.</p>"},{"location":"ejemplos/servidor/node_modules/raw-body/#streamencodingset","title":"stream.encoding.set","text":"<p>This error will occur when the given stream has an encoding set on it, making it a decoded stream. The stream should not have an encoding set and is expected to emit <code>Buffer</code> objects.</p>"},{"location":"ejemplos/servidor/node_modules/raw-body/#examples","title":"Examples","text":""},{"location":"ejemplos/servidor/node_modules/raw-body/#simple-express-example","title":"Simple Express example","text":"<pre><code>var contentType = require('content-type')\nvar express = require('express')\nvar getRawBody = require('raw-body')\n\nvar app = express()\n\napp.use(function (req, res, next) {\n  getRawBody(req, {\n    length: req.headers['content-length'],\n    limit: '1mb',\n    encoding: contentType.parse(req).parameters.charset\n  }, function (err, string) {\n    if (err) return next(err)\n    req.text = string\n    next()\n  })\n})\n\n// now access req.text\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/raw-body/#simple-koa-example","title":"Simple Koa example","text":"<pre><code>var contentType = require('content-type')\nvar getRawBody = require('raw-body')\nvar koa = require('koa')\n\nvar app = koa()\n\napp.use(function * (next) {\n  this.text = yield getRawBody(this.req, {\n    length: this.req.headers['content-length'],\n    limit: '1mb',\n    encoding: contentType.parse(this.req).parameters.charset\n  })\n  yield next\n})\n\n// now access this.text\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/raw-body/#using-as-a-promise","title":"Using as a promise","text":"<p>To use this library as a promise, simply omit the <code>callback</code> and a promise is returned, provided that a global <code>Promise</code> is defined.</p> <pre><code>var getRawBody = require('raw-body')\nvar http = require('http')\n\nvar server = http.createServer(function (req, res) {\n  getRawBody(req)\n    .then(function (buf) {\n      res.statusCode = 200\n      res.end(buf.length + ' bytes submitted')\n    })\n    .catch(function (err) {\n      res.statusCode = 500\n      res.end(err.message)\n    })\n})\n\nserver.listen(3000)\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/raw-body/#using-with-typescript","title":"Using with TypeScript","text":"<pre><code>import * as getRawBody from 'raw-body';\nimport * as http from 'http';\n\nconst server = http.createServer((req, res) =&gt; {\n  getRawBody(req)\n  .then((buf) =&gt; {\n    res.statusCode = 200;\n    res.end(buf.length + ' bytes submitted');\n  })\n  .catch((err) =&gt; {\n    res.statusCode = err.statusCode;\n    res.end(err.message);\n  });\n});\n\nserver.listen(3000);\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/raw-body/#license","title":"License","text":"<p>MIT</p>"},{"location":"ejemplos/servidor/node_modules/raw-body/HISTORY/","title":"2.4.0 / 2019-04-17","text":"<ul> <li>deps: bytes@3.1.0<ul> <li>Add petabyte (<code>pb</code>) support</li> </ul> </li> <li>deps: http-errors@1.7.2<ul> <li>Set constructor name when possible</li> <li>deps: setprototypeof@1.1.1</li> <li>deps: statuses@'&gt;= 1.5.0 &lt; 2'</li> </ul> </li> <li>deps: iconv-lite@0.4.24<ul> <li>Added encoding MIK</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/raw-body/HISTORY/#233-2018-05-08","title":"2.3.3 / 2018-05-08","text":"<ul> <li>deps: http-errors@1.6.3<ul> <li>deps: depd@~1.1.2</li> <li>deps: setprototypeof@1.1.0</li> <li>deps: statuses@'&gt;= 1.3.1 &lt; 2'</li> </ul> </li> <li>deps: iconv-lite@0.4.23<ul> <li>Fix loading encoding with year appended</li> <li>Fix deprecation warnings on Node.js 10+</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/raw-body/HISTORY/#232-2017-09-09","title":"2.3.2 / 2017-09-09","text":"<ul> <li>deps: iconv-lite@0.4.19<ul> <li>Fix ISO-8859-1 regression</li> <li>Update Windows-1255</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/raw-body/HISTORY/#231-2017-09-07","title":"2.3.1 / 2017-09-07","text":"<ul> <li>deps: bytes@3.0.0</li> <li>deps: http-errors@1.6.2<ul> <li>deps: depd@1.1.1</li> </ul> </li> <li>perf: skip buffer decoding on overage chunk</li> </ul>"},{"location":"ejemplos/servidor/node_modules/raw-body/HISTORY/#230-2017-08-04","title":"2.3.0 / 2017-08-04","text":"<ul> <li>Add TypeScript definitions</li> <li>Use <code>http-errors</code> for standard emitted errors</li> <li>deps: bytes@2.5.0</li> <li>deps: iconv-lite@0.4.18<ul> <li>Add support for React Native</li> <li>Add a warning if not loaded as utf-8</li> <li>Fix CESU-8 decoding in Node.js 8</li> <li>Improve speed of ISO-8859-1 encoding</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/raw-body/HISTORY/#220-2017-01-02","title":"2.2.0 / 2017-01-02","text":"<ul> <li>deps: iconv-lite@0.4.15<ul> <li>Added encoding MS-31J</li> <li>Added encoding MS-932</li> <li>Added encoding MS-936</li> <li>Added encoding MS-949</li> <li>Added encoding MS-950</li> <li>Fix GBK/GB18030 handling of Euro character</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/raw-body/HISTORY/#217-2016-06-19","title":"2.1.7 / 2016-06-19","text":"<ul> <li>deps: bytes@2.4.0</li> <li>perf: remove double-cleanup on happy path</li> </ul>"},{"location":"ejemplos/servidor/node_modules/raw-body/HISTORY/#216-2016-03-07","title":"2.1.6 / 2016-03-07","text":"<ul> <li>deps: bytes@2.3.0<ul> <li>Drop partial bytes on all parsed units</li> <li>Fix parsing byte string that looks like hex</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/raw-body/HISTORY/#215-2015-11-30","title":"2.1.5 / 2015-11-30","text":"<ul> <li>deps: bytes@2.2.0</li> <li>deps: iconv-lite@0.4.13</li> </ul>"},{"location":"ejemplos/servidor/node_modules/raw-body/HISTORY/#214-2015-09-27","title":"2.1.4 / 2015-09-27","text":"<ul> <li>Fix masking critical errors from <code>iconv-lite</code></li> <li>deps: iconv-lite@0.4.12<ul> <li>Fix CESU-8 decoding in Node.js 4.x</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/raw-body/HISTORY/#213-2015-09-12","title":"2.1.3 / 2015-09-12","text":"<ul> <li>Fix sync callback when attaching data listener causes sync read<ul> <li>Node.js 0.10 compatibility issue</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/raw-body/HISTORY/#212-2015-07-05","title":"2.1.2 / 2015-07-05","text":"<ul> <li>Fix error stack traces to skip <code>makeError</code></li> <li>deps: iconv-lite@0.4.11<ul> <li>Add encoding CESU-8</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/raw-body/HISTORY/#211-2015-06-14","title":"2.1.1 / 2015-06-14","text":"<ul> <li>Use <code>unpipe</code> module for unpiping requests</li> </ul>"},{"location":"ejemplos/servidor/node_modules/raw-body/HISTORY/#210-2015-05-28","title":"2.1.0 / 2015-05-28","text":"<ul> <li>deps: iconv-lite@0.4.10<ul> <li>Improved UTF-16 endianness detection</li> <li>Leading BOM is now removed when decoding</li> <li>The encoding UTF-16 without BOM now defaults to UTF-16LE when detection fails</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/raw-body/HISTORY/#202-2015-05-21","title":"2.0.2 / 2015-05-21","text":"<ul> <li>deps: bytes@2.1.0<ul> <li>Slight optimizations</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/raw-body/HISTORY/#201-2015-05-10","title":"2.0.1 / 2015-05-10","text":"<ul> <li>Fix a false-positive when unpiping in Node.js 0.8</li> </ul>"},{"location":"ejemplos/servidor/node_modules/raw-body/HISTORY/#200-2015-05-08","title":"2.0.0 / 2015-05-08","text":"<ul> <li>Return a promise without callback instead of thunk</li> <li>deps: bytes@2.0.1<ul> <li>units no longer case sensitive when parsing</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/raw-body/HISTORY/#134-2015-04-15","title":"1.3.4 / 2015-04-15","text":"<ul> <li>Fix hanging callback if request aborts during read</li> <li>deps: iconv-lite@0.4.8<ul> <li>Add encoding alias UNICODE-1-1-UTF-7</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/raw-body/HISTORY/#133-2015-02-08","title":"1.3.3 / 2015-02-08","text":"<ul> <li>deps: iconv-lite@0.4.7<ul> <li>Gracefully support enumerables on <code>Object.prototype</code></li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/raw-body/HISTORY/#132-2015-01-20","title":"1.3.2 / 2015-01-20","text":"<ul> <li>deps: iconv-lite@0.4.6<ul> <li>Fix rare aliases of single-byte encodings</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/raw-body/HISTORY/#131-2014-11-21","title":"1.3.1 / 2014-11-21","text":"<ul> <li>deps: iconv-lite@0.4.5<ul> <li>Fix Windows-31J and X-SJIS encoding support</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/raw-body/HISTORY/#130-2014-07-20","title":"1.3.0 / 2014-07-20","text":"<ul> <li>Fully unpipe the stream on error<ul> <li>Fixes <code>Cannot switch to old mode now</code> error on Node.js 0.10+</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/raw-body/HISTORY/#123-2014-07-20","title":"1.2.3 / 2014-07-20","text":"<ul> <li>deps: iconv-lite@0.4.4<ul> <li>Added encoding UTF-7</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/raw-body/HISTORY/#122-2014-06-19","title":"1.2.2 / 2014-06-19","text":"<ul> <li>Send invalid encoding error to callback</li> </ul>"},{"location":"ejemplos/servidor/node_modules/raw-body/HISTORY/#121-2014-06-15","title":"1.2.1 / 2014-06-15","text":"<ul> <li>deps: iconv-lite@0.4.3<ul> <li>Added encodings UTF-16BE and UTF-16 with BOM</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/raw-body/HISTORY/#120-2014-06-13","title":"1.2.0 / 2014-06-13","text":"<ul> <li>Passing string as <code>options</code> interpreted as encoding</li> <li>Support all encodings from <code>iconv-lite</code></li> </ul>"},{"location":"ejemplos/servidor/node_modules/raw-body/HISTORY/#117-2014-06-12","title":"1.1.7 / 2014-06-12","text":"<ul> <li>use <code>string_decoder</code> module from npm</li> </ul>"},{"location":"ejemplos/servidor/node_modules/raw-body/HISTORY/#116-2014-05-27","title":"1.1.6 / 2014-05-27","text":"<ul> <li>check encoding for old streams1</li> <li>support node.js &lt; 0.10.6</li> </ul>"},{"location":"ejemplos/servidor/node_modules/raw-body/HISTORY/#115-2014-05-14","title":"1.1.5 / 2014-05-14","text":"<ul> <li>bump bytes</li> </ul>"},{"location":"ejemplos/servidor/node_modules/raw-body/HISTORY/#114-2014-04-19","title":"1.1.4 / 2014-04-19","text":"<ul> <li>allow true as an option</li> <li>bump bytes</li> </ul>"},{"location":"ejemplos/servidor/node_modules/raw-body/HISTORY/#113-2014-03-02","title":"1.1.3 / 2014-03-02","text":"<ul> <li>fix case when length=null</li> </ul>"},{"location":"ejemplos/servidor/node_modules/raw-body/HISTORY/#112-2013-12-01","title":"1.1.2 / 2013-12-01","text":"<ul> <li>be less strict on state.encoding check</li> </ul>"},{"location":"ejemplos/servidor/node_modules/raw-body/HISTORY/#111-2013-11-27","title":"1.1.1 / 2013-11-27","text":"<ul> <li>add engines</li> </ul>"},{"location":"ejemplos/servidor/node_modules/raw-body/HISTORY/#110-2013-11-27","title":"1.1.0 / 2013-11-27","text":"<ul> <li>add err.statusCode and err.type</li> <li>allow for encoding option to be true</li> <li>pause the stream instead of dumping on error</li> <li>throw if the stream's encoding is set</li> </ul>"},{"location":"ejemplos/servidor/node_modules/raw-body/HISTORY/#101-2013-11-19","title":"1.0.1 / 2013-11-19","text":"<ul> <li>dont support streams1, throw if dev set encoding</li> </ul>"},{"location":"ejemplos/servidor/node_modules/raw-body/HISTORY/#100-2013-11-17","title":"1.0.0 / 2013-11-17","text":"<ul> <li>rename <code>expected</code> option to <code>length</code></li> </ul>"},{"location":"ejemplos/servidor/node_modules/raw-body/HISTORY/#020-2013-11-15","title":"0.2.0 / 2013-11-15","text":"<ul> <li>republish</li> </ul>"},{"location":"ejemplos/servidor/node_modules/raw-body/HISTORY/#011-2013-11-15","title":"0.1.1 / 2013-11-15","text":"<ul> <li>use bytes</li> </ul>"},{"location":"ejemplos/servidor/node_modules/raw-body/HISTORY/#010-2013-11-11","title":"0.1.0 / 2013-11-11","text":"<ul> <li>generator support</li> </ul>"},{"location":"ejemplos/servidor/node_modules/raw-body/HISTORY/#003-2013-10-10","title":"0.0.3 / 2013-10-10","text":"<ul> <li>update repo</li> </ul>"},{"location":"ejemplos/servidor/node_modules/raw-body/HISTORY/#002-2013-09-14","title":"0.0.2 / 2013-09-14","text":"<ul> <li>dump stream on bad headers</li> <li>listen to events after defining received and buffers</li> </ul>"},{"location":"ejemplos/servidor/node_modules/raw-body/HISTORY/#001-2013-09-14","title":"0.0.1 / 2013-09-14","text":"<ul> <li>Initial release</li> </ul>"},{"location":"ejemplos/servidor/node_modules/readable-stream/","title":"readable-stream","text":"<p>Node.js core streams for userland </p> <p> </p> <p></p> <pre><code>npm install --save readable-stream\n</code></pre> <p>This package is a mirror of the streams implementations in Node.js.</p> <p>Full documentation may be found on the Node.js website.</p> <p>If you want to guarantee a stable streams base, regardless of what version of Node you, or the users of your libraries are using, use readable-stream only and avoid the \"stream\" module in Node-core, for background see this blogpost.</p> <p>As of version 2.0.0 readable-stream uses semantic versioning.</p>"},{"location":"ejemplos/servidor/node_modules/readable-stream/#version-3xx","title":"Version 3.x.x","text":"<p>v3.x.x of <code>readable-stream</code> is a cut from Node 10. This version supports Node 6, 8, and 10, as well as evergreen browsers, IE 11 and latest Safari. The breaking changes introduced by v3 are composed by the combined breaking changes in Node v9 and Node v10, as follows:</p> <ol> <li>Error codes: https://github.com/nodejs/node/pull/13310,    https://github.com/nodejs/node/pull/13291,    https://github.com/nodejs/node/pull/16589,    https://github.com/nodejs/node/pull/15042,    https://github.com/nodejs/node/pull/15665,    https://github.com/nodejs/readable-stream/pull/344</li> <li>'readable' have precedence over flowing    https://github.com/nodejs/node/pull/18994</li> <li>make virtual methods errors consistent    https://github.com/nodejs/node/pull/18813</li> <li>updated streams error handling    https://github.com/nodejs/node/pull/18438</li> <li>writable.end should return this.    https://github.com/nodejs/node/pull/18780</li> <li>readable continues to read when push('')    https://github.com/nodejs/node/pull/18211</li> <li>add custom inspect to BufferList    https://github.com/nodejs/node/pull/17907</li> <li>always defer 'readable' with nextTick    https://github.com/nodejs/node/pull/17979</li> </ol>"},{"location":"ejemplos/servidor/node_modules/readable-stream/#version-2xx","title":"Version 2.x.x","text":"<p>v2.x.x of <code>readable-stream</code> is a cut of the stream module from Node 8 (there have been no semver-major changes from Node 4 to 8). This version supports all Node.js versions from 0.8, as well as evergreen browsers and IE 10 &amp; 11.</p>"},{"location":"ejemplos/servidor/node_modules/readable-stream/#big-thanks","title":"Big Thanks","text":"<p>Cross-browser Testing Platform and Open Source &lt;3 Provided by Sauce Labs</p>"},{"location":"ejemplos/servidor/node_modules/readable-stream/#usage","title":"Usage","text":"<p>You can swap your <code>require('stream')</code> with <code>require('readable-stream')</code> without any changes, if you are just using one of the main classes and functions.</p> <p>```js const {   Readable,   Writable,   Transform,   Duplex,   pipeline,   finished } = require('readable-stream') ````</p> <p>Note that <code>require('stream')</code> will return <code>Stream</code>, while <code>require('readable-stream')</code> will return <code>Readable</code>. We discourage using whatever is exported directly, but rather use one of the properties as shown in the example above.</p>"},{"location":"ejemplos/servidor/node_modules/readable-stream/#streams-working-group","title":"Streams Working Group","text":"<p><code>readable-stream</code> is maintained by the Streams Working Group, which oversees the development and maintenance of the Streams API within Node.js. The responsibilities of the Streams Working Group include:</p> <ul> <li>Addressing stream issues on the Node.js issue tracker.</li> <li>Authoring and editing stream documentation within the Node.js project.</li> <li>Reviewing changes to stream subclasses within the Node.js project.</li> <li>Redirecting changes to streams from the Node.js project to this   project.</li> <li>Assisting in the implementation of stream providers within Node.js.</li> <li>Recommending versions of <code>readable-stream</code> to be included in Node.js.</li> <li>Messaging about the future of streams to give the community advance   notice of changes.</li> </ul> <p></p>"},{"location":"ejemplos/servidor/node_modules/readable-stream/#team-members","title":"Team Members","text":"<ul> <li>Calvin Metcalf (@calvinmetcalf) &lt;calvin.metcalf@gmail.com&gt;</li> <li>Release GPG key: F3EF5F62A87FC27A22E643F714CE4FF5015AA242</li> <li>Mathias Buus (@mafintosh) &lt;mathiasbuus@gmail.com&gt;</li> <li>Matteo Collina (@mcollina) &lt;matteo.collina@gmail.com&gt;</li> <li>Release GPG key: 3ABC01543F22DD2239285CDD818674489FBC127E</li> <li>Irina Shestak (@lrlna) &lt;shestak.irina@gmail.com&gt;</li> <li>Yoshua Wyuts (@yoshuawuyts) &lt;yoshuawuyts@gmail.com&gt;</li> </ul>"},{"location":"ejemplos/servidor/node_modules/readable-stream/CONTRIBUTING/","title":"Developer's Certificate of Origin 1.1","text":"<p>By making a contribution to this project, I certify that:</p> <ul> <li> <p>(a) The contribution was created in whole or in part by me and I   have the right to submit it under the open source license   indicated in the file; or</p> </li> <li> <p>(b) The contribution is based upon previous work that, to the best   of my knowledge, is covered under an appropriate open source   license and I have the right under that license to submit that   work with modifications, whether created in whole or in part   by me, under the same open source license (unless I am   permitted to submit under a different license), as indicated   in the file; or</p> </li> <li> <p>(c) The contribution was provided directly to me by some other   person who certified (a), (b) or (c) and I have not modified   it.</p> </li> <li> <p>(d) I understand and agree that this project and the contribution   are public and that a record of the contribution (including all   personal information I submit with it, including my sign-off) is   maintained indefinitely and may be redistributed consistent with   this project or the open source license(s) involved.</p> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/readable-stream/CONTRIBUTING/#moderation-policy","title":"Moderation Policy","text":"<p>The Node.js Moderation Policy applies to this WG.</p>"},{"location":"ejemplos/servidor/node_modules/readable-stream/CONTRIBUTING/#code-of-conduct","title":"Code of Conduct","text":"<p>The Node.js Code of Conduct applies to this WG.</p>"},{"location":"ejemplos/servidor/node_modules/readable-stream/GOVERNANCE/","title":"GOVERNANCE","text":""},{"location":"ejemplos/servidor/node_modules/readable-stream/GOVERNANCE/#streams-working-group","title":"Streams Working Group","text":"<p>The Node.js Streams is jointly governed by a Working Group (WG) that is responsible for high-level guidance of the project.</p> <p>The WG has final authority over this project including:</p> <ul> <li>Technical direction</li> <li>Project governance and process (including this policy)</li> <li>Contribution policy</li> <li>GitHub repository hosting</li> <li>Conduct guidelines</li> <li>Maintaining the list of additional Collaborators</li> </ul> <p>For the current list of WG members, see the project README.md.</p>"},{"location":"ejemplos/servidor/node_modules/readable-stream/GOVERNANCE/#collaborators","title":"Collaborators","text":"<p>The readable-stream GitHub repository is maintained by the WG and additional Collaborators who are added by the WG on an ongoing basis.</p> <p>Individuals making significant and valuable contributions are made Collaborators and given commit-access to the project. These individuals are identified by the WG and their addition as Collaborators is discussed during the WG meeting.</p> <p>Note: If you make a significant contribution and are not considered for commit-access log an issue or contact a WG member directly and it will be brought up in the next WG meeting.</p> <p>Modifications of the contents of the readable-stream repository are made on a collaborative basis. Anybody with a GitHub account may propose a modification via pull request and it will be considered by the project Collaborators. All pull requests must be reviewed and accepted by a Collaborator with sufficient expertise who is able to take full responsibility for the change. In the case of pull requests proposed by an existing Collaborator, an additional Collaborator is required for sign-off. Consensus should be sought if additional Collaborators participate and there is disagreement around a particular modification. See Consensus Seeking Process below for further detail on the consensus model used for governance.</p> <p>Collaborators may opt to elevate significant or controversial modifications, or modifications that have not found consensus to the WG for discussion by assigning the WG-agenda tag to a pull request or issue. The WG should serve as the final arbiter where required.</p> <p>For the current list of Collaborators, see the project README.md.</p>"},{"location":"ejemplos/servidor/node_modules/readable-stream/GOVERNANCE/#wg-membership","title":"WG Membership","text":"<p>WG seats are not time-limited.  There is no fixed size of the WG. However, the expected target is between 6 and 12, to ensure adequate coverage of important areas of expertise, balanced with the ability to make decisions efficiently.</p> <p>There is no specific set of requirements or qualifications for WG membership beyond these rules.</p> <p>The WG may add additional members to the WG by unanimous consensus.</p> <p>A WG member may be removed from the WG by voluntary resignation, or by unanimous consensus of all other WG members.</p> <p>Changes to WG membership should be posted in the agenda, and may be suggested as any other agenda item (see \"WG Meetings\" below).</p> <p>If an addition or removal is proposed during a meeting, and the full WG is not in attendance to participate, then the addition or removal is added to the agenda for the subsequent meeting.  This is to ensure that all members are given the opportunity to participate in all membership decisions.  If a WG member is unable to attend a meeting where a planned membership decision is being made, then their consent is assumed.</p> <p>No more than 1/3 of the WG members may be affiliated with the same employer.  If removal or resignation of a WG member, or a change of employment by a WG member, creates a situation where more than 1/3 of the WG membership shares an employer, then the situation must be immediately remedied by the resignation or removal of one or more WG members affiliated with the over-represented employer(s).</p>"},{"location":"ejemplos/servidor/node_modules/readable-stream/GOVERNANCE/#wg-meetings","title":"WG Meetings","text":"<p>The WG meets occasionally on a Google Hangout On Air. A designated moderator approved by the WG runs the meeting. Each meeting should be published to YouTube.</p> <p>Items are added to the WG agenda that are considered contentious or are modifications of governance, contribution policy, WG membership, or release process.</p> <p>The intention of the agenda is not to approve or review all patches; that should happen continuously on GitHub and be handled by the larger group of Collaborators.</p> <p>Any community member or contributor can ask that something be added to the next meeting's agenda by logging a GitHub Issue. Any Collaborator, WG member or the moderator can add the item to the agenda by adding the WG-agenda tag to the issue.</p> <p>Prior to each WG meeting the moderator will share the Agenda with members of the WG. WG members can add any items they like to the agenda at the beginning of each meeting. The moderator and the WG cannot veto or remove items.</p> <p>The WG may invite persons or representatives from certain projects to participate in a non-voting capacity.</p> <p>The moderator is responsible for summarizing the discussion of each agenda item and sends it as a pull request after the meeting.</p>"},{"location":"ejemplos/servidor/node_modules/readable-stream/GOVERNANCE/#consensus-seeking-process","title":"Consensus Seeking Process","text":"<p>The WG follows a Consensus Seeking decision-making model.</p> <p>When an agenda item has appeared to reach a consensus the moderator will ask \"Does anyone object?\" as a final call for dissent from the consensus.</p> <p>If an agenda item cannot reach a consensus a WG member can call for either a closing vote or a vote to table the issue to the next meeting. The call for a vote must be seconded by a majority of the WG or else the discussion will continue. Simple majority wins.</p> <p>Note that changes to WG membership require a majority consensus.  See \"WG Membership\" above.</p>"},{"location":"ejemplos/servidor/node_modules/safe-buffer/","title":"safe-buffer","text":""},{"location":"ejemplos/servidor/node_modules/safe-buffer/#safer-nodejs-buffer-api","title":"Safer Node.js Buffer API","text":"<p>Use the new Node.js Buffer APIs (<code>Buffer.from</code>, <code>Buffer.alloc</code>, <code>Buffer.allocUnsafe</code>, <code>Buffer.allocUnsafeSlow</code>) in all versions of Node.js.</p> <p>Uses the built-in implementation when available.</p>"},{"location":"ejemplos/servidor/node_modules/safe-buffer/#install","title":"install","text":"<pre><code>npm install safe-buffer\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/safe-buffer/#usage","title":"usage","text":"<p>The goal of this package is to provide a safe replacement for the node.js <code>Buffer</code>.</p> <p>It's a drop-in replacement for <code>Buffer</code>. You can use it by adding one <code>require</code> line to the top of your node.js modules:</p> <pre><code>var Buffer = require('safe-buffer').Buffer\n\n// Existing buffer code will continue to work without issues:\n\nnew Buffer('hey', 'utf8')\nnew Buffer([1, 2, 3], 'utf8')\nnew Buffer(obj)\nnew Buffer(16) // create an uninitialized buffer (potentially unsafe)\n\n// But you can use these new explicit APIs to make clear what you want:\n\nBuffer.from('hey', 'utf8') // convert from many types to a Buffer\nBuffer.alloc(16) // create a zero-filled buffer (safe)\nBuffer.allocUnsafe(16) // create an uninitialized buffer (potentially unsafe)\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/safe-buffer/#api","title":"api","text":""},{"location":"ejemplos/servidor/node_modules/safe-buffer/#class-method-bufferfromarray","title":"Class Method: Buffer.from(array)","text":"<ul> <li><code>array</code> {Array}</li> </ul> <p>Allocates a new <code>Buffer</code> using an <code>array</code> of octets.</p> <pre><code>const buf = Buffer.from([0x62,0x75,0x66,0x66,0x65,0x72]);\n  // creates a new Buffer containing ASCII bytes\n  // ['b','u','f','f','e','r']\n</code></pre> <p>A <code>TypeError</code> will be thrown if <code>array</code> is not an <code>Array</code>.</p>"},{"location":"ejemplos/servidor/node_modules/safe-buffer/#class-method-bufferfromarraybuffer-byteoffset-length","title":"Class Method: Buffer.from(arrayBuffer[, byteOffset[, length]])","text":"<ul> <li><code>arrayBuffer</code> {ArrayBuffer} The <code>.buffer</code> property of a <code>TypedArray</code> or   a <code>new ArrayBuffer()</code></li> <li><code>byteOffset</code> {Number} Default: <code>0</code></li> <li><code>length</code> {Number} Default: <code>arrayBuffer.length - byteOffset</code></li> </ul> <p>When passed a reference to the <code>.buffer</code> property of a <code>TypedArray</code> instance, the newly created <code>Buffer</code> will share the same allocated memory as the TypedArray.</p> <pre><code>const arr = new Uint16Array(2);\narr[0] = 5000;\narr[1] = 4000;\n\nconst buf = Buffer.from(arr.buffer); // shares the memory with arr;\n\nconsole.log(buf);\n  // Prints: &lt;Buffer 88 13 a0 0f&gt;\n\n// changing the TypedArray changes the Buffer also\narr[1] = 6000;\n\nconsole.log(buf);\n  // Prints: &lt;Buffer 88 13 70 17&gt;\n</code></pre> <p>The optional <code>byteOffset</code> and <code>length</code> arguments specify a memory range within the <code>arrayBuffer</code> that will be shared by the <code>Buffer</code>.</p> <pre><code>const ab = new ArrayBuffer(10);\nconst buf = Buffer.from(ab, 0, 2);\nconsole.log(buf.length);\n  // Prints: 2\n</code></pre> <p>A <code>TypeError</code> will be thrown if <code>arrayBuffer</code> is not an <code>ArrayBuffer</code>.</p>"},{"location":"ejemplos/servidor/node_modules/safe-buffer/#class-method-bufferfrombuffer","title":"Class Method: Buffer.from(buffer)","text":"<ul> <li><code>buffer</code> {Buffer}</li> </ul> <p>Copies the passed <code>buffer</code> data onto a new <code>Buffer</code> instance.</p> <pre><code>const buf1 = Buffer.from('buffer');\nconst buf2 = Buffer.from(buf1);\n\nbuf1[0] = 0x61;\nconsole.log(buf1.toString());\n  // 'auffer'\nconsole.log(buf2.toString());\n  // 'buffer' (copy is not changed)\n</code></pre> <p>A <code>TypeError</code> will be thrown if <code>buffer</code> is not a <code>Buffer</code>.</p>"},{"location":"ejemplos/servidor/node_modules/safe-buffer/#class-method-bufferfromstr-encoding","title":"Class Method: Buffer.from(str[, encoding])","text":"<ul> <li><code>str</code> {String} String to encode.</li> <li><code>encoding</code> {String} Encoding to use, Default: <code>'utf8'</code></li> </ul> <p>Creates a new <code>Buffer</code> containing the given JavaScript string <code>str</code>. If provided, the <code>encoding</code> parameter identifies the character encoding. If not provided, <code>encoding</code> defaults to <code>'utf8'</code>.</p> <pre><code>const buf1 = Buffer.from('this is a t\u00e9st');\nconsole.log(buf1.toString());\n  // prints: this is a t\u00e9st\nconsole.log(buf1.toString('ascii'));\n  // prints: this is a tC)st\n\nconst buf2 = Buffer.from('7468697320697320612074c3a97374', 'hex');\nconsole.log(buf2.toString());\n  // prints: this is a t\u00e9st\n</code></pre> <p>A <code>TypeError</code> will be thrown if <code>str</code> is not a string.</p>"},{"location":"ejemplos/servidor/node_modules/safe-buffer/#class-method-bufferallocsize-fill-encoding","title":"Class Method: Buffer.alloc(size[, fill[, encoding]])","text":"<ul> <li><code>size</code> {Number}</li> <li><code>fill</code> {Value} Default: <code>undefined</code></li> <li><code>encoding</code> {String} Default: <code>utf8</code></li> </ul> <p>Allocates a new <code>Buffer</code> of <code>size</code> bytes. If <code>fill</code> is <code>undefined</code>, the <code>Buffer</code> will be zero-filled.</p> <pre><code>const buf = Buffer.alloc(5);\nconsole.log(buf);\n  // &lt;Buffer 00 00 00 00 00&gt;\n</code></pre> <p>The <code>size</code> must be less than or equal to the value of <code>require('buffer').kMaxLength</code> (on 64-bit architectures, <code>kMaxLength</code> is <code>(2^31)-1</code>). Otherwise, a [<code>RangeError</code>][] is thrown. A zero-length Buffer will be created if a <code>size</code> less than or equal to 0 is specified.</p> <p>If <code>fill</code> is specified, the allocated <code>Buffer</code> will be initialized by calling <code>buf.fill(fill)</code>. See [<code>buf.fill()</code>][] for more information.</p> <pre><code>const buf = Buffer.alloc(5, 'a');\nconsole.log(buf);\n  // &lt;Buffer 61 61 61 61 61&gt;\n</code></pre> <p>If both <code>fill</code> and <code>encoding</code> are specified, the allocated <code>Buffer</code> will be initialized by calling <code>buf.fill(fill, encoding)</code>. For example:</p> <pre><code>const buf = Buffer.alloc(11, 'aGVsbG8gd29ybGQ=', 'base64');\nconsole.log(buf);\n  // &lt;Buffer 68 65 6c 6c 6f 20 77 6f 72 6c 64&gt;\n</code></pre> <p>Calling <code>Buffer.alloc(size)</code> can be significantly slower than the alternative <code>Buffer.allocUnsafe(size)</code> but ensures that the newly created <code>Buffer</code> instance contents will never contain sensitive data.</p> <p>A <code>TypeError</code> will be thrown if <code>size</code> is not a number.</p>"},{"location":"ejemplos/servidor/node_modules/safe-buffer/#class-method-bufferallocunsafesize","title":"Class Method: Buffer.allocUnsafe(size)","text":"<ul> <li><code>size</code> {Number}</li> </ul> <p>Allocates a new non-zero-filled <code>Buffer</code> of <code>size</code> bytes.  The <code>size</code> must be less than or equal to the value of <code>require('buffer').kMaxLength</code> (on 64-bit architectures, <code>kMaxLength</code> is <code>(2^31)-1</code>). Otherwise, a [<code>RangeError</code>][] is thrown. A zero-length Buffer will be created if a <code>size</code> less than or equal to 0 is specified.</p> <p>The underlying memory for <code>Buffer</code> instances created in this way is not initialized. The contents of the newly created <code>Buffer</code> are unknown and may contain sensitive data. Use [<code>buf.fill(0)</code>][] to initialize such <code>Buffer</code> instances to zeroes.</p> <pre><code>const buf = Buffer.allocUnsafe(5);\nconsole.log(buf);\n  // &lt;Buffer 78 e0 82 02 01&gt;\n  // (octets will be different, every time)\nbuf.fill(0);\nconsole.log(buf);\n  // &lt;Buffer 00 00 00 00 00&gt;\n</code></pre> <p>A <code>TypeError</code> will be thrown if <code>size</code> is not a number.</p> <p>Note that the <code>Buffer</code> module pre-allocates an internal <code>Buffer</code> instance of size <code>Buffer.poolSize</code> that is used as a pool for the fast allocation of new <code>Buffer</code> instances created using <code>Buffer.allocUnsafe(size)</code> (and the deprecated <code>new Buffer(size)</code> constructor) only when <code>size</code> is less than or equal to <code>Buffer.poolSize &gt;&gt; 1</code> (floor of <code>Buffer.poolSize</code> divided by two). The default value of <code>Buffer.poolSize</code> is <code>8192</code> but can be modified.</p> <p>Use of this pre-allocated internal memory pool is a key difference between calling <code>Buffer.alloc(size, fill)</code> vs. <code>Buffer.allocUnsafe(size).fill(fill)</code>. Specifically, <code>Buffer.alloc(size, fill)</code> will never use the internal Buffer pool, while <code>Buffer.allocUnsafe(size).fill(fill)</code> will use the internal Buffer pool if <code>size</code> is less than or equal to half <code>Buffer.poolSize</code>. The difference is subtle but can be important when an application requires the additional performance that <code>Buffer.allocUnsafe(size)</code> provides.</p>"},{"location":"ejemplos/servidor/node_modules/safe-buffer/#class-method-bufferallocunsafeslowsize","title":"Class Method: Buffer.allocUnsafeSlow(size)","text":"<ul> <li><code>size</code> {Number}</li> </ul> <p>Allocates a new non-zero-filled and non-pooled <code>Buffer</code> of <code>size</code> bytes.  The <code>size</code> must be less than or equal to the value of <code>require('buffer').kMaxLength</code> (on 64-bit architectures, <code>kMaxLength</code> is <code>(2^31)-1</code>). Otherwise, a [<code>RangeError</code>][] is thrown. A zero-length Buffer will be created if a <code>size</code> less than or equal to 0 is specified.</p> <p>The underlying memory for <code>Buffer</code> instances created in this way is not initialized. The contents of the newly created <code>Buffer</code> are unknown and may contain sensitive data. Use [<code>buf.fill(0)</code>][] to initialize such <code>Buffer</code> instances to zeroes.</p> <p>When using <code>Buffer.allocUnsafe()</code> to allocate new <code>Buffer</code> instances, allocations under 4KB are, by default, sliced from a single pre-allocated <code>Buffer</code>. This allows applications to avoid the garbage collection overhead of creating many individually allocated Buffers. This approach improves both performance and memory usage by eliminating the need to track and cleanup as many <code>Persistent</code> objects.</p> <p>However, in the case where a developer may need to retain a small chunk of memory from a pool for an indeterminate amount of time, it may be appropriate to create an un-pooled Buffer instance using <code>Buffer.allocUnsafeSlow()</code> then copy out the relevant bits.</p> <pre><code>// need to keep around a few small chunks of memory\nconst store = [];\n\nsocket.on('readable', () =&gt; {\n  const data = socket.read();\n  // allocate for retained data\n  const sb = Buffer.allocUnsafeSlow(10);\n  // copy the data into the new allocation\n  data.copy(sb, 0, 0, 10);\n  store.push(sb);\n});\n</code></pre> <p>Use of <code>Buffer.allocUnsafeSlow()</code> should be used only as a last resort after a developer has observed undue memory retention in their applications.</p> <p>A <code>TypeError</code> will be thrown if <code>size</code> is not a number.</p>"},{"location":"ejemplos/servidor/node_modules/safe-buffer/#all-the-rest","title":"All the Rest","text":"<p>The rest of the <code>Buffer</code> API is exactly the same as in node.js. See the docs.</p>"},{"location":"ejemplos/servidor/node_modules/safe-buffer/#related-links","title":"Related links","text":"<ul> <li>Node.js issue: Buffer(number) is unsafe</li> <li>Node.js Enhancement Proposal: Buffer.from/Buffer.alloc/Buffer.zalloc/Buffer() soft-deprecate</li> </ul>"},{"location":"ejemplos/servidor/node_modules/safe-buffer/#why-is-buffer-unsafe","title":"Why is <code>Buffer</code> unsafe?","text":"<p>Today, the node.js <code>Buffer</code> constructor is overloaded to handle many different argument types like <code>String</code>, <code>Array</code>, <code>Object</code>, <code>TypedArrayView</code> (<code>Uint8Array</code>, etc.), <code>ArrayBuffer</code>, and also <code>Number</code>.</p> <p>The API is optimized for convenience: you can throw any type at it, and it will try to do what you want.</p> <p>Because the Buffer constructor is so powerful, you often see code like this:</p> <pre><code>// Convert UTF-8 strings to hex\nfunction toHex (str) {\n  return new Buffer(str).toString('hex')\n}\n</code></pre> <p>But what happens if <code>toHex</code> is called with a <code>Number</code> argument?</p>"},{"location":"ejemplos/servidor/node_modules/safe-buffer/#remote-memory-disclosure","title":"Remote Memory Disclosure","text":"<p>If an attacker can make your program call the <code>Buffer</code> constructor with a <code>Number</code> argument, then they can make it allocate uninitialized memory from the node.js process. This could potentially disclose TLS private keys, user data, or database passwords.</p> <p>When the <code>Buffer</code> constructor is passed a <code>Number</code> argument, it returns an UNINITIALIZED block of memory of the specified <code>size</code>. When you create a <code>Buffer</code> like this, you MUST overwrite the contents before returning it to the user.</p> <p>From the node.js docs:</p> <p><code>new Buffer(size)</code></p> <ul> <li><code>size</code> Number</li> </ul> <p>The underlying memory for <code>Buffer</code> instances created in this way is not initialized. The contents of a newly created <code>Buffer</code> are unknown and could contain sensitive data. Use <code>buf.fill(0)</code> to initialize a Buffer to zeroes.</p> <p>(Emphasis our own.)</p> <p>Whenever the programmer intended to create an uninitialized <code>Buffer</code> you often see code like this:</p> <pre><code>var buf = new Buffer(16)\n\n// Immediately overwrite the uninitialized buffer with data from another buffer\nfor (var i = 0; i &lt; buf.length; i++) {\n  buf[i] = otherBuf[i]\n}\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/safe-buffer/#would-this-ever-be-a-problem-in-real-code","title":"Would this ever be a problem in real code?","text":"<p>Yes. It's surprisingly common to forget to check the type of your variables in a dynamically-typed language like JavaScript.</p> <p>Usually the consequences of assuming the wrong type is that your program crashes with an uncaught exception. But the failure mode for forgetting to check the type of arguments to the <code>Buffer</code> constructor is more catastrophic.</p> <p>Here's an example of a vulnerable service that takes a JSON payload and converts it to hex:</p> <pre><code>// Take a JSON payload {str: \"some string\"} and convert it to hex\nvar server = http.createServer(function (req, res) {\n  var data = ''\n  req.setEncoding('utf8')\n  req.on('data', function (chunk) {\n    data += chunk\n  })\n  req.on('end', function () {\n    var body = JSON.parse(data)\n    res.end(new Buffer(body.str).toString('hex'))\n  })\n})\n\nserver.listen(8080)\n</code></pre> <p>In this example, an http client just has to send:</p> <pre><code>{\n  \"str\": 1000\n}\n</code></pre> <p>and it will get back 1,000 bytes of uninitialized memory from the server.</p> <p>This is a very serious bug. It's similar in severity to the the Heartbleed bug that allowed disclosure of OpenSSL process memory by remote attackers.</p>"},{"location":"ejemplos/servidor/node_modules/safe-buffer/#which-real-world-packages-were-vulnerable","title":"Which real-world packages were vulnerable?","text":""},{"location":"ejemplos/servidor/node_modules/safe-buffer/#bittorrent-dht","title":"<code>bittorrent-dht</code>","text":"<p>Mathias Buus and I (Feross Aboukhadijeh) found this issue in one of our own packages, <code>bittorrent-dht</code>. The bug would allow anyone on the internet to send a series of messages to a user of <code>bittorrent-dht</code> and get them to reveal 20 bytes at a time of uninitialized memory from the node.js process.</p> <p>Here's the commit that fixed it. We released a new fixed version, created a Node Security Project disclosure, and deprecated all vulnerable versions on npm so users will get a warning to upgrade to a newer version.</p>"},{"location":"ejemplos/servidor/node_modules/safe-buffer/#ws","title":"<code>ws</code>","text":"<p>That got us wondering if there were other vulnerable packages. Sure enough, within a short period of time, we found the same issue in <code>ws</code>, the most popular WebSocket implementation in node.js.</p> <p>If certain APIs were called with <code>Number</code> parameters instead of <code>String</code> or <code>Buffer</code> as expected, then uninitialized server memory would be disclosed to the remote peer.</p> <p>These were the vulnerable methods:</p> <pre><code>socket.send(number)\nsocket.ping(number)\nsocket.pong(number)\n</code></pre> <p>Here's a vulnerable socket server with some echo functionality:</p> <pre><code>server.on('connection', function (socket) {\n  socket.on('message', function (message) {\n    message = JSON.parse(message)\n    if (message.type === 'echo') {\n      socket.send(message.data) // send back the user's message\n    }\n  })\n})\n</code></pre> <p><code>socket.send(number)</code> called on the server, will disclose server memory.</p> <p>Here's the release where the issue was fixed, with a more detailed explanation. Props to Arnout Kazemier for the quick fix. Here's the Node Security Project disclosure.</p>"},{"location":"ejemplos/servidor/node_modules/safe-buffer/#whats-the-solution","title":"What's the solution?","text":"<p>It's important that node.js offers a fast way to get memory otherwise performance-critical applications would needlessly get a lot slower.</p> <p>But we need a better way to signal our intent as programmers. When we want uninitialized memory, we should request it explicitly.</p> <p>Sensitive functionality should not be packed into a developer-friendly API that loosely accepts many different types. This type of API encourages the lazy practice of passing variables in without checking the type very carefully.</p>"},{"location":"ejemplos/servidor/node_modules/safe-buffer/#a-new-api-bufferallocunsafenumber","title":"A new API: <code>Buffer.allocUnsafe(number)</code>","text":"<p>The functionality of creating buffers with uninitialized memory should be part of another API. We propose <code>Buffer.allocUnsafe(number)</code>. This way, it's not part of an API that frequently gets user input of all sorts of different types passed into it.</p> <pre><code>var buf = Buffer.allocUnsafe(16) // careful, uninitialized memory!\n\n// Immediately overwrite the uninitialized buffer with data from another buffer\nfor (var i = 0; i &lt; buf.length; i++) {\n  buf[i] = otherBuf[i]\n}\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/safe-buffer/#how-do-we-fix-nodejs-core","title":"How do we fix node.js core?","text":"<p>We sent a PR to node.js core (merged as <code>semver-major</code>) which defends against one case:</p> <pre><code>var str = 16\nnew Buffer(str, 'utf8')\n</code></pre> <p>In this situation, it's implied that the programmer intended the first argument to be a string, since they passed an encoding as a second argument. Today, node.js will allocate uninitialized memory in the case of <code>new Buffer(number, encoding)</code>, which is probably not what the programmer intended.</p> <p>But this is only a partial solution, since if the programmer does <code>new Buffer(variable)</code> (without an <code>encoding</code> parameter) there's no way to know what they intended. If <code>variable</code> is sometimes a number, then uninitialized memory will sometimes be returned.</p>"},{"location":"ejemplos/servidor/node_modules/safe-buffer/#whats-the-real-long-term-fix","title":"What's the real long-term fix?","text":"<p>We could deprecate and remove <code>new Buffer(number)</code> and use <code>Buffer.allocUnsafe(number)</code> when we need uninitialized memory. But that would break 1000s of packages.</p> <p>~~We believe the best solution is to:~~</p> <p>~~1. Change <code>new Buffer(number)</code> to return safe, zeroed-out memory~~</p> <p>~~2. Create a new API for creating uninitialized Buffers. We propose: <code>Buffer.allocUnsafe(number)</code>~~</p>"},{"location":"ejemplos/servidor/node_modules/safe-buffer/#update","title":"Update","text":"<p>We now support adding three new APIs:</p> <ul> <li><code>Buffer.from(value)</code> - convert from any type to a buffer</li> <li><code>Buffer.alloc(size)</code> - create a zero-filled buffer</li> <li><code>Buffer.allocUnsafe(size)</code> - create an uninitialized buffer with given size</li> </ul> <p>This solves the core problem that affected <code>ws</code> and <code>bittorrent-dht</code> which is <code>Buffer(variable)</code> getting tricked into taking a number argument.</p> <p>This way, existing code continues working and the impact on the npm ecosystem will be minimal. Over time, npm maintainers can migrate performance-critical code to use <code>Buffer.allocUnsafe(number)</code> instead of <code>new Buffer(number)</code>.</p>"},{"location":"ejemplos/servidor/node_modules/safe-buffer/#conclusion","title":"Conclusion","text":"<p>We think there's a serious design issue with the <code>Buffer</code> API as it exists today. It promotes insecure software by putting high-risk functionality into a convenient API with friendly \"developer ergonomics\".</p> <p>This wasn't merely a theoretical exercise because we found the issue in some of the most popular npm packages.</p> <p>Fortunately, there's an easy fix that can be applied today. Use <code>safe-buffer</code> in place of <code>buffer</code>.</p> <pre><code>var Buffer = require('safe-buffer').Buffer\n</code></pre> <p>Eventually, we hope that node.js core can switch to this new, safer behavior. We believe the impact on the ecosystem would be minimal since it's not a breaking change. Well-maintained, popular packages would be updated to use <code>Buffer.alloc</code> quickly, while older, insecure packages would magically become safe from this attack vector.</p>"},{"location":"ejemplos/servidor/node_modules/safe-buffer/#links","title":"links","text":"<ul> <li>Node.js PR: buffer: throw if both length and enc are passed</li> <li>Node Security Project disclosure for <code>ws</code></li> <li>Node Security Project disclosure for<code>bittorrent-dht</code></li> </ul>"},{"location":"ejemplos/servidor/node_modules/safe-buffer/#credit","title":"credit","text":"<p>The original issues in <code>bittorrent-dht</code> (disclosure) and <code>ws</code> (disclosure) were discovered by Mathias Buus and Feross Aboukhadijeh.</p> <p>Thanks to Adam Baldwin for helping disclose these issues and for his work running the Node Security Project.</p> <p>Thanks to John Hiesey for proofreading this README and auditing the code.</p>"},{"location":"ejemplos/servidor/node_modules/safe-buffer/#license","title":"license","text":"<p>MIT. Copyright (C) Feross Aboukhadijeh</p>"},{"location":"ejemplos/servidor/node_modules/safer-buffer/Porting-Buffer/","title":"Porting to the Buffer.from/Buffer.alloc API","text":""},{"location":"ejemplos/servidor/node_modules/safer-buffer/Porting-Buffer/#overview","title":"Overview","text":"<ul> <li>Variant 1: Drop support for Node.js \u2264 4.4.x and 5.0.0 \u2014 5.9.x. (recommended)</li> <li>Variant 2: Use a polyfill</li> <li>Variant 3: manual detection, with safeguards</li> </ul>"},{"location":"ejemplos/servidor/node_modules/safer-buffer/Porting-Buffer/#finding-problematic-bits-of-code-using-grep","title":"Finding problematic bits of code using grep","text":"<p>Just run <code>grep -nrE '[^a-zA-Z](Slow)?Buffer\\s*\\(' --exclude-dir node_modules</code>.</p> <p>It will find all the potentially unsafe places in your own code (with some considerably unlikely exceptions).</p>"},{"location":"ejemplos/servidor/node_modules/safer-buffer/Porting-Buffer/#finding-problematic-bits-of-code-using-nodejs-8","title":"Finding problematic bits of code using Node.js 8","text":"<p>If you\u2019re using Node.js \u2265 8.0.0 (which is recommended), Node.js exposes multiple options that help with finding the relevant pieces of code:</p> <ul> <li><code>--trace-warnings</code> will make Node.js show a stack trace for this warning and other warnings that are printed by Node.js.</li> <li><code>--trace-deprecation</code> does the same thing, but only for deprecation warnings.</li> <li><code>--pending-deprecation</code> will show more types of deprecation warnings. In particular, it will show the <code>Buffer()</code> deprecation warning, even on Node.js 8.</li> </ul> <p>You can set these flags using an environment variable:</p> <pre><code>$ export NODE_OPTIONS='--trace-warnings --pending-deprecation'\n$ cat example.js\n'use strict';\nconst foo = new Buffer('foo');\n$ node example.js\n(node:7147) [DEP0005] DeprecationWarning: The Buffer() and new Buffer() constructors are not recommended for use due to security and usability concerns. Please use the new Buffer.alloc(), Buffer.allocUnsafe(), or Buffer.from() construction methods instead.\n    at showFlaggedDeprecation (buffer.js:127:13)\n    at new Buffer (buffer.js:148:3)\n    at Object.&lt;anonymous&gt; (/path/to/example.js:2:13)\n    [... more stack trace lines ...]\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/safer-buffer/Porting-Buffer/#finding-problematic-bits-of-code-using-linters","title":"Finding problematic bits of code using linters","text":"<p>Eslint rules no-buffer-constructor or node/no-deprecated-api also find calls to deprecated <code>Buffer()</code> API. Those rules are included in some pre-sets.</p> <p>There is a drawback, though, that it doesn't always work correctly when <code>Buffer</code> is overriden e.g. with a polyfill, so recommended is a combination of this and some other method described above.</p> <p></p>"},{"location":"ejemplos/servidor/node_modules/safer-buffer/Porting-Buffer/#variant-1-drop-support-for-nodejs-44x-and-500-59x","title":"Variant 1: Drop support for Node.js \u2264 4.4.x and 5.0.0 \u2014 5.9.x.","text":"<p>This is the recommended solution nowadays that would imply only minimal overhead.</p> <p>The Node.js 5.x release line has been unsupported since July 2016, and the Node.js 4.x release line reaches its End of Life in April 2018 (\u2192 Schedule). This means that these versions of Node.js will not receive any updates, even in case of security issues, so using these release lines should be avoided, if at all possible.</p> <p>What you would do in this case is to convert all <code>new Buffer()</code> or <code>Buffer()</code> calls to use <code>Buffer.alloc()</code> or <code>Buffer.from()</code>, in the following way:</p> <ul> <li>For <code>new Buffer(number)</code>, replace it with <code>Buffer.alloc(number)</code>.</li> <li>For <code>new Buffer(string)</code> (or <code>new Buffer(string, encoding)</code>), replace it with <code>Buffer.from(string)</code> (or <code>Buffer.from(string, encoding)</code>).</li> <li>For all other combinations of arguments (these are much rarer), also replace <code>new Buffer(...arguments)</code> with <code>Buffer.from(...arguments)</code>.</li> </ul> <p>Note that <code>Buffer.alloc()</code> is also faster on the current Node.js versions than <code>new Buffer(size).fill(0)</code>, which is what you would otherwise need to ensure zero-filling.</p> <p>Enabling eslint rule no-buffer-constructor or node/no-deprecated-api is recommended to avoid accidential unsafe Buffer API usage.</p> <p>There is also a JSCodeshift codemod for automatically migrating Buffer constructors to <code>Buffer.alloc()</code> or <code>Buffer.from()</code>. Note that it currently only works with cases where the arguments are literals or where the constructor is invoked with two arguments.</p> <p>If you currently support those older Node.js versions and dropping them would be a semver-major change for you, or if you support older branches of your packages, consider using Variant 2 or Variant 3 on older branches, so people using those older branches will also receive the fix. That way, you will eradicate potential issues caused by unguarded Buffer API usage and your users will not observe a runtime deprecation warning when running your code on Node.js 10.</p> <p></p>"},{"location":"ejemplos/servidor/node_modules/safer-buffer/Porting-Buffer/#variant-2-use-a-polyfill","title":"Variant 2: Use a polyfill","text":"<p>Utilize safer-buffer as a polyfill to support older Node.js versions.</p> <p>You would take exacly the same steps as in Variant 1, but with a polyfill <code>const Buffer = require('safer-buffer').Buffer</code> in all files where you use the new <code>Buffer</code> api.</p> <p>Make sure that you do not use old <code>new Buffer</code> API \u2014 in any files where the line above is added, using old <code>new Buffer()</code> API will throw. It will be easy to notice that in CI, though.</p> <p>Alternatively, you could use buffer-from and/or buffer-alloc ponyfills \u2014 those are great, the only downsides being 4 deps in the tree and slightly more code changes to migrate off them (as you would be using e.g. <code>Buffer.from</code> under a different name). If you need only <code>Buffer.from</code> polyfilled \u2014 <code>buffer-from</code> alone which comes with no extra dependencies.</p> <p>Alternatively, you could use safe-buffer \u2014 it also provides a polyfill, but takes a different approach which has it's drawbacks. It will allow you to also use the older <code>new Buffer()</code> API in your code, though \u2014 but that's arguably a benefit, as it is problematic, can cause issues in your code, and will start emitting runtime deprecation warnings starting with Node.js 10.</p> <p>Note that in either case, it is important that you also remove all calls to the old Buffer API manually \u2014 just throwing in <code>safe-buffer</code> doesn't fix the problem by itself, it just provides a polyfill for the new API. I have seen people doing that mistake.</p> <p>Enabling eslint rule no-buffer-constructor or node/no-deprecated-api is recommended.</p> <p>Don't forget to drop the polyfill usage once you drop support for Node.js &lt; 4.5.0.</p> <p></p>"},{"location":"ejemplos/servidor/node_modules/safer-buffer/Porting-Buffer/#variant-3-manual-detection-with-safeguards","title":"Variant 3 \u2014 manual detection, with safeguards","text":"<p>This is useful if you create Buffer instances in only a few places (e.g. one), or you have your own wrapper around them.</p>"},{"location":"ejemplos/servidor/node_modules/safer-buffer/Porting-Buffer/#buffer0","title":"Buffer(0)","text":"<p>This special case for creating empty buffers can be safely replaced with <code>Buffer.concat([])</code>, which returns the same result all the way down to Node.js 0.8.x.</p>"},{"location":"ejemplos/servidor/node_modules/safer-buffer/Porting-Buffer/#buffernotnumber","title":"Buffer(notNumber)","text":"<p>Before:</p> <pre><code>var buf = new Buffer(notNumber, encoding);\n</code></pre> <p>After:</p> <pre><code>var buf;\nif (Buffer.from &amp;&amp; Buffer.from !== Uint8Array.from) {\n  buf = Buffer.from(notNumber, encoding);\n} else {\n  if (typeof notNumber === 'number')\n    throw new Error('The \"size\" argument must be of type number.');\n  buf = new Buffer(notNumber, encoding);\n}\n</code></pre> <p><code>encoding</code> is optional.</p> <p>Note that the <code>typeof notNumber</code> before <code>new Buffer</code> is required (for cases when <code>notNumber</code> argument is not hard-coded) and is not caused by the deprecation of Buffer constructor \u2014 it's exactly why the Buffer constructor is deprecated. Ecosystem packages lacking this type-check caused numereous security issues \u2014 situations when unsanitized user input could end up in the <code>Buffer(arg)</code> create problems ranging from DoS to leaking sensitive information to the attacker from the process memory.</p> <p>When <code>notNumber</code> argument is hardcoded (e.g. literal <code>\"abc\"</code> or <code>[0,1,2]</code>), the <code>typeof</code> check can be omitted.</p> <p>Also note that using TypeScript does not fix this problem for you \u2014 when libs written in <code>TypeScript</code> are used from JS, or when user input ends up there \u2014 it behaves exactly as pure JS, as all type checks are translation-time only and are not present in the actual JS code which TS compiles to.</p>"},{"location":"ejemplos/servidor/node_modules/safer-buffer/Porting-Buffer/#buffernumber","title":"Buffer(number)","text":"<p>For Node.js 0.10.x (and below) support:</p> <pre><code>var buf;\nif (Buffer.alloc) {\n  buf = Buffer.alloc(number);\n} else {\n  buf = new Buffer(number);\n  buf.fill(0);\n}\n</code></pre> <p>Otherwise (Node.js \u2265 0.12.x):</p> <pre><code>const buf = Buffer.alloc ? Buffer.alloc(number) : new Buffer(number).fill(0);\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/safer-buffer/Porting-Buffer/#regarding-bufferallocunsafe","title":"Regarding Buffer.allocUnsafe","text":"<p>Be extra cautious when using <code>Buffer.allocUnsafe</code>:  * Don't use it if you don't have a good reason to    * e.g. you probably won't ever see a performance difference for small buffers, in fact, those      might be even faster with <code>Buffer.alloc()</code>,    * if your code is not in the hot code path \u2014 you also probably won't notice a difference,    * keep in mind that zero-filling minimizes the potential risks.  * If you use it, make sure that you never return the buffer in a partially-filled state,    * if you are writing to it sequentially \u2014 always truncate it to the actuall written length</p> <p>Errors in handling buffers allocated with <code>Buffer.allocUnsafe</code> could result in various issues, ranged from undefined behaviour of your code to sensitive data (user input, passwords, certs) leaking to the remote attacker.</p> <p>Note that the same applies to <code>new Buffer</code> usage without zero-filling, depending on the Node.js version (and lacking type checks also adds DoS to the list of potential problems).</p> <p></p>"},{"location":"ejemplos/servidor/node_modules/safer-buffer/Porting-Buffer/#faq","title":"FAQ","text":""},{"location":"ejemplos/servidor/node_modules/safer-buffer/Porting-Buffer/#what-is-wrong-with-the-buffer-constructor","title":"What is wrong with the <code>Buffer</code> constructor?","text":"<p>The <code>Buffer</code> constructor could be used to create a buffer in many different ways:</p> <ul> <li><code>new Buffer(42)</code> creates a <code>Buffer</code> of 42 bytes. Before Node.js 8, this buffer contained   arbitrary memory for performance reasons, which could include anything ranging from   program source code to passwords and encryption keys.</li> <li><code>new Buffer('abc')</code> creates a <code>Buffer</code> that contains the UTF-8-encoded version of   the string <code>'abc'</code>. A second argument could specify another encoding: For example,   <code>new Buffer(string, 'base64')</code> could be used to convert a Base64 string into the original   sequence of bytes that it represents.</li> <li>There are several other combinations of arguments.</li> </ul> <p>This meant that, in code like <code>var buffer = new Buffer(foo);</code>, it is not possible to tell what exactly the contents of the generated buffer are without knowing the type of <code>foo</code>.</p> <p>Sometimes, the value of <code>foo</code> comes from an external source. For example, this function could be exposed as a service on a web server, converting a UTF-8 string into its Base64 form:</p> <pre><code>function stringToBase64(req, res) {\n  // The request body should have the format of `{ string: 'foobar' }`\n  const rawBytes = new Buffer(req.body.string)\n  const encoded = rawBytes.toString('base64')\n  res.end({ encoded: encoded })\n}\n</code></pre> <p>Note that this code does not validate the type of <code>req.body.string</code>:</p> <ul> <li><code>req.body.string</code> is expected to be a string. If this is the case, all goes well.</li> <li><code>req.body.string</code> is controlled by the client that sends the request.</li> <li>If <code>req.body.string</code> is the number <code>50</code>, the <code>rawBytes</code> would be 50 bytes:</li> <li>Before Node.js 8, the content would be uninitialized</li> <li>After Node.js 8, the content would be <code>50</code> bytes with the value <code>0</code></li> </ul> <p>Because of the missing type check, an attacker could intentionally send a number as part of the request. Using this, they can either:</p> <ul> <li>Read uninitialized memory. This will leak passwords, encryption keys and other   kinds of sensitive information. (Information leak)</li> <li>Force the program to allocate a large amount of memory. For example, when specifying   <code>500000000</code> as the input value, each request will allocate 500MB of memory.   This can be used to either exhaust the memory available of a program completely   and make it crash, or slow it down significantly. (Denial of Service)</li> </ul> <p>Both of these scenarios are considered serious security issues in a real-world web server context.</p> <p>when using <code>Buffer.from(req.body.string)</code> instead, passing a number will always throw an exception instead, giving a controlled behaviour that can always be handled by the program.</p> <p></p>"},{"location":"ejemplos/servidor/node_modules/safer-buffer/Porting-Buffer/#the-buffer-constructor-has-been-deprecated-for-a-while-is-this-really-an-issue","title":"The <code>Buffer()</code> constructor has been deprecated for a while. Is this really an issue?","text":"<p>Surveys of code in the <code>npm</code> ecosystem have shown that the <code>Buffer()</code> constructor is still widely used. This includes new code, and overall usage of such code has actually been increasing.</p>"},{"location":"ejemplos/servidor/node_modules/safer-buffer/Readme/","title":"safer-buffer","text":"<p>Modern Buffer API polyfill without footguns, working on Node.js from 0.8 to current.</p>"},{"location":"ejemplos/servidor/node_modules/safer-buffer/Readme/#how-to-use","title":"How to use?","text":"<p>First, port all <code>Buffer()</code> and <code>new Buffer()</code> calls to <code>Buffer.alloc()</code> and <code>Buffer.from()</code> API.</p> <p>Then, to achieve compatibility with outdated Node.js versions (<code>&lt;4.5.0</code> and 5.x <code>&lt;5.9.0</code>), use <code>const Buffer = require('safer-buffer').Buffer</code> in all files where you make calls to the new Buffer API. Use <code>var</code> instead of <code>const</code> if you need that for your Node.js version range support.</p> <p>Also, see the porting Buffer guide.</p>"},{"location":"ejemplos/servidor/node_modules/safer-buffer/Readme/#do-i-need-it","title":"Do I need it?","text":"<p>Hopefully, not \u2014 dropping support for outdated Node.js versions should be fine nowdays, and that is the recommended path forward. You do need to port to the <code>Buffer.alloc()</code> and <code>Buffer.from()</code> though.</p> <p>See the porting guide for a better description.</p>"},{"location":"ejemplos/servidor/node_modules/safer-buffer/Readme/#why-not-safe-buffer","title":"Why not safe-buffer?","text":"<p>In short: while <code>safe-buffer</code> serves as a polyfill for the new API, it allows old API usage and itself contains footguns.</p> <p><code>safe-buffer</code> could be used safely to get the new API while still keeping support for older Node.js versions (like this module), but while analyzing ecosystem usage of the old Buffer API I found out that <code>safe-buffer</code> is itself causing problems in some cases.</p> <p>For example, consider the following snippet:</p> <pre><code>$ cat example.unsafe.js\nconsole.log(Buffer(20))\n$ ./node-v6.13.0-linux-x64/bin/node example.unsafe.js\n&lt;Buffer 0a 00 00 00 00 00 00 00 28 13 de 02 00 00 00 00 05 00 00 00&gt;\n$ standard example.unsafe.js\nstandard: Use JavaScript Standard Style (https://standardjs.com)\n  /home/chalker/repo/safer-buffer/example.unsafe.js:2:13: 'Buffer()' was deprecated since v6. Use 'Buffer.alloc()' or 'Buffer.from()' (use 'https://www.npmjs.com/package/safe-buffer' for '&lt;4.5.0') instead.\n</code></pre> <p>This is allocates and writes to console an uninitialized chunk of memory. standard linter (among others) catch that and warn people to avoid using unsafe API.</p> <p>Let's now throw in <code>safe-buffer</code>!</p> <pre><code>$ cat example.safe-buffer.js\nconst Buffer = require('safe-buffer').Buffer\nconsole.log(Buffer(20))\n$ standard example.safe-buffer.js\n$ ./node-v6.13.0-linux-x64/bin/node example.safe-buffer.js\n&lt;Buffer 08 00 00 00 00 00 00 00 28 58 01 82 fe 7f 00 00 00 00 00 00&gt;\n</code></pre> <p>See the problem? Adding in <code>safe-buffer</code> magically removes the lint warning, but the behavior remains identi\u0441al to what we had before, and when launched on Node.js 6.x LTS \u2014 this dumps out chunks of uninitialized memory. And this code will still emit runtime warnings on Node.js 10.x and above.</p> <p>That was done by design. I first considered changing <code>safe-buffer</code>, prohibiting old API usage or emitting warnings on it, but that significantly diverges from <code>safe-buffer</code> design. After some discussion, it was decided to move my approach into a separate package, and this is that separate package.</p> <p>This footgun is not imaginary \u2014 I observed top-downloaded packages doing that kind of thing, \u00abfixing\u00bb the lint warning by blindly including <code>safe-buffer</code> without any actual changes.</p> <p>Also in some cases, even if the API was migrated to use of safe Buffer API \u2014 a random pull request can bring unsafe Buffer API usage back to the codebase by adding new calls \u2014 and that could go unnoticed even if you have a linter prohibiting that (becase of the reason stated above), and even pass CI. I also observed that being done in popular packages.</p> <p>Some examples:  * webdriverio    (a module with 548 759 downloads/month),  * websocket-stream    (218 288 d/m, fix in maxogden/websocket-stream#142),  * node-serialport    (113 138 d/m, fix in node-serialport/node-serialport#1510),  * karma    (3 973 193 d/m, fix in karma-runner/karma#2947),  * spdy-transport    (5 970 727 d/m, fix in spdy-http2/spdy-transport#53).  * And there are a lot more over the ecosystem.</p> <p>I filed a PR at mysticatea/eslint-plugin-node#110 to partially fix that (for cases when that lint rule is used), but it is a semver-major change for linter rules and presets, so it would take significant time for that to reach actual setups. It also hasn't been released yet (2018-03-20).</p> <p>Also, <code>safer-buffer</code> discourages the usage of <code>.allocUnsafe()</code>, which is often done by a mistake. It still supports it with an explicit concern barier, by placing it under <code>require('safer-buffer/dangereous')</code>.</p>"},{"location":"ejemplos/servidor/node_modules/safer-buffer/Readme/#but-isnt-throwing-bad","title":"But isn't throwing bad?","text":"<p>Not really. It's an error that could be noticed and fixed early, instead of causing havoc later like unguarded <code>new Buffer()</code> calls that end up receiving user input can do.</p> <p>This package affects only the files where <code>var Buffer = require('safer-buffer').Buffer</code> was done, so it is really simple to keep track of things and make sure that you don't mix old API usage with that. Also, CI should hint anything that you might have missed.</p> <p>New commits, if tested, won't land new usage of unsafe Buffer API this way. Node.js 10.x also deals with that by printing a runtime depecation warning.</p>"},{"location":"ejemplos/servidor/node_modules/safer-buffer/Readme/#would-it-affect-third-party-modules","title":"Would it affect third-party modules?","text":"<p>No, unless you explicitly do an awful thing like monkey-patching or overriding the built-in <code>Buffer</code>. Don't do that.</p>"},{"location":"ejemplos/servidor/node_modules/safer-buffer/Readme/#but-i-dont-want-throwing","title":"But I don't want throwing\u2026","text":"<p>That is also fine!</p> <p>Also, it could be better in some cases when you don't comprehensive enough test coverage.</p> <p>In that case \u2014 just don't override <code>Buffer</code> and use <code>var SaferBuffer = require('safer-buffer').Buffer</code> instead.</p> <p>That way, everything using <code>Buffer</code> natively would still work, but there would be two drawbacks:</p> <ul> <li><code>Buffer.from</code>/<code>Buffer.alloc</code> won't be polyfilled \u2014 use <code>SaferBuffer.from</code> and   <code>SaferBuffer.alloc</code> instead.</li> <li>You are still open to accidentally using the insecure deprecated API \u2014 use a linter to catch that.</li> </ul> <p>Note that using a linter to catch accidential <code>Buffer</code> constructor usage in this case is strongly recommended. <code>Buffer</code> is not overriden in this usecase, so linters won't get confused.</p>"},{"location":"ejemplos/servidor/node_modules/safer-buffer/Readme/#without-footguns","title":"\u00abWithout footguns\u00bb?","text":"<p>Well, it is still possible to do some things with <code>Buffer</code> API, e.g. accessing <code>.buffer</code> property on older versions and duping things from there. You shouldn't do that in your code, probabably.</p> <p>The intention is to remove the most significant footguns that affect lots of packages in the ecosystem, and to do it in the proper way.</p> <p>Also, this package doesn't protect against security issues affecting some Node.js versions, so for usage in your own production code, it is still recommended to update to a Node.js version supported by upstream.</p>"},{"location":"ejemplos/servidor/node_modules/send/","title":"send","text":"<p>Send is a library for streaming files from the file system as a http response supporting partial responses (Ranges), conditional-GET negotiation (If-Match, If-Unmodified-Since, If-None-Match, If-Modified-Since), high test coverage, and granular events which may be leveraged to take appropriate actions in your application or framework.</p> <p>Looking to serve up entire folders mapped to URLs? Try serve-static.</p>"},{"location":"ejemplos/servidor/node_modules/send/#installation","title":"Installation","text":"<p>This is a Node.js module available through the npm registry. Installation is done using the <code>npm install</code> command:</p> <pre><code>$ npm install send\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/send/#api","title":"API","text":"<pre><code>var send = require('send')\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/send/#sendreq-path-options","title":"send(req, path, [options])","text":"<p>Create a new <code>SendStream</code> for the given path to send to a <code>res</code>. The <code>req</code> is the Node.js HTTP request and the <code>path</code> is a urlencoded path to send (urlencoded, not the actual file-system path).</p>"},{"location":"ejemplos/servidor/node_modules/send/#options","title":"Options","text":""},{"location":"ejemplos/servidor/node_modules/send/#acceptranges","title":"acceptRanges","text":"<p>Enable or disable accepting ranged requests, defaults to true. Disabling this will not send <code>Accept-Ranges</code> and ignore the contents of the <code>Range</code> request header.</p>"},{"location":"ejemplos/servidor/node_modules/send/#cachecontrol","title":"cacheControl","text":"<p>Enable or disable setting <code>Cache-Control</code> response header, defaults to true. Disabling this will ignore the <code>immutable</code> and <code>maxAge</code> options.</p>"},{"location":"ejemplos/servidor/node_modules/send/#dotfiles","title":"dotfiles","text":"<p>Set how \"dotfiles\" are treated when encountered. A dotfile is a file or directory that begins with a dot (\".\"). Note this check is done on the path itself without checking if the path actually exists on the disk. If <code>root</code> is specified, only the dotfiles above the root are checked (i.e. the root itself can be within a dotfile when when set to \"deny\").</p> <ul> <li><code>'allow'</code> No special treatment for dotfiles.</li> <li><code>'deny'</code> Send a 403 for any request for a dotfile.</li> <li><code>'ignore'</code> Pretend like the dotfile does not exist and 404.</li> </ul> <p>The default value is similar to <code>'ignore'</code>, with the exception that this default will not ignore the files within a directory that begins with a dot, for backward-compatibility.</p>"},{"location":"ejemplos/servidor/node_modules/send/#end","title":"end","text":"<p>Byte offset at which the stream ends, defaults to the length of the file minus 1. The end is inclusive in the stream, meaning <code>end: 3</code> will include the 4th byte in the stream.</p>"},{"location":"ejemplos/servidor/node_modules/send/#etag","title":"etag","text":"<p>Enable or disable etag generation, defaults to true.</p>"},{"location":"ejemplos/servidor/node_modules/send/#extensions","title":"extensions","text":"<p>If a given file doesn't exist, try appending one of the given extensions, in the given order. By default, this is disabled (set to <code>false</code>). An example value that will serve extension-less HTML files: <code>['html', 'htm']</code>. This is skipped if the requested file already has an extension.</p>"},{"location":"ejemplos/servidor/node_modules/send/#immutable","title":"immutable","text":"<p>Enable or diable the <code>immutable</code> directive in the <code>Cache-Control</code> response header, defaults to <code>false</code>. If set to <code>true</code>, the <code>maxAge</code> option should also be specified to enable caching. The <code>immutable</code> directive will prevent supported clients from making conditional requests during the life of the <code>maxAge</code> option to check if the file has changed.</p>"},{"location":"ejemplos/servidor/node_modules/send/#index","title":"index","text":"<p>By default send supports \"index.html\" files, to disable this set <code>false</code> or to supply a new index pass a string or an array in preferred order.</p>"},{"location":"ejemplos/servidor/node_modules/send/#lastmodified","title":"lastModified","text":"<p>Enable or disable <code>Last-Modified</code> header, defaults to true. Uses the file system's last modified value.</p>"},{"location":"ejemplos/servidor/node_modules/send/#maxage","title":"maxAge","text":"<p>Provide a max-age in milliseconds for http caching, defaults to 0. This can also be a string accepted by the ms module.</p>"},{"location":"ejemplos/servidor/node_modules/send/#root","title":"root","text":"<p>Serve files relative to <code>path</code>.</p>"},{"location":"ejemplos/servidor/node_modules/send/#start","title":"start","text":"<p>Byte offset at which the stream starts, defaults to 0. The start is inclusive, meaning <code>start: 2</code> will include the 3rd byte in the stream.</p>"},{"location":"ejemplos/servidor/node_modules/send/#events","title":"Events","text":"<p>The <code>SendStream</code> is an event emitter and will emit the following events:</p> <ul> <li><code>error</code> an error occurred <code>(err)</code></li> <li><code>directory</code> a directory was requested <code>(res, path)</code></li> <li><code>file</code> a file was requested <code>(path, stat)</code></li> <li><code>headers</code> the headers are about to be set on a file <code>(res, path, stat)</code></li> <li><code>stream</code> file streaming has started <code>(stream)</code></li> <li><code>end</code> streaming has completed</li> </ul>"},{"location":"ejemplos/servidor/node_modules/send/#pipe","title":".pipe","text":"<p>The <code>pipe</code> method is used to pipe the response into the Node.js HTTP response object, typically <code>send(req, path, options).pipe(res)</code>.</p>"},{"location":"ejemplos/servidor/node_modules/send/#mime","title":".mime","text":"<p>The <code>mime</code> export is the global instance of of the <code>mime</code> npm module.</p> <p>This is used to configure the MIME types that are associated with file extensions as well as other options for how to resolve the MIME type of a file (like the default type to use for an unknown file extension).</p>"},{"location":"ejemplos/servidor/node_modules/send/#error-handling","title":"Error-handling","text":"<p>By default when no <code>error</code> listeners are present an automatic response will be made, otherwise you have full control over the response, aka you may show a 5xx page etc.</p>"},{"location":"ejemplos/servidor/node_modules/send/#caching","title":"Caching","text":"<p>It does not perform internal caching, you should use a reverse proxy cache such as Varnish for this, or those fancy things called CDNs. If your application is small enough that it would benefit from single-node memory caching, it's small enough that it does not need caching at all ;).</p>"},{"location":"ejemplos/servidor/node_modules/send/#debugging","title":"Debugging","text":"<p>To enable <code>debug()</code> instrumentation output export DEBUG:</p> <pre><code>$ DEBUG=send node app\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/send/#running-tests","title":"Running tests","text":"<pre><code>$ npm install\n$ npm test\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/send/#examples","title":"Examples","text":""},{"location":"ejemplos/servidor/node_modules/send/#serve-a-specific-file","title":"Serve a specific file","text":"<p>This simple example will send a specific file to all requests.</p> <pre><code>var http = require('http')\nvar send = require('send')\n\nvar server = http.createServer(function onRequest (req, res) {\n  send(req, '/path/to/index.html')\n    .pipe(res)\n})\n\nserver.listen(3000)\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/send/#serve-all-files-from-a-directory","title":"Serve all files from a directory","text":"<p>This simple example will just serve up all the files in a given directory as the top-level. For example, a request <code>GET /foo.txt</code> will send back <code>/www/public/foo.txt</code>.</p> <pre><code>var http = require('http')\nvar parseUrl = require('parseurl')\nvar send = require('send')\n\nvar server = http.createServer(function onRequest (req, res) {\n  send(req, parseUrl(req).pathname, { root: '/www/public' })\n    .pipe(res)\n})\n\nserver.listen(3000)\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/send/#custom-file-types","title":"Custom file types","text":"<pre><code>var http = require('http')\nvar parseUrl = require('parseurl')\nvar send = require('send')\n\n// Default unknown types to text/plain\nsend.mime.default_type = 'text/plain'\n\n// Add a custom type\nsend.mime.define({\n  'application/x-my-type': ['x-mt', 'x-mtt']\n})\n\nvar server = http.createServer(function onRequest (req, res) {\n  send(req, parseUrl(req).pathname, { root: '/www/public' })\n    .pipe(res)\n})\n\nserver.listen(3000)\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/send/#custom-directory-index-view","title":"Custom directory index view","text":"<p>This is a example of serving up a structure of directories with a custom function to render a listing of a directory.</p> <pre><code>var http = require('http')\nvar fs = require('fs')\nvar parseUrl = require('parseurl')\nvar send = require('send')\n\n// Transfer arbitrary files from within /www/example.com/public/*\n// with a custom handler for directory listing\nvar server = http.createServer(function onRequest (req, res) {\n  send(req, parseUrl(req).pathname, { index: false, root: '/www/public' })\n    .once('directory', directory)\n    .pipe(res)\n})\n\nserver.listen(3000)\n\n// Custom directory handler\nfunction directory (res, path) {\n  var stream = this\n\n  // redirect to trailing slash for consistent url\n  if (!stream.hasTrailingSlash()) {\n    return stream.redirect(path)\n  }\n\n  // get directory list\n  fs.readdir(path, function onReaddir (err, list) {\n    if (err) return stream.error(err)\n\n    // render an index for the directory\n    res.setHeader('Content-Type', 'text/plain; charset=UTF-8')\n    res.end(list.join('\\n') + '\\n')\n  })\n}\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/send/#serving-from-a-root-directory-with-custom-error-handling","title":"Serving from a root directory with custom error-handling","text":"<pre><code>var http = require('http')\nvar parseUrl = require('parseurl')\nvar send = require('send')\n\nvar server = http.createServer(function onRequest (req, res) {\n  // your custom error-handling logic:\n  function error (err) {\n    res.statusCode = err.status || 500\n    res.end(err.message)\n  }\n\n  // your custom headers\n  function headers (res, path, stat) {\n    // serve all files for download\n    res.setHeader('Content-Disposition', 'attachment')\n  }\n\n  // your custom directory handling logic:\n  function redirect () {\n    res.statusCode = 301\n    res.setHeader('Location', req.url + '/')\n    res.end('Redirecting to ' + req.url + '/')\n  }\n\n  // transfer arbitrary files from within\n  // /www/example.com/public/*\n  send(req, parseUrl(req).pathname, { root: '/www/public' })\n    .on('error', error)\n    .on('directory', redirect)\n    .on('headers', headers)\n    .pipe(res)\n})\n\nserver.listen(3000)\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/send/#license","title":"License","text":"<p>MIT</p>"},{"location":"ejemplos/servidor/node_modules/send/HISTORY/","title":"0.17.1 / 2019-05-10","text":"<ul> <li>Set stricter CSP header in redirect &amp; error responses</li> <li>deps: range-parser@~1.2.1</li> </ul>"},{"location":"ejemplos/servidor/node_modules/send/HISTORY/#0170-2019-05-03","title":"0.17.0 / 2019-05-03","text":"<ul> <li>deps: http-errors@~1.7.2<ul> <li>Set constructor name when possible</li> <li>Use <code>toidentifier</code> module to make class names</li> <li>deps: depd@~1.1.2</li> <li>deps: setprototypeof@1.1.1</li> <li>deps: statuses@'&gt;= 1.5.0 &lt; 2'</li> </ul> </li> <li>deps: mime@1.6.0<ul> <li>Add extensions for JPEG-2000 images</li> <li>Add new <code>font/*</code> types from IANA</li> <li>Add WASM mapping</li> <li>Update <code>.bdoc</code> to <code>application/bdoc</code></li> <li>Update <code>.bmp</code> to <code>image/bmp</code></li> <li>Update <code>.m4a</code> to <code>audio/mp4</code></li> <li>Update <code>.rtf</code> to <code>application/rtf</code></li> <li>Update <code>.wav</code> to <code>audio/wav</code></li> <li>Update <code>.xml</code> to <code>application/xml</code></li> <li>Update generic extensions to <code>application/octet-stream</code>:   <code>.deb</code>, <code>.dll</code>, <code>.dmg</code>, <code>.exe</code>, <code>.iso</code>, <code>.msi</code></li> <li>Use mime-score module to resolve extension conflicts</li> </ul> </li> <li>deps: ms@2.1.1<ul> <li>Add <code>week</code>/<code>w</code> support</li> <li>Fix negative number handling</li> </ul> </li> <li>deps: statuses@~1.5.0</li> <li>perf: remove redundant <code>path.normalize</code> call</li> </ul>"},{"location":"ejemplos/servidor/node_modules/send/HISTORY/#0162-2018-02-07","title":"0.16.2 / 2018-02-07","text":"<ul> <li>Fix incorrect end tag in default error &amp; redirects</li> <li>deps: depd@~1.1.2<ul> <li>perf: remove argument reassignment</li> </ul> </li> <li>deps: encodeurl@~1.0.2<ul> <li>Fix encoding <code>%</code> as last character</li> </ul> </li> <li>deps: statuses@~1.4.0</li> </ul>"},{"location":"ejemplos/servidor/node_modules/send/HISTORY/#0161-2017-09-29","title":"0.16.1 / 2017-09-29","text":"<ul> <li>Fix regression in edge-case behavior for empty <code>path</code></li> </ul>"},{"location":"ejemplos/servidor/node_modules/send/HISTORY/#0160-2017-09-27","title":"0.16.0 / 2017-09-27","text":"<ul> <li>Add <code>immutable</code> option</li> <li>Fix missing <code>&lt;/html&gt;</code> in default error &amp; redirects</li> <li>Use instance methods on steam to check for listeners</li> <li>deps: mime@1.4.1<ul> <li>Add 70 new types for file extensions</li> <li>Set charset as \"UTF-8\" for .js and .json</li> </ul> </li> <li>perf: improve path validation speed</li> </ul>"},{"location":"ejemplos/servidor/node_modules/send/HISTORY/#0156-2017-09-22","title":"0.15.6 / 2017-09-22","text":"<ul> <li>deps: debug@2.6.9</li> <li>perf: improve <code>If-Match</code> token parsing</li> </ul>"},{"location":"ejemplos/servidor/node_modules/send/HISTORY/#0155-2017-09-20","title":"0.15.5 / 2017-09-20","text":"<ul> <li>deps: etag@~1.8.1<ul> <li>perf: replace regular expression with substring</li> </ul> </li> <li>deps: fresh@0.5.2<ul> <li>Fix handling of modified headers with invalid dates</li> <li>perf: improve ETag match loop</li> <li>perf: improve <code>If-None-Match</code> token parsing</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/send/HISTORY/#0154-2017-08-05","title":"0.15.4 / 2017-08-05","text":"<ul> <li>deps: debug@2.6.8</li> <li>deps: depd@~1.1.1<ul> <li>Remove unnecessary <code>Buffer</code> loading</li> </ul> </li> <li>deps: http-errors@~1.6.2<ul> <li>deps: depd@1.1.1</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/send/HISTORY/#0153-2017-05-16","title":"0.15.3 / 2017-05-16","text":"<ul> <li>deps: debug@2.6.7<ul> <li>deps: ms@2.0.0</li> </ul> </li> <li>deps: ms@2.0.0</li> </ul>"},{"location":"ejemplos/servidor/node_modules/send/HISTORY/#0152-2017-04-26","title":"0.15.2 / 2017-04-26","text":"<ul> <li>deps: debug@2.6.4<ul> <li>Fix <code>DEBUG_MAX_ARRAY_LENGTH</code></li> <li>deps: ms@0.7.3</li> </ul> </li> <li>deps: ms@1.0.0</li> </ul>"},{"location":"ejemplos/servidor/node_modules/send/HISTORY/#0151-2017-03-04","title":"0.15.1 / 2017-03-04","text":"<ul> <li>Fix issue when <code>Date.parse</code> does not return <code>NaN</code> on invalid date</li> <li>Fix strict violation in broken environments</li> </ul>"},{"location":"ejemplos/servidor/node_modules/send/HISTORY/#0150-2017-02-25","title":"0.15.0 / 2017-02-25","text":"<ul> <li>Support <code>If-Match</code> and <code>If-Unmodified-Since</code> headers</li> <li>Add <code>res</code> and <code>path</code> arguments to <code>directory</code> event</li> <li>Remove usage of <code>res._headers</code> private field<ul> <li>Improves compatibility with Node.js 8 nightly</li> </ul> </li> <li>Send complete HTML document in redirect &amp; error responses</li> <li>Set default CSP header in redirect &amp; error responses</li> <li>Use <code>res.getHeaderNames()</code> when available</li> <li>Use <code>res.headersSent</code> when available</li> <li>deps: debug@2.6.1<ul> <li>Allow colors in workers</li> <li>Deprecated <code>DEBUG_FD</code> environment variable set to <code>3</code> or higher</li> <li>Fix error when running under React Native</li> <li>Use same color for same namespace</li> <li>deps: ms@0.7.2</li> </ul> </li> <li>deps: etag@~1.8.0</li> <li>deps: fresh@0.5.0<ul> <li>Fix false detection of <code>no-cache</code> request directive</li> <li>Fix incorrect result when <code>If-None-Match</code> has both <code>*</code> and ETags</li> <li>Fix weak <code>ETag</code> matching to match spec</li> <li>perf: delay reading header values until needed</li> <li>perf: enable strict mode</li> <li>perf: hoist regular expressions</li> <li>perf: remove duplicate conditional</li> <li>perf: remove unnecessary boolean coercions</li> <li>perf: skip checking modified time if ETag check failed</li> <li>perf: skip parsing <code>If-None-Match</code> when no <code>ETag</code> header</li> <li>perf: use <code>Date.parse</code> instead of <code>new Date</code></li> </ul> </li> <li>deps: http-errors@~1.6.1<ul> <li>Make <code>message</code> property enumerable for <code>HttpError</code>s</li> <li>deps: setprototypeof@1.0.3</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/send/HISTORY/#0142-2017-01-23","title":"0.14.2 / 2017-01-23","text":"<ul> <li>deps: http-errors@~1.5.1<ul> <li>deps: inherits@2.0.3</li> <li>deps: setprototypeof@1.0.2</li> <li>deps: statuses@'&gt;= 1.3.1 &lt; 2'</li> </ul> </li> <li>deps: ms@0.7.2</li> <li>deps: statuses@~1.3.1</li> </ul>"},{"location":"ejemplos/servidor/node_modules/send/HISTORY/#0141-2016-06-09","title":"0.14.1 / 2016-06-09","text":"<ul> <li>Fix redirect error when <code>path</code> contains raw non-URL characters</li> <li>Fix redirect when <code>path</code> starts with multiple forward slashes</li> </ul>"},{"location":"ejemplos/servidor/node_modules/send/HISTORY/#0140-2016-06-06","title":"0.14.0 / 2016-06-06","text":"<ul> <li>Add <code>acceptRanges</code> option</li> <li>Add <code>cacheControl</code> option</li> <li>Attempt to combine multiple ranges into single range</li> <li>Correctly inherit from <code>Stream</code> class</li> <li>Fix <code>Content-Range</code> header in 416 responses when using <code>start</code>/<code>end</code> options</li> <li>Fix <code>Content-Range</code> header missing from default 416 responses</li> <li>Ignore non-byte <code>Range</code> headers</li> <li>deps: http-errors@~1.5.0<ul> <li>Add <code>HttpError</code> export, for <code>err instanceof createError.HttpError</code></li> <li>Support new code <code>421 Misdirected Request</code></li> <li>Use <code>setprototypeof</code> module to replace <code>__proto__</code> setting</li> <li>deps: inherits@2.0.1</li> <li>deps: statuses@'&gt;= 1.3.0 &lt; 2'</li> <li>perf: enable strict mode</li> </ul> </li> <li>deps: range-parser@~1.2.0<ul> <li>Fix incorrectly returning -1 when there is at least one valid range</li> <li>perf: remove internal function</li> </ul> </li> <li>deps: statuses@~1.3.0<ul> <li>Add <code>421 Misdirected Request</code></li> <li>perf: enable strict mode</li> </ul> </li> <li>perf: remove argument reassignment</li> </ul>"},{"location":"ejemplos/servidor/node_modules/send/HISTORY/#0132-2016-03-05","title":"0.13.2 / 2016-03-05","text":"<ul> <li>Fix invalid <code>Content-Type</code> header when <code>send.mime.default_type</code> unset</li> </ul>"},{"location":"ejemplos/servidor/node_modules/send/HISTORY/#0131-2016-01-16","title":"0.13.1 / 2016-01-16","text":"<ul> <li>deps: depd@~1.1.0<ul> <li>Support web browser loading</li> <li>perf: enable strict mode</li> </ul> </li> <li>deps: destroy@~1.0.4<ul> <li>perf: enable strict mode</li> </ul> </li> <li>deps: escape-html@~1.0.3<ul> <li>perf: enable strict mode</li> <li>perf: optimize string replacement</li> <li>perf: use faster string coercion</li> </ul> </li> <li>deps: range-parser@~1.0.3<ul> <li>perf: enable strict mode</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/send/HISTORY/#0130-2015-06-16","title":"0.13.0 / 2015-06-16","text":"<ul> <li>Allow Node.js HTTP server to set <code>Date</code> response header</li> <li>Fix incorrectly removing <code>Content-Location</code> on 304 response</li> <li>Improve the default redirect response headers</li> <li>Send appropriate headers on default error response</li> <li>Use <code>http-errors</code> for standard emitted errors</li> <li>Use <code>statuses</code> instead of <code>http</code> module for status messages</li> <li>deps: escape-html@1.0.2</li> <li>deps: etag@~1.7.0<ul> <li>Improve stat performance by removing hashing</li> </ul> </li> <li>deps: fresh@0.3.0<ul> <li>Add weak <code>ETag</code> matching support</li> </ul> </li> <li>deps: on-finished@~2.3.0<ul> <li>Add defined behavior for HTTP <code>CONNECT</code> requests</li> <li>Add defined behavior for HTTP <code>Upgrade</code> requests</li> <li>deps: ee-first@1.1.1</li> </ul> </li> <li>perf: enable strict mode</li> <li>perf: remove unnecessary array allocations</li> </ul>"},{"location":"ejemplos/servidor/node_modules/send/HISTORY/#0123-2015-05-13","title":"0.12.3 / 2015-05-13","text":"<ul> <li>deps: debug@~2.2.0<ul> <li>deps: ms@0.7.1</li> </ul> </li> <li>deps: depd@~1.0.1</li> <li>deps: etag@~1.6.0</li> <li>Improve support for JXcore</li> <li>Support \"fake\" stats objects in environments without <code>fs</code></li> <li>deps: ms@0.7.1<ul> <li>Prevent extraordinarily long inputs</li> </ul> </li> <li>deps: on-finished@~2.2.1</li> </ul>"},{"location":"ejemplos/servidor/node_modules/send/HISTORY/#0122-2015-03-13","title":"0.12.2 / 2015-03-13","text":"<ul> <li>Throw errors early for invalid <code>extensions</code> or <code>index</code> options</li> <li>deps: debug@~2.1.3<ul> <li>Fix high intensity foreground color for bold</li> <li>deps: ms@0.7.0</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/send/HISTORY/#0121-2015-02-17","title":"0.12.1 / 2015-02-17","text":"<ul> <li>Fix regression sending zero-length files</li> </ul>"},{"location":"ejemplos/servidor/node_modules/send/HISTORY/#0120-2015-02-16","title":"0.12.0 / 2015-02-16","text":"<ul> <li>Always read the stat size from the file</li> <li>Fix mutating passed-in <code>options</code></li> <li>deps: mime@1.3.4</li> </ul>"},{"location":"ejemplos/servidor/node_modules/send/HISTORY/#0111-2015-01-20","title":"0.11.1 / 2015-01-20","text":"<ul> <li>Fix <code>root</code> path disclosure</li> </ul>"},{"location":"ejemplos/servidor/node_modules/send/HISTORY/#0110-2015-01-05","title":"0.11.0 / 2015-01-05","text":"<ul> <li>deps: debug@~2.1.1</li> <li>deps: etag@~1.5.1<ul> <li>deps: crc@3.2.1</li> </ul> </li> <li>deps: ms@0.7.0<ul> <li>Add <code>milliseconds</code></li> <li>Add <code>msecs</code></li> <li>Add <code>secs</code></li> <li>Add <code>mins</code></li> <li>Add <code>hrs</code></li> <li>Add <code>yrs</code></li> </ul> </li> <li>deps: on-finished@~2.2.0</li> </ul>"},{"location":"ejemplos/servidor/node_modules/send/HISTORY/#0101-2014-10-22","title":"0.10.1 / 2014-10-22","text":"<ul> <li>deps: on-finished@~2.1.1<ul> <li>Fix handling of pipelined requests</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/send/HISTORY/#0100-2014-10-15","title":"0.10.0 / 2014-10-15","text":"<ul> <li>deps: debug@~2.1.0<ul> <li>Implement <code>DEBUG_FD</code> env variable support</li> </ul> </li> <li>deps: depd@~1.0.0</li> <li>deps: etag@~1.5.0<ul> <li>Improve string performance</li> <li>Slightly improve speed for weak ETags over 1KB</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/send/HISTORY/#093-2014-09-24","title":"0.9.3 / 2014-09-24","text":"<ul> <li>deps: etag@~1.4.0<ul> <li>Support \"fake\" stats objects</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/send/HISTORY/#092-2014-09-15","title":"0.9.2 / 2014-09-15","text":"<ul> <li>deps: depd@0.4.5</li> <li>deps: etag@~1.3.1</li> <li>deps: range-parser@~1.0.2</li> </ul>"},{"location":"ejemplos/servidor/node_modules/send/HISTORY/#091-2014-09-07","title":"0.9.1 / 2014-09-07","text":"<ul> <li>deps: fresh@0.2.4</li> </ul>"},{"location":"ejemplos/servidor/node_modules/send/HISTORY/#090-2014-09-07","title":"0.9.0 / 2014-09-07","text":"<ul> <li>Add <code>lastModified</code> option</li> <li>Use <code>etag</code> to generate <code>ETag</code> header</li> <li>deps: debug@~2.0.0</li> </ul>"},{"location":"ejemplos/servidor/node_modules/send/HISTORY/#085-2014-09-04","title":"0.8.5 / 2014-09-04","text":"<ul> <li>Fix malicious path detection for empty string path</li> </ul>"},{"location":"ejemplos/servidor/node_modules/send/HISTORY/#084-2014-09-04","title":"0.8.4 / 2014-09-04","text":"<ul> <li>Fix a path traversal issue when using <code>root</code></li> </ul>"},{"location":"ejemplos/servidor/node_modules/send/HISTORY/#083-2014-08-16","title":"0.8.3 / 2014-08-16","text":"<ul> <li>deps: destroy@1.0.3<ul> <li>renamed from dethroy</li> </ul> </li> <li>deps: on-finished@2.1.0</li> </ul>"},{"location":"ejemplos/servidor/node_modules/send/HISTORY/#082-2014-08-14","title":"0.8.2 / 2014-08-14","text":"<ul> <li>Work around <code>fd</code> leak in Node.js 0.10 for <code>fs.ReadStream</code></li> <li>deps: dethroy@1.0.2</li> </ul>"},{"location":"ejemplos/servidor/node_modules/send/HISTORY/#081-2014-08-05","title":"0.8.1 / 2014-08-05","text":"<ul> <li>Fix <code>extensions</code> behavior when file already has extension</li> </ul>"},{"location":"ejemplos/servidor/node_modules/send/HISTORY/#080-2014-08-05","title":"0.8.0 / 2014-08-05","text":"<ul> <li>Add <code>extensions</code> option</li> </ul>"},{"location":"ejemplos/servidor/node_modules/send/HISTORY/#074-2014-08-04","title":"0.7.4 / 2014-08-04","text":"<ul> <li>Fix serving index files without root dir</li> </ul>"},{"location":"ejemplos/servidor/node_modules/send/HISTORY/#073-2014-07-29","title":"0.7.3 / 2014-07-29","text":"<ul> <li>Fix incorrect 403 on Windows and Node.js 0.11</li> </ul>"},{"location":"ejemplos/servidor/node_modules/send/HISTORY/#072-2014-07-27","title":"0.7.2 / 2014-07-27","text":"<ul> <li>deps: depd@0.4.4<ul> <li>Work-around v8 generating empty stack traces</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/send/HISTORY/#071-2014-07-26","title":"0.7.1 / 2014-07-26","text":"<ul> <li>deps: depd@0.4.3</li> <li>Fix exception when global <code>Error.stackTraceLimit</code> is too low</li> </ul>"},{"location":"ejemplos/servidor/node_modules/send/HISTORY/#070-2014-07-20","title":"0.7.0 / 2014-07-20","text":"<ul> <li>Deprecate <code>hidden</code> option; use <code>dotfiles</code> option</li> <li>Add <code>dotfiles</code> option</li> <li>deps: debug@1.0.4</li> <li>deps: depd@0.4.2</li> <li>Add <code>TRACE_DEPRECATION</code> environment variable</li> <li>Remove non-standard grey color from color output</li> <li>Support <code>--no-deprecation</code> argument</li> <li>Support <code>--trace-deprecation</code> argument</li> </ul>"},{"location":"ejemplos/servidor/node_modules/send/HISTORY/#060-2014-07-11","title":"0.6.0 / 2014-07-11","text":"<ul> <li>Deprecate <code>from</code> option; use <code>root</code> option</li> <li>Deprecate <code>send.etag()</code> -- use <code>etag</code> in <code>options</code></li> <li>Deprecate <code>send.hidden()</code> -- use <code>hidden</code> in <code>options</code></li> <li>Deprecate <code>send.index()</code> -- use <code>index</code> in <code>options</code></li> <li>Deprecate <code>send.maxage()</code> -- use <code>maxAge</code> in <code>options</code></li> <li>Deprecate <code>send.root()</code> -- use <code>root</code> in <code>options</code></li> <li>Cap <code>maxAge</code> value to 1 year</li> <li>deps: debug@1.0.3</li> <li>Add support for multiple wildcards in namespaces</li> </ul>"},{"location":"ejemplos/servidor/node_modules/send/HISTORY/#050-2014-06-28","title":"0.5.0 / 2014-06-28","text":"<ul> <li>Accept string for <code>maxAge</code> (converted by <code>ms</code>)</li> <li>Add <code>headers</code> event</li> <li>Include link in default redirect response</li> <li>Use <code>EventEmitter.listenerCount</code> to count listeners</li> </ul>"},{"location":"ejemplos/servidor/node_modules/send/HISTORY/#043-2014-06-11","title":"0.4.3 / 2014-06-11","text":"<ul> <li>Do not throw un-catchable error on file open race condition</li> <li>Use <code>escape-html</code> for HTML escaping</li> <li>deps: debug@1.0.2</li> <li>fix some debugging output colors on node.js 0.8</li> <li>deps: finished@1.2.2</li> <li>deps: fresh@0.2.2</li> </ul>"},{"location":"ejemplos/servidor/node_modules/send/HISTORY/#042-2014-06-09","title":"0.4.2 / 2014-06-09","text":"<ul> <li>fix \"event emitter leak\" warnings</li> <li>deps: debug@1.0.1</li> <li>deps: finished@1.2.1</li> </ul>"},{"location":"ejemplos/servidor/node_modules/send/HISTORY/#041-2014-06-02","title":"0.4.1 / 2014-06-02","text":"<ul> <li>Send <code>max-age</code> in <code>Cache-Control</code> in correct format</li> </ul>"},{"location":"ejemplos/servidor/node_modules/send/HISTORY/#040-2014-05-27","title":"0.4.0 / 2014-05-27","text":"<ul> <li>Calculate ETag with md5 for reduced collisions</li> <li>Fix wrong behavior when index file matches directory</li> <li>Ignore stream errors after request ends</li> <li>Goodbye <code>EBADF, read</code></li> <li>Skip directories in index file search</li> <li>deps: debug@0.8.1</li> </ul>"},{"location":"ejemplos/servidor/node_modules/send/HISTORY/#030-2014-04-24","title":"0.3.0 / 2014-04-24","text":"<ul> <li>Fix sending files with dots without root set</li> <li>Coerce option types</li> <li>Accept API options in options object</li> <li>Set etags to \"weak\"</li> <li>Include file path in etag</li> <li>Make \"Can't set headers after they are sent.\" catchable</li> <li>Send full entity-body for multi range requests</li> <li>Default directory access to 403 when index disabled</li> <li>Support multiple index paths</li> <li>Support \"If-Range\" header</li> <li>Control whether to generate etags</li> <li>deps: mime@1.2.11</li> </ul>"},{"location":"ejemplos/servidor/node_modules/send/HISTORY/#020-2014-01-29","title":"0.2.0 / 2014-01-29","text":"<ul> <li>update range-parser and fresh</li> </ul>"},{"location":"ejemplos/servidor/node_modules/send/HISTORY/#014-2013-08-11","title":"0.1.4 / 2013-08-11","text":"<ul> <li>update fresh</li> </ul>"},{"location":"ejemplos/servidor/node_modules/send/HISTORY/#013-2013-07-08","title":"0.1.3 / 2013-07-08","text":"<ul> <li>Revert \"Fix fd leak\"</li> </ul>"},{"location":"ejemplos/servidor/node_modules/send/HISTORY/#012-2013-07-03","title":"0.1.2 / 2013-07-03","text":"<ul> <li>Fix fd leak</li> </ul>"},{"location":"ejemplos/servidor/node_modules/send/HISTORY/#010-2012-08-25","title":"0.1.0 / 2012-08-25","text":"<ul> <li>add options parameter to send() that is passed to fs.createReadStream() [kanongil]</li> </ul>"},{"location":"ejemplos/servidor/node_modules/send/HISTORY/#004-2012-08-16","title":"0.0.4 / 2012-08-16","text":"<ul> <li>allow custom \"Accept-Ranges\" definition</li> </ul>"},{"location":"ejemplos/servidor/node_modules/send/HISTORY/#003-2012-07-16","title":"0.0.3 / 2012-07-16","text":"<ul> <li>fix normalization of the root directory. Closes #3</li> </ul>"},{"location":"ejemplos/servidor/node_modules/send/HISTORY/#002-2012-07-09","title":"0.0.2 / 2012-07-09","text":"<ul> <li>add passing of req explicitly for now (YUCK)</li> </ul>"},{"location":"ejemplos/servidor/node_modules/send/HISTORY/#001-2010-01-03","title":"0.0.1 / 2010-01-03","text":"<ul> <li>Initial release</li> </ul>"},{"location":"ejemplos/servidor/node_modules/send/node_modules/ms/license/","title":"License","text":"<p>The MIT License (MIT)</p> <p>Copyright (c) 2016 Zeit, Inc.</p> <p>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</p> <p>The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</p> <p>THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p>"},{"location":"ejemplos/servidor/node_modules/send/node_modules/ms/readme/","title":"ms","text":"<p>Use this package to easily convert various time formats to milliseconds.</p>"},{"location":"ejemplos/servidor/node_modules/send/node_modules/ms/readme/#examples","title":"Examples","text":"<pre><code>ms('2 days')  // 172800000\nms('1d')      // 86400000\nms('10h')     // 36000000\nms('2.5 hrs') // 9000000\nms('2h')      // 7200000\nms('1m')      // 60000\nms('5s')      // 5000\nms('1y')      // 31557600000\nms('100')     // 100\nms('-3 days') // -259200000\nms('-1h')     // -3600000\nms('-200')    // -200\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/send/node_modules/ms/readme/#convert-from-milliseconds","title":"Convert from Milliseconds","text":"<pre><code>ms(60000)             // \"1m\"\nms(2 * 60000)         // \"2m\"\nms(-3 * 60000)        // \"-3m\"\nms(ms('10 hours'))    // \"10h\"\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/send/node_modules/ms/readme/#time-format-written-out","title":"Time Format Written-Out","text":"<pre><code>ms(60000, { long: true })             // \"1 minute\"\nms(2 * 60000, { long: true })         // \"2 minutes\"\nms(-3 * 60000, { long: true })        // \"-3 minutes\"\nms(ms('10 hours'), { long: true })    // \"10 hours\"\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/send/node_modules/ms/readme/#features","title":"Features","text":"<ul> <li>Works both in Node.js and in the browser</li> <li>If a number is supplied to <code>ms</code>, a string with a unit is returned</li> <li>If a string that contains the number is supplied, it returns it as a number (e.g.: it returns <code>100</code> for <code>'100'</code>)</li> <li>If you pass a string with a number and a valid unit, the number of equivalent milliseconds is returned</li> </ul>"},{"location":"ejemplos/servidor/node_modules/send/node_modules/ms/readme/#related-packages","title":"Related Packages","text":"<ul> <li>ms.macro - Run <code>ms</code> as a macro at build-time.</li> </ul>"},{"location":"ejemplos/servidor/node_modules/send/node_modules/ms/readme/#caught-a-bug","title":"Caught a Bug?","text":"<ol> <li>Fork this repository to your own GitHub account and then clone it to your local device</li> <li>Link the package to the global module directory: <code>npm link</code></li> <li>Within the module you want to test your local development instance of ms, just link it to the dependencies: <code>npm link ms</code>. Instead of the default one from npm, Node.js will now use your clone of ms!</li> </ol> <p>As always, you can run the tests using: <code>npm test</code></p>"},{"location":"ejemplos/servidor/node_modules/serve-static/","title":"serve-static","text":""},{"location":"ejemplos/servidor/node_modules/serve-static/#install","title":"Install","text":"<p>This is a Node.js module available through the npm registry. Installation is done using the <code>npm install</code> command:</p> <pre><code>$ npm install serve-static\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/serve-static/#api","title":"API","text":"<pre><code>var serveStatic = require('serve-static')\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/serve-static/#servestaticroot-options","title":"serveStatic(root, options)","text":"<p>Create a new middleware function to serve files from within a given root directory. The file to serve will be determined by combining <code>req.url</code> with the provided root directory. When a file is not found, instead of sending a 404 response, this module will instead call <code>next()</code> to move on to the next middleware, allowing for stacking and fall-backs.</p>"},{"location":"ejemplos/servidor/node_modules/serve-static/#options","title":"Options","text":""},{"location":"ejemplos/servidor/node_modules/serve-static/#acceptranges","title":"acceptRanges","text":"<p>Enable or disable accepting ranged requests, defaults to true. Disabling this will not send <code>Accept-Ranges</code> and ignore the contents of the <code>Range</code> request header.</p>"},{"location":"ejemplos/servidor/node_modules/serve-static/#cachecontrol","title":"cacheControl","text":"<p>Enable or disable setting <code>Cache-Control</code> response header, defaults to true. Disabling this will ignore the <code>immutable</code> and <code>maxAge</code> options.</p>"},{"location":"ejemplos/servidor/node_modules/serve-static/#dotfiles","title":"dotfiles","text":"<p>Set how \"dotfiles\" are treated when encountered. A dotfile is a file or directory that begins with a dot (\".\"). Note this check is done on the path itself without checking if the path actually exists on the disk. If <code>root</code> is specified, only the dotfiles above the root are checked (i.e. the root itself can be within a dotfile when set to \"deny\").</p> <ul> <li><code>'allow'</code> No special treatment for dotfiles.</li> <li><code>'deny'</code> Deny a request for a dotfile and 403/<code>next()</code>.</li> <li><code>'ignore'</code> Pretend like the dotfile does not exist and 404/<code>next()</code>.</li> </ul> <p>The default value is similar to <code>'ignore'</code>, with the exception that this default will not ignore the files within a directory that begins with a dot.</p>"},{"location":"ejemplos/servidor/node_modules/serve-static/#etag","title":"etag","text":"<p>Enable or disable etag generation, defaults to true.</p>"},{"location":"ejemplos/servidor/node_modules/serve-static/#extensions","title":"extensions","text":"<p>Set file extension fallbacks. When set, if a file is not found, the given extensions will be added to the file name and search for. The first that exists will be served. Example: <code>['html', 'htm']</code>.</p> <p>The default value is <code>false</code>.</p>"},{"location":"ejemplos/servidor/node_modules/serve-static/#fallthrough","title":"fallthrough","text":"<p>Set the middleware to have client errors fall-through as just unhandled requests, otherwise forward a client error. The difference is that client errors like a bad request or a request to a non-existent file will cause this middleware to simply <code>next()</code> to your next middleware when this value is <code>true</code>. When this value is <code>false</code>, these errors (even 404s), will invoke <code>next(err)</code>.</p> <p>Typically <code>true</code> is desired such that multiple physical directories can be mapped to the same web address or for routes to fill in non-existent files.</p> <p>The value <code>false</code> can be used if this middleware is mounted at a path that is designed to be strictly a single file system directory, which allows for short-circuiting 404s for less overhead. This middleware will also reply to all methods.</p> <p>The default value is <code>true</code>.</p>"},{"location":"ejemplos/servidor/node_modules/serve-static/#immutable","title":"immutable","text":"<p>Enable or disable the <code>immutable</code> directive in the <code>Cache-Control</code> response header, defaults to <code>false</code>. If set to <code>true</code>, the <code>maxAge</code> option should also be specified to enable caching. The <code>immutable</code> directive will prevent supported clients from making conditional requests during the life of the <code>maxAge</code> option to check if the file has changed.</p>"},{"location":"ejemplos/servidor/node_modules/serve-static/#index","title":"index","text":"<p>By default this module will send \"index.html\" files in response to a request on a directory. To disable this set <code>false</code> or to supply a new index pass a string or an array in preferred order.</p>"},{"location":"ejemplos/servidor/node_modules/serve-static/#lastmodified","title":"lastModified","text":"<p>Enable or disable <code>Last-Modified</code> header, defaults to true. Uses the file system's last modified value.</p>"},{"location":"ejemplos/servidor/node_modules/serve-static/#maxage","title":"maxAge","text":"<p>Provide a max-age in milliseconds for http caching, defaults to 0. This can also be a string accepted by the ms module.</p>"},{"location":"ejemplos/servidor/node_modules/serve-static/#redirect","title":"redirect","text":"<p>Redirect to trailing \"/\" when the pathname is a dir. Defaults to <code>true</code>.</p>"},{"location":"ejemplos/servidor/node_modules/serve-static/#setheaders","title":"setHeaders","text":"<p>Function to set custom headers on response. Alterations to the headers need to occur synchronously. The function is called as <code>fn(res, path, stat)</code>, where the arguments are:</p> <ul> <li><code>res</code> the response object</li> <li><code>path</code> the file path that is being sent</li> <li><code>stat</code> the stat object of the file that is being sent</li> </ul>"},{"location":"ejemplos/servidor/node_modules/serve-static/#examples","title":"Examples","text":""},{"location":"ejemplos/servidor/node_modules/serve-static/#serve-files-with-vanilla-nodejs-http-server","title":"Serve files with vanilla node.js http server","text":"<pre><code>var finalhandler = require('finalhandler')\nvar http = require('http')\nvar serveStatic = require('serve-static')\n\n// Serve up public/ftp folder\nvar serve = serveStatic('public/ftp', { 'index': ['index.html', 'index.htm'] })\n\n// Create server\nvar server = http.createServer(function onRequest (req, res) {\n  serve(req, res, finalhandler(req, res))\n})\n\n// Listen\nserver.listen(3000)\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/serve-static/#serve-all-files-as-downloads","title":"Serve all files as downloads","text":"<pre><code>var contentDisposition = require('content-disposition')\nvar finalhandler = require('finalhandler')\nvar http = require('http')\nvar serveStatic = require('serve-static')\n\n// Serve up public/ftp folder\nvar serve = serveStatic('public/ftp', {\n  'index': false,\n  'setHeaders': setHeaders\n})\n\n// Set header to force download\nfunction setHeaders (res, path) {\n  res.setHeader('Content-Disposition', contentDisposition(path))\n}\n\n// Create server\nvar server = http.createServer(function onRequest (req, res) {\n  serve(req, res, finalhandler(req, res))\n})\n\n// Listen\nserver.listen(3000)\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/serve-static/#serving-using-express","title":"Serving using express","text":""},{"location":"ejemplos/servidor/node_modules/serve-static/#simple","title":"Simple","text":"<p>This is a simple example of using Express.</p> <pre><code>var express = require('express')\nvar serveStatic = require('serve-static')\n\nvar app = express()\n\napp.use(serveStatic('public/ftp', { 'index': ['default.html', 'default.htm'] }))\napp.listen(3000)\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/serve-static/#multiple-roots","title":"Multiple roots","text":"<p>This example shows a simple way to search through multiple directories. Files are look for in <code>public-optimized/</code> first, then <code>public/</code> second as a fallback.</p> <pre><code>var express = require('express')\nvar path = require('path')\nvar serveStatic = require('serve-static')\n\nvar app = express()\n\napp.use(serveStatic(path.join(__dirname, 'public-optimized')))\napp.use(serveStatic(path.join(__dirname, 'public')))\napp.listen(3000)\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/serve-static/#different-settings-for-paths","title":"Different settings for paths","text":"<p>This example shows how to set a different max age depending on the served file type. In this example, HTML files are not cached, while everything else is for 1 day.</p> <pre><code>var express = require('express')\nvar path = require('path')\nvar serveStatic = require('serve-static')\n\nvar app = express()\n\napp.use(serveStatic(path.join(__dirname, 'public'), {\n  maxAge: '1d',\n  setHeaders: setCustomCacheControl\n}))\n\napp.listen(3000)\n\nfunction setCustomCacheControl (res, path) {\n  if (serveStatic.mime.lookup(path) === 'text/html') {\n    // Custom Cache-Control for HTML files\n    res.setHeader('Cache-Control', 'public, max-age=0')\n  }\n}\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/serve-static/#license","title":"License","text":"<p>MIT</p>"},{"location":"ejemplos/servidor/node_modules/serve-static/HISTORY/","title":"1.14.1 / 2019-05-10","text":"<ul> <li>Set stricter CSP header in redirect response</li> <li>deps: send@0.17.1<ul> <li>deps: range-parser@~1.2.1</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/serve-static/HISTORY/#1140-2019-05-07","title":"1.14.0 / 2019-05-07","text":"<ul> <li>deps: parseurl@~1.3.3</li> <li>deps: send@0.17.0<ul> <li>deps: http-errors@~1.7.2</li> <li>deps: mime@1.6.0</li> <li>deps: ms@2.1.1</li> <li>deps: statuses@~1.5.0</li> <li>perf: remove redundant <code>path.normalize</code> call</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/serve-static/HISTORY/#1132-2018-02-07","title":"1.13.2 / 2018-02-07","text":"<ul> <li>Fix incorrect end tag in redirects</li> <li>deps: encodeurl@~1.0.2<ul> <li>Fix encoding <code>%</code> as last character</li> </ul> </li> <li>deps: send@0.16.2<ul> <li>deps: depd@~1.1.2</li> <li>deps: encodeurl@~1.0.2</li> <li>deps: statuses@~1.4.0</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/serve-static/HISTORY/#1131-2017-09-29","title":"1.13.1 / 2017-09-29","text":"<ul> <li>Fix regression when <code>root</code> is incorrectly set to a file</li> <li>deps: send@0.16.1</li> </ul>"},{"location":"ejemplos/servidor/node_modules/serve-static/HISTORY/#1130-2017-09-27","title":"1.13.0 / 2017-09-27","text":"<ul> <li>deps: send@0.16.0<ul> <li>Add 70 new types for file extensions</li> <li>Add <code>immutable</code> option</li> <li>Fix missing <code>&lt;/html&gt;</code> in default error &amp; redirects</li> <li>Set charset as \"UTF-8\" for .js and .json</li> <li>Use instance methods on steam to check for listeners</li> <li>deps: mime@1.4.1</li> <li>perf: improve path validation speed</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/serve-static/HISTORY/#1126-2017-09-22","title":"1.12.6 / 2017-09-22","text":"<ul> <li>deps: send@0.15.6<ul> <li>deps: debug@2.6.9</li> <li>perf: improve <code>If-Match</code> token parsing</li> </ul> </li> <li>perf: improve slash collapsing</li> </ul>"},{"location":"ejemplos/servidor/node_modules/serve-static/HISTORY/#1125-2017-09-21","title":"1.12.5 / 2017-09-21","text":"<ul> <li>deps: parseurl@~1.3.2<ul> <li>perf: reduce overhead for full URLs</li> <li>perf: unroll the \"fast-path\" <code>RegExp</code></li> </ul> </li> <li>deps: send@0.15.5<ul> <li>Fix handling of modified headers with invalid dates</li> <li>deps: etag@~1.8.1</li> <li>deps: fresh@0.5.2</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/serve-static/HISTORY/#1124-2017-08-05","title":"1.12.4 / 2017-08-05","text":"<ul> <li>deps: send@0.15.4<ul> <li>deps: debug@2.6.8</li> <li>deps: depd@~1.1.1</li> <li>deps: http-errors@~1.6.2</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/serve-static/HISTORY/#1123-2017-05-16","title":"1.12.3 / 2017-05-16","text":"<ul> <li>deps: send@0.15.3<ul> <li>deps: debug@2.6.7</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/serve-static/HISTORY/#1122-2017-04-26","title":"1.12.2 / 2017-04-26","text":"<ul> <li>deps: send@0.15.2<ul> <li>deps: debug@2.6.4</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/serve-static/HISTORY/#1121-2017-03-04","title":"1.12.1 / 2017-03-04","text":"<ul> <li>deps: send@0.15.1<ul> <li>Fix issue when <code>Date.parse</code> does not return <code>NaN</code> on invalid date</li> <li>Fix strict violation in broken environments</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/serve-static/HISTORY/#1120-2017-02-25","title":"1.12.0 / 2017-02-25","text":"<ul> <li>Send complete HTML document in redirect response</li> <li>Set default CSP header in redirect response</li> <li>deps: send@0.15.0<ul> <li>Fix false detection of <code>no-cache</code> request directive</li> <li>Fix incorrect result when <code>If-None-Match</code> has both <code>*</code> and ETags</li> <li>Fix weak <code>ETag</code> matching to match spec</li> <li>Remove usage of <code>res._headers</code> private field</li> <li>Support <code>If-Match</code> and <code>If-Unmodified-Since</code> headers</li> <li>Use <code>res.getHeaderNames()</code> when available</li> <li>Use <code>res.headersSent</code> when available</li> <li>deps: debug@2.6.1</li> <li>deps: etag@~1.8.0</li> <li>deps: fresh@0.5.0</li> <li>deps: http-errors@~1.6.1</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/serve-static/HISTORY/#1112-2017-01-23","title":"1.11.2 / 2017-01-23","text":"<ul> <li>deps: send@0.14.2<ul> <li>deps: http-errors@~1.5.1</li> <li>deps: ms@0.7.2</li> <li>deps: statuses@~1.3.1</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/serve-static/HISTORY/#1111-2016-06-10","title":"1.11.1 / 2016-06-10","text":"<ul> <li>Fix redirect error when <code>req.url</code> contains raw non-URL characters</li> <li>deps: send@0.14.1</li> </ul>"},{"location":"ejemplos/servidor/node_modules/serve-static/HISTORY/#1110-2016-06-07","title":"1.11.0 / 2016-06-07","text":"<ul> <li>Use status code 301 for redirects</li> <li>deps: send@0.14.0<ul> <li>Add <code>acceptRanges</code> option</li> <li>Add <code>cacheControl</code> option</li> <li>Attempt to combine multiple ranges into single range</li> <li>Correctly inherit from <code>Stream</code> class</li> <li>Fix <code>Content-Range</code> header in 416 responses when using <code>start</code>/<code>end</code> options</li> <li>Fix <code>Content-Range</code> header missing from default 416 responses</li> <li>Ignore non-byte <code>Range</code> headers</li> <li>deps: http-errors@~1.5.0</li> <li>deps: range-parser@~1.2.0</li> <li>deps: statuses@~1.3.0</li> <li>perf: remove argument reassignment</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/serve-static/HISTORY/#1103-2016-05-30","title":"1.10.3 / 2016-05-30","text":"<ul> <li>deps: send@0.13.2<ul> <li>Fix invalid <code>Content-Type</code> header when <code>send.mime.default_type</code> unset</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/serve-static/HISTORY/#1102-2016-01-19","title":"1.10.2 / 2016-01-19","text":"<ul> <li>deps: parseurl@~1.3.1<ul> <li>perf: enable strict mode</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/serve-static/HISTORY/#1101-2016-01-16","title":"1.10.1 / 2016-01-16","text":"<ul> <li>deps: escape-html@~1.0.3<ul> <li>perf: enable strict mode</li> <li>perf: optimize string replacement</li> <li>perf: use faster string coercion</li> </ul> </li> <li>deps: send@0.13.1<ul> <li>deps: depd@~1.1.0</li> <li>deps: destroy@~1.0.4</li> <li>deps: escape-html@~1.0.3</li> <li>deps: range-parser@~1.0.3</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/serve-static/HISTORY/#1100-2015-06-17","title":"1.10.0 / 2015-06-17","text":"<ul> <li>Add <code>fallthrough</code> option<ul> <li>Allows declaring this middleware is the final destination</li> <li>Provides better integration with Express patterns</li> </ul> </li> <li>Fix reading options from options prototype</li> <li>Improve the default redirect response headers</li> <li>deps: escape-html@1.0.2</li> <li>deps: send@0.13.0<ul> <li>Allow Node.js HTTP server to set <code>Date</code> response header</li> <li>Fix incorrectly removing <code>Content-Location</code> on 304 response</li> <li>Improve the default redirect response headers</li> <li>Send appropriate headers on default error response</li> <li>Use <code>http-errors</code> for standard emitted errors</li> <li>Use <code>statuses</code> instead of <code>http</code> module for status messages</li> <li>deps: escape-html@1.0.2</li> <li>deps: etag@~1.7.0</li> <li>deps: fresh@0.3.0</li> <li>deps: on-finished@~2.3.0</li> <li>perf: enable strict mode</li> <li>perf: remove unnecessary array allocations</li> </ul> </li> <li>perf: enable strict mode</li> <li>perf: remove argument reassignment</li> </ul>"},{"location":"ejemplos/servidor/node_modules/serve-static/HISTORY/#193-2015-05-14","title":"1.9.3 / 2015-05-14","text":"<ul> <li>deps: send@0.12.3<ul> <li>deps: debug@~2.2.0</li> <li>deps: depd@~1.0.1</li> <li>deps: etag@~1.6.0</li> <li>deps: ms@0.7.1</li> <li>deps: on-finished@~2.2.1</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/serve-static/HISTORY/#192-2015-03-14","title":"1.9.2 / 2015-03-14","text":"<ul> <li>deps: send@0.12.2<ul> <li>Throw errors early for invalid <code>extensions</code> or <code>index</code> options</li> <li>deps: debug@~2.1.3</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/serve-static/HISTORY/#191-2015-02-17","title":"1.9.1 / 2015-02-17","text":"<ul> <li>deps: send@0.12.1<ul> <li>Fix regression sending zero-length files</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/serve-static/HISTORY/#190-2015-02-16","title":"1.9.0 / 2015-02-16","text":"<ul> <li>deps: send@0.12.0<ul> <li>Always read the stat size from the file</li> <li>Fix mutating passed-in <code>options</code></li> <li>deps: mime@1.3.4</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/serve-static/HISTORY/#181-2015-01-20","title":"1.8.1 / 2015-01-20","text":"<ul> <li>Fix redirect loop in Node.js 0.11.14</li> <li>deps: send@0.11.1<ul> <li>Fix root path disclosure</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/serve-static/HISTORY/#180-2015-01-05","title":"1.8.0 / 2015-01-05","text":"<ul> <li>deps: send@0.11.0<ul> <li>deps: debug@~2.1.1</li> <li>deps: etag@~1.5.1</li> <li>deps: ms@0.7.0</li> <li>deps: on-finished@~2.2.0</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/serve-static/HISTORY/#172-2015-01-02","title":"1.7.2 / 2015-01-02","text":"<ul> <li>Fix potential open redirect when mounted at root</li> </ul>"},{"location":"ejemplos/servidor/node_modules/serve-static/HISTORY/#171-2014-10-22","title":"1.7.1 / 2014-10-22","text":"<ul> <li>deps: send@0.10.1<ul> <li>deps: on-finished@~2.1.1</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/serve-static/HISTORY/#170-2014-10-15","title":"1.7.0 / 2014-10-15","text":"<ul> <li>deps: send@0.10.0<ul> <li>deps: debug@~2.1.0</li> <li>deps: depd@~1.0.0</li> <li>deps: etag@~1.5.0</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/serve-static/HISTORY/#165-2015-02-04","title":"1.6.5 / 2015-02-04","text":"<ul> <li>Fix potential open redirect when mounted at root<ul> <li>Back-ported from v1.7.2</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/serve-static/HISTORY/#164-2014-10-08","title":"1.6.4 / 2014-10-08","text":"<ul> <li>Fix redirect loop when index file serving disabled</li> </ul>"},{"location":"ejemplos/servidor/node_modules/serve-static/HISTORY/#163-2014-09-24","title":"1.6.3 / 2014-09-24","text":"<ul> <li>deps: send@0.9.3<ul> <li>deps: etag@~1.4.0</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/serve-static/HISTORY/#162-2014-09-15","title":"1.6.2 / 2014-09-15","text":"<ul> <li>deps: send@0.9.2<ul> <li>deps: depd@0.4.5</li> <li>deps: etag@~1.3.1</li> <li>deps: range-parser@~1.0.2</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/serve-static/HISTORY/#161-2014-09-07","title":"1.6.1 / 2014-09-07","text":"<ul> <li>deps: send@0.9.1<ul> <li>deps: fresh@0.2.4</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/serve-static/HISTORY/#160-2014-09-07","title":"1.6.0 / 2014-09-07","text":"<ul> <li>deps: send@0.9.0<ul> <li>Add <code>lastModified</code> option</li> <li>Use <code>etag</code> to generate <code>ETag</code> header</li> <li>deps: debug@~2.0.0</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/serve-static/HISTORY/#154-2014-09-04","title":"1.5.4 / 2014-09-04","text":"<ul> <li>deps: send@0.8.5<ul> <li>Fix a path traversal issue when using <code>root</code></li> <li>Fix malicious path detection for empty string path</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/serve-static/HISTORY/#153-2014-08-17","title":"1.5.3 / 2014-08-17","text":"<ul> <li>deps: send@0.8.3</li> </ul>"},{"location":"ejemplos/servidor/node_modules/serve-static/HISTORY/#152-2014-08-14","title":"1.5.2 / 2014-08-14","text":"<ul> <li>deps: send@0.8.2<ul> <li>Work around <code>fd</code> leak in Node.js 0.10 for <code>fs.ReadStream</code></li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/serve-static/HISTORY/#151-2014-08-09","title":"1.5.1 / 2014-08-09","text":"<ul> <li>Fix parsing of weird <code>req.originalUrl</code> values</li> <li>deps: parseurl@~1.3.0</li> <li>deps: utils-merge@1.0.0</li> </ul>"},{"location":"ejemplos/servidor/node_modules/serve-static/HISTORY/#150-2014-08-05","title":"1.5.0 / 2014-08-05","text":"<ul> <li>deps: send@0.8.1<ul> <li>Add <code>extensions</code> option</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/serve-static/HISTORY/#144-2014-08-04","title":"1.4.4 / 2014-08-04","text":"<ul> <li>deps: send@0.7.4<ul> <li>Fix serving index files without root dir</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/serve-static/HISTORY/#143-2014-07-29","title":"1.4.3 / 2014-07-29","text":"<ul> <li>deps: send@0.7.3<ul> <li>Fix incorrect 403 on Windows and Node.js 0.11</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/serve-static/HISTORY/#142-2014-07-27","title":"1.4.2 / 2014-07-27","text":"<ul> <li>deps: send@0.7.2<ul> <li>deps: depd@0.4.4</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/serve-static/HISTORY/#141-2014-07-26","title":"1.4.1 / 2014-07-26","text":"<ul> <li>deps: send@0.7.1<ul> <li>deps: depd@0.4.3</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/serve-static/HISTORY/#140-2014-07-21","title":"1.4.0 / 2014-07-21","text":"<ul> <li>deps: parseurl@~1.2.0<ul> <li>Cache URLs based on original value</li> <li>Remove no-longer-needed URL mis-parse work-around</li> <li>Simplify the \"fast-path\" <code>RegExp</code></li> </ul> </li> <li>deps: send@0.7.0<ul> <li>Add <code>dotfiles</code> option</li> <li>deps: debug@1.0.4</li> <li>deps: depd@0.4.2</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/serve-static/HISTORY/#132-2014-07-11","title":"1.3.2 / 2014-07-11","text":"<ul> <li>deps: send@0.6.0<ul> <li>Cap <code>maxAge</code> value to 1 year</li> <li>deps: debug@1.0.3</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/serve-static/HISTORY/#131-2014-07-09","title":"1.3.1 / 2014-07-09","text":"<ul> <li>deps: parseurl@~1.1.3<ul> <li>faster parsing of href-only URLs</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/serve-static/HISTORY/#130-2014-06-28","title":"1.3.0 / 2014-06-28","text":"<ul> <li>Add <code>setHeaders</code> option</li> <li>Include HTML link in redirect response</li> <li>deps: send@0.5.0<ul> <li>Accept string for <code>maxAge</code> (converted by <code>ms</code>)</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/serve-static/HISTORY/#123-2014-06-11","title":"1.2.3 / 2014-06-11","text":"<ul> <li>deps: send@0.4.3<ul> <li>Do not throw un-catchable error on file open race condition</li> <li>Use <code>escape-html</code> for HTML escaping</li> <li>deps: debug@1.0.2</li> <li>deps: finished@1.2.2</li> <li>deps: fresh@0.2.2</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/serve-static/HISTORY/#122-2014-06-09","title":"1.2.2 / 2014-06-09","text":"<ul> <li>deps: send@0.4.2<ul> <li>fix \"event emitter leak\" warnings</li> <li>deps: debug@1.0.1</li> <li>deps: finished@1.2.1</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/serve-static/HISTORY/#121-2014-06-02","title":"1.2.1 / 2014-06-02","text":"<ul> <li>use <code>escape-html</code> for escaping</li> <li>deps: send@0.4.1<ul> <li>Send <code>max-age</code> in <code>Cache-Control</code> in correct format</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/serve-static/HISTORY/#120-2014-05-29","title":"1.2.0 / 2014-05-29","text":"<ul> <li>deps: send@0.4.0<ul> <li>Calculate ETag with md5 for reduced collisions</li> <li>Fix wrong behavior when index file matches directory</li> <li>Ignore stream errors after request ends</li> <li>Skip directories in index file search</li> <li>deps: debug@0.8.1</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/serve-static/HISTORY/#110-2014-04-24","title":"1.1.0 / 2014-04-24","text":"<ul> <li>Accept options directly to <code>send</code> module</li> <li>deps: send@0.3.0</li> </ul>"},{"location":"ejemplos/servidor/node_modules/serve-static/HISTORY/#104-2014-04-07","title":"1.0.4 / 2014-04-07","text":"<ul> <li>Resolve relative paths at middleware setup</li> <li>Use parseurl to parse the URL from request</li> </ul>"},{"location":"ejemplos/servidor/node_modules/serve-static/HISTORY/#103-2014-03-20","title":"1.0.3 / 2014-03-20","text":"<ul> <li>Do not rely on connect-like environments</li> </ul>"},{"location":"ejemplos/servidor/node_modules/serve-static/HISTORY/#102-2014-03-06","title":"1.0.2 / 2014-03-06","text":"<ul> <li>deps: send@0.2.0</li> </ul>"},{"location":"ejemplos/servidor/node_modules/serve-static/HISTORY/#101-2014-03-05","title":"1.0.1 / 2014-03-05","text":"<ul> <li>Add mime export for back-compat</li> </ul>"},{"location":"ejemplos/servidor/node_modules/serve-static/HISTORY/#100-2014-03-05","title":"1.0.0 / 2014-03-05","text":"<ul> <li>Genesis from <code>connect</code></li> </ul>"},{"location":"ejemplos/servidor/node_modules/setprototypeof/","title":"Polyfill for <code>Object.setPrototypeOf</code>","text":"<p>A simple cross platform implementation to set the prototype of an instianted object.  Supports all modern browsers and at least back to IE8.</p>"},{"location":"ejemplos/servidor/node_modules/setprototypeof/#usage","title":"Usage:","text":"<pre><code>$ npm install --save setprototypeof\n</code></pre> <pre><code>var setPrototypeOf = require('setprototypeof')\n\nvar obj = {}\nsetPrototypeOf(obj, {\n  foo: function () {\n    return 'bar'\n  }\n})\nobj.foo() // bar\n</code></pre> <p>TypeScript is also supported:</p> <pre><code>import setPrototypeOf = require('setprototypeof')\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/split2/","title":"Split2(matcher, mapper, options)","text":"<p>Break up a stream and reassemble it so that each line is a chunk. <code>split2</code> is inspired by @dominictarr <code>split</code> module, and it is totally API compatible with it. However, it is based on Node.js core <code>Transform</code> via <code>readable-stream</code></p> <p><code>matcher</code> may be a <code>String</code>, or a <code>RegExp</code>. Example, read every line in a file ...</p> <pre><code>  fs.createReadStream(file)\n    .pipe(split2())\n    .on('data', function (line) {\n      //each chunk now is a separate line!\n    })\n</code></pre> <p><code>split</code> takes the same arguments as <code>string.split</code> except it defaults to '/\\r?\\n/', and the optional <code>limit</code> paremeter is ignored. String#split</p> <p><code>split</code> takes an optional options object on it's third argument, which is directly passed as a Transform option.</p> <p>Additionally, the <code>.maxLength</code> and <code>.skipOverflow</code> options are implemented, which set limits on the internal buffer size and the stream's behavior when the limit is exceeded. There is no limit unless <code>maxLength</code> is set. When the internal buffer size exceeds <code>maxLength</code>, the stream emits an error by default. You may also set <code>skipOverflow</code> to true to suppress the error and instead skip past any lines that cause the internal buffer to exceed <code>maxLength</code>.</p> <p>Calling <code>.destroy</code> will make the stream emit <code>close</code>. Use this to perform cleanup logic</p> <pre><code>var splitFile = function(filename) {\n  var file = fs.createReadStream(filename)\n\n  return file\n    .pipe(split2())\n    .on('close', function() {\n      // destroy the file stream in case the split stream was destroyed\n      file.destroy()\n    })\n}\n\nvar stream = splitFile('my-file.txt')\n\nstream.destroy() // will destroy the input file stream\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/split2/#ndj-newline-delimited-json","title":"NDJ - Newline Delimited Json","text":"<p><code>split2</code> accepts a function which transforms each line.</p> <pre><code>fs.createReadStream(file)\n  .pipe(split2(JSON.parse))\n  .on('data', function (obj) {\n    //each chunk now is a js object\n  })\n  .on(\"error\", function(error) =&gt; {\n    //handling parsing errors\n  })\n</code></pre> <p>However, in @dominictarr <code>split</code> the mapper is wrapped in a try-catch, while here it is not: if your parsing logic can throw, wrap it yourself. Otherwise, you can also use the stream error handling when mapper function throw.</p>"},{"location":"ejemplos/servidor/node_modules/split2/#benchmark","title":"Benchmark","text":"<pre><code>$ node bench.js\nbenchSplit*10000: 1484.983ms\nbenchBinarySplit*10000: 1484.080ms\nbenchSplit*10000: 1407.334ms\nbenchBinarySplit*10000: 1500.281ms\n</code></pre> <p>Benchmark taken on Node 8.11.3, on a Macbook i5 2018.</p>"},{"location":"ejemplos/servidor/node_modules/split2/#license","title":"License","text":"<p>Copyright (c) 2014-2018, Matteo Collina hello@matteocollina.com</p> <p>Permission to use, copy, modify, and/or distribute this software for any purpose with or without fee is hereby granted, provided that the above copyright notice and this permission notice appear in all copies.</p> <p>THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.</p>"},{"location":"ejemplos/servidor/node_modules/statuses/","title":"Statuses","text":"<p>HTTP status utility for node.</p> <p>This module provides a list of status codes and messages sourced from a few different projects:</p> <ul> <li>The IANA Status Code Registry</li> <li>The Node.js project</li> <li>The NGINX project</li> <li>The Apache HTTP Server project</li> </ul>"},{"location":"ejemplos/servidor/node_modules/statuses/#installation","title":"Installation","text":"<p>This is a Node.js module available through the npm registry. Installation is done using the <code>npm install</code> command:</p> <pre><code>$ npm install statuses\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/statuses/#api","title":"API","text":"<pre><code>var status = require('statuses')\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/statuses/#var-code-statusinteger-string","title":"var code = status(Integer || String)","text":"<p>If <code>Integer</code> or <code>String</code> is a valid HTTP code or status message, then the appropriate <code>code</code> will be returned. Otherwise, an error will be thrown.</p> <pre><code>status(403) // =&gt; 403\nstatus('403') // =&gt; 403\nstatus('forbidden') // =&gt; 403\nstatus('Forbidden') // =&gt; 403\nstatus(306) // throws, as it's not supported by node.js\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/statuses/#statusstatus_codes","title":"status.STATUS_CODES","text":"<p>Returns an object which maps status codes to status messages, in the same format as the Node.js http module.</p>"},{"location":"ejemplos/servidor/node_modules/statuses/#statuscodes","title":"status.codes","text":"<p>Returns an array of all the status codes as <code>Integer</code>s.</p>"},{"location":"ejemplos/servidor/node_modules/statuses/#var-msg-statuscode","title":"var msg = status[code]","text":"<p>Map of <code>code</code> to <code>status message</code>. <code>undefined</code> for invalid <code>code</code>s.</p> <pre><code>status[404] // =&gt; 'Not Found'\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/statuses/#var-code-statusmsg","title":"var code = status[msg]","text":"<p>Map of <code>status message</code> to <code>code</code>. <code>msg</code> can either be title-cased or lower-cased. <code>undefined</code> for invalid <code>status message</code>s.</p> <pre><code>status['not found'] // =&gt; 404\nstatus['Not Found'] // =&gt; 404\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/statuses/#statusredirectcode","title":"status.redirect[code]","text":"<p>Returns <code>true</code> if a status code is a valid redirect status.</p> <pre><code>status.redirect[200] // =&gt; undefined\nstatus.redirect[301] // =&gt; true\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/statuses/#statusemptycode","title":"status.empty[code]","text":"<p>Returns <code>true</code> if a status code expects an empty body.</p> <pre><code>status.empty[200] // =&gt; undefined\nstatus.empty[204] // =&gt; true\nstatus.empty[304] // =&gt; true\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/statuses/#statusretrycode","title":"status.retry[code]","text":"<p>Returns <code>true</code> if you should retry the rest.</p> <pre><code>status.retry[501] // =&gt; undefined\nstatus.retry[503] // =&gt; true\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/statuses/HISTORY/","title":"1.5.0 / 2018-03-27","text":"<ul> <li>Add <code>103 Early Hints</code></li> </ul>"},{"location":"ejemplos/servidor/node_modules/statuses/HISTORY/#140-2017-10-20","title":"1.4.0 / 2017-10-20","text":"<ul> <li>Add <code>STATUS_CODES</code> export</li> </ul>"},{"location":"ejemplos/servidor/node_modules/statuses/HISTORY/#131-2016-11-11","title":"1.3.1 / 2016-11-11","text":"<ul> <li>Fix return type in JSDoc</li> </ul>"},{"location":"ejemplos/servidor/node_modules/statuses/HISTORY/#130-2016-05-17","title":"1.3.0 / 2016-05-17","text":"<ul> <li>Add <code>421 Misdirected Request</code></li> <li>perf: enable strict mode</li> </ul>"},{"location":"ejemplos/servidor/node_modules/statuses/HISTORY/#121-2015-02-01","title":"1.2.1 / 2015-02-01","text":"<ul> <li>Fix message for status 451<ul> <li><code>451 Unavailable For Legal Reasons</code></li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/statuses/HISTORY/#120-2014-09-28","title":"1.2.0 / 2014-09-28","text":"<ul> <li>Add <code>208 Already Repored</code></li> <li>Add <code>226 IM Used</code></li> <li>Add <code>306 (Unused)</code></li> <li>Add <code>415 Unable For Legal Reasons</code></li> <li>Add <code>508 Loop Detected</code></li> </ul>"},{"location":"ejemplos/servidor/node_modules/statuses/HISTORY/#111-2014-09-24","title":"1.1.1 / 2014-09-24","text":"<ul> <li>Add missing 308 to <code>codes.json</code></li> </ul>"},{"location":"ejemplos/servidor/node_modules/statuses/HISTORY/#110-2014-09-21","title":"1.1.0 / 2014-09-21","text":"<ul> <li>Add <code>codes.json</code> for universal support</li> </ul>"},{"location":"ejemplos/servidor/node_modules/statuses/HISTORY/#104-2014-08-20","title":"1.0.4 / 2014-08-20","text":"<ul> <li>Package cleanup</li> </ul>"},{"location":"ejemplos/servidor/node_modules/statuses/HISTORY/#103-2014-06-08","title":"1.0.3 / 2014-06-08","text":"<ul> <li>Add 308 to <code>.redirect</code> category</li> </ul>"},{"location":"ejemplos/servidor/node_modules/statuses/HISTORY/#102-2014-03-13","title":"1.0.2 / 2014-03-13","text":"<ul> <li>Add <code>.retry</code> category</li> </ul>"},{"location":"ejemplos/servidor/node_modules/statuses/HISTORY/#101-2014-03-12","title":"1.0.1 / 2014-03-12","text":"<ul> <li>Initial release</li> </ul>"},{"location":"ejemplos/servidor/node_modules/string_decoder/","title":"string_decoder","text":"<p>Node-core v8.9.4 string_decoder for userland</p> <p> </p> <pre><code>npm install --save string_decoder\n</code></pre> <p>Node-core string_decoder for userland</p> <p>This package is a mirror of the string_decoder implementation in Node-core.</p> <p>Full documentation may be found on the Node.js website.</p> <p>As of version 1.0.0 string_decoder uses semantic versioning.</p>"},{"location":"ejemplos/servidor/node_modules/string_decoder/#previous-versions","title":"Previous versions","text":"<p>Previous version numbers match the versions found in Node core, e.g. 0.10.24 matches Node 0.10.24, likewise 0.11.10 matches Node 0.11.10.</p>"},{"location":"ejemplos/servidor/node_modules/string_decoder/#update","title":"Update","text":"<p>The build/ directory contains a build script that will scrape the source from the nodejs/node repo given a specific Node version.</p>"},{"location":"ejemplos/servidor/node_modules/string_decoder/#streams-working-group","title":"Streams Working Group","text":"<p><code>string_decoder</code> is maintained by the Streams Working Group, which oversees the development and maintenance of the Streams API within Node.js. The responsibilities of the Streams Working Group include:</p> <ul> <li>Addressing stream issues on the Node.js issue tracker.</li> <li>Authoring and editing stream documentation within the Node.js project.</li> <li>Reviewing changes to stream subclasses within the Node.js project.</li> <li>Redirecting changes to streams from the Node.js project to this   project.</li> <li>Assisting in the implementation of stream providers within Node.js.</li> <li>Recommending versions of <code>readable-stream</code> to be included in Node.js.</li> <li>Messaging about the future of streams to give the community advance   notice of changes.</li> </ul> <p>See readable-stream for more details.</p>"},{"location":"ejemplos/servidor/node_modules/string_decoder/node_modules/safe-buffer/","title":"safe-buffer","text":""},{"location":"ejemplos/servidor/node_modules/string_decoder/node_modules/safe-buffer/#safer-nodejs-buffer-api","title":"Safer Node.js Buffer API","text":"<p>Use the new Node.js Buffer APIs (<code>Buffer.from</code>, <code>Buffer.alloc</code>, <code>Buffer.allocUnsafe</code>, <code>Buffer.allocUnsafeSlow</code>) in all versions of Node.js.</p> <p>Uses the built-in implementation when available.</p>"},{"location":"ejemplos/servidor/node_modules/string_decoder/node_modules/safe-buffer/#install","title":"install","text":"<pre><code>npm install safe-buffer\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/string_decoder/node_modules/safe-buffer/#usage","title":"usage","text":"<p>The goal of this package is to provide a safe replacement for the node.js <code>Buffer</code>.</p> <p>It's a drop-in replacement for <code>Buffer</code>. You can use it by adding one <code>require</code> line to the top of your node.js modules:</p> <pre><code>var Buffer = require('safe-buffer').Buffer\n\n// Existing buffer code will continue to work without issues:\n\nnew Buffer('hey', 'utf8')\nnew Buffer([1, 2, 3], 'utf8')\nnew Buffer(obj)\nnew Buffer(16) // create an uninitialized buffer (potentially unsafe)\n\n// But you can use these new explicit APIs to make clear what you want:\n\nBuffer.from('hey', 'utf8') // convert from many types to a Buffer\nBuffer.alloc(16) // create a zero-filled buffer (safe)\nBuffer.allocUnsafe(16) // create an uninitialized buffer (potentially unsafe)\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/string_decoder/node_modules/safe-buffer/#api","title":"api","text":""},{"location":"ejemplos/servidor/node_modules/string_decoder/node_modules/safe-buffer/#class-method-bufferfromarray","title":"Class Method: Buffer.from(array)","text":"<ul> <li><code>array</code> {Array}</li> </ul> <p>Allocates a new <code>Buffer</code> using an <code>array</code> of octets.</p> <pre><code>const buf = Buffer.from([0x62,0x75,0x66,0x66,0x65,0x72]);\n  // creates a new Buffer containing ASCII bytes\n  // ['b','u','f','f','e','r']\n</code></pre> <p>A <code>TypeError</code> will be thrown if <code>array</code> is not an <code>Array</code>.</p>"},{"location":"ejemplos/servidor/node_modules/string_decoder/node_modules/safe-buffer/#class-method-bufferfromarraybuffer-byteoffset-length","title":"Class Method: Buffer.from(arrayBuffer[, byteOffset[, length]])","text":"<ul> <li><code>arrayBuffer</code> {ArrayBuffer} The <code>.buffer</code> property of a <code>TypedArray</code> or   a <code>new ArrayBuffer()</code></li> <li><code>byteOffset</code> {Number} Default: <code>0</code></li> <li><code>length</code> {Number} Default: <code>arrayBuffer.length - byteOffset</code></li> </ul> <p>When passed a reference to the <code>.buffer</code> property of a <code>TypedArray</code> instance, the newly created <code>Buffer</code> will share the same allocated memory as the TypedArray.</p> <pre><code>const arr = new Uint16Array(2);\narr[0] = 5000;\narr[1] = 4000;\n\nconst buf = Buffer.from(arr.buffer); // shares the memory with arr;\n\nconsole.log(buf);\n  // Prints: &lt;Buffer 88 13 a0 0f&gt;\n\n// changing the TypedArray changes the Buffer also\narr[1] = 6000;\n\nconsole.log(buf);\n  // Prints: &lt;Buffer 88 13 70 17&gt;\n</code></pre> <p>The optional <code>byteOffset</code> and <code>length</code> arguments specify a memory range within the <code>arrayBuffer</code> that will be shared by the <code>Buffer</code>.</p> <pre><code>const ab = new ArrayBuffer(10);\nconst buf = Buffer.from(ab, 0, 2);\nconsole.log(buf.length);\n  // Prints: 2\n</code></pre> <p>A <code>TypeError</code> will be thrown if <code>arrayBuffer</code> is not an <code>ArrayBuffer</code>.</p>"},{"location":"ejemplos/servidor/node_modules/string_decoder/node_modules/safe-buffer/#class-method-bufferfrombuffer","title":"Class Method: Buffer.from(buffer)","text":"<ul> <li><code>buffer</code> {Buffer}</li> </ul> <p>Copies the passed <code>buffer</code> data onto a new <code>Buffer</code> instance.</p> <pre><code>const buf1 = Buffer.from('buffer');\nconst buf2 = Buffer.from(buf1);\n\nbuf1[0] = 0x61;\nconsole.log(buf1.toString());\n  // 'auffer'\nconsole.log(buf2.toString());\n  // 'buffer' (copy is not changed)\n</code></pre> <p>A <code>TypeError</code> will be thrown if <code>buffer</code> is not a <code>Buffer</code>.</p>"},{"location":"ejemplos/servidor/node_modules/string_decoder/node_modules/safe-buffer/#class-method-bufferfromstr-encoding","title":"Class Method: Buffer.from(str[, encoding])","text":"<ul> <li><code>str</code> {String} String to encode.</li> <li><code>encoding</code> {String} Encoding to use, Default: <code>'utf8'</code></li> </ul> <p>Creates a new <code>Buffer</code> containing the given JavaScript string <code>str</code>. If provided, the <code>encoding</code> parameter identifies the character encoding. If not provided, <code>encoding</code> defaults to <code>'utf8'</code>.</p> <pre><code>const buf1 = Buffer.from('this is a t\u00e9st');\nconsole.log(buf1.toString());\n  // prints: this is a t\u00e9st\nconsole.log(buf1.toString('ascii'));\n  // prints: this is a tC)st\n\nconst buf2 = Buffer.from('7468697320697320612074c3a97374', 'hex');\nconsole.log(buf2.toString());\n  // prints: this is a t\u00e9st\n</code></pre> <p>A <code>TypeError</code> will be thrown if <code>str</code> is not a string.</p>"},{"location":"ejemplos/servidor/node_modules/string_decoder/node_modules/safe-buffer/#class-method-bufferallocsize-fill-encoding","title":"Class Method: Buffer.alloc(size[, fill[, encoding]])","text":"<ul> <li><code>size</code> {Number}</li> <li><code>fill</code> {Value} Default: <code>undefined</code></li> <li><code>encoding</code> {String} Default: <code>utf8</code></li> </ul> <p>Allocates a new <code>Buffer</code> of <code>size</code> bytes. If <code>fill</code> is <code>undefined</code>, the <code>Buffer</code> will be zero-filled.</p> <pre><code>const buf = Buffer.alloc(5);\nconsole.log(buf);\n  // &lt;Buffer 00 00 00 00 00&gt;\n</code></pre> <p>The <code>size</code> must be less than or equal to the value of <code>require('buffer').kMaxLength</code> (on 64-bit architectures, <code>kMaxLength</code> is <code>(2^31)-1</code>). Otherwise, a [<code>RangeError</code>][] is thrown. A zero-length Buffer will be created if a <code>size</code> less than or equal to 0 is specified.</p> <p>If <code>fill</code> is specified, the allocated <code>Buffer</code> will be initialized by calling <code>buf.fill(fill)</code>. See [<code>buf.fill()</code>][] for more information.</p> <pre><code>const buf = Buffer.alloc(5, 'a');\nconsole.log(buf);\n  // &lt;Buffer 61 61 61 61 61&gt;\n</code></pre> <p>If both <code>fill</code> and <code>encoding</code> are specified, the allocated <code>Buffer</code> will be initialized by calling <code>buf.fill(fill, encoding)</code>. For example:</p> <pre><code>const buf = Buffer.alloc(11, 'aGVsbG8gd29ybGQ=', 'base64');\nconsole.log(buf);\n  // &lt;Buffer 68 65 6c 6c 6f 20 77 6f 72 6c 64&gt;\n</code></pre> <p>Calling <code>Buffer.alloc(size)</code> can be significantly slower than the alternative <code>Buffer.allocUnsafe(size)</code> but ensures that the newly created <code>Buffer</code> instance contents will never contain sensitive data.</p> <p>A <code>TypeError</code> will be thrown if <code>size</code> is not a number.</p>"},{"location":"ejemplos/servidor/node_modules/string_decoder/node_modules/safe-buffer/#class-method-bufferallocunsafesize","title":"Class Method: Buffer.allocUnsafe(size)","text":"<ul> <li><code>size</code> {Number}</li> </ul> <p>Allocates a new non-zero-filled <code>Buffer</code> of <code>size</code> bytes.  The <code>size</code> must be less than or equal to the value of <code>require('buffer').kMaxLength</code> (on 64-bit architectures, <code>kMaxLength</code> is <code>(2^31)-1</code>). Otherwise, a [<code>RangeError</code>][] is thrown. A zero-length Buffer will be created if a <code>size</code> less than or equal to 0 is specified.</p> <p>The underlying memory for <code>Buffer</code> instances created in this way is not initialized. The contents of the newly created <code>Buffer</code> are unknown and may contain sensitive data. Use [<code>buf.fill(0)</code>][] to initialize such <code>Buffer</code> instances to zeroes.</p> <pre><code>const buf = Buffer.allocUnsafe(5);\nconsole.log(buf);\n  // &lt;Buffer 78 e0 82 02 01&gt;\n  // (octets will be different, every time)\nbuf.fill(0);\nconsole.log(buf);\n  // &lt;Buffer 00 00 00 00 00&gt;\n</code></pre> <p>A <code>TypeError</code> will be thrown if <code>size</code> is not a number.</p> <p>Note that the <code>Buffer</code> module pre-allocates an internal <code>Buffer</code> instance of size <code>Buffer.poolSize</code> that is used as a pool for the fast allocation of new <code>Buffer</code> instances created using <code>Buffer.allocUnsafe(size)</code> (and the deprecated <code>new Buffer(size)</code> constructor) only when <code>size</code> is less than or equal to <code>Buffer.poolSize &gt;&gt; 1</code> (floor of <code>Buffer.poolSize</code> divided by two). The default value of <code>Buffer.poolSize</code> is <code>8192</code> but can be modified.</p> <p>Use of this pre-allocated internal memory pool is a key difference between calling <code>Buffer.alloc(size, fill)</code> vs. <code>Buffer.allocUnsafe(size).fill(fill)</code>. Specifically, <code>Buffer.alloc(size, fill)</code> will never use the internal Buffer pool, while <code>Buffer.allocUnsafe(size).fill(fill)</code> will use the internal Buffer pool if <code>size</code> is less than or equal to half <code>Buffer.poolSize</code>. The difference is subtle but can be important when an application requires the additional performance that <code>Buffer.allocUnsafe(size)</code> provides.</p>"},{"location":"ejemplos/servidor/node_modules/string_decoder/node_modules/safe-buffer/#class-method-bufferallocunsafeslowsize","title":"Class Method: Buffer.allocUnsafeSlow(size)","text":"<ul> <li><code>size</code> {Number}</li> </ul> <p>Allocates a new non-zero-filled and non-pooled <code>Buffer</code> of <code>size</code> bytes.  The <code>size</code> must be less than or equal to the value of <code>require('buffer').kMaxLength</code> (on 64-bit architectures, <code>kMaxLength</code> is <code>(2^31)-1</code>). Otherwise, a [<code>RangeError</code>][] is thrown. A zero-length Buffer will be created if a <code>size</code> less than or equal to 0 is specified.</p> <p>The underlying memory for <code>Buffer</code> instances created in this way is not initialized. The contents of the newly created <code>Buffer</code> are unknown and may contain sensitive data. Use [<code>buf.fill(0)</code>][] to initialize such <code>Buffer</code> instances to zeroes.</p> <p>When using <code>Buffer.allocUnsafe()</code> to allocate new <code>Buffer</code> instances, allocations under 4KB are, by default, sliced from a single pre-allocated <code>Buffer</code>. This allows applications to avoid the garbage collection overhead of creating many individually allocated Buffers. This approach improves both performance and memory usage by eliminating the need to track and cleanup as many <code>Persistent</code> objects.</p> <p>However, in the case where a developer may need to retain a small chunk of memory from a pool for an indeterminate amount of time, it may be appropriate to create an un-pooled Buffer instance using <code>Buffer.allocUnsafeSlow()</code> then copy out the relevant bits.</p> <pre><code>// need to keep around a few small chunks of memory\nconst store = [];\n\nsocket.on('readable', () =&gt; {\n  const data = socket.read();\n  // allocate for retained data\n  const sb = Buffer.allocUnsafeSlow(10);\n  // copy the data into the new allocation\n  data.copy(sb, 0, 0, 10);\n  store.push(sb);\n});\n</code></pre> <p>Use of <code>Buffer.allocUnsafeSlow()</code> should be used only as a last resort after a developer has observed undue memory retention in their applications.</p> <p>A <code>TypeError</code> will be thrown if <code>size</code> is not a number.</p>"},{"location":"ejemplos/servidor/node_modules/string_decoder/node_modules/safe-buffer/#all-the-rest","title":"All the Rest","text":"<p>The rest of the <code>Buffer</code> API is exactly the same as in node.js. See the docs.</p>"},{"location":"ejemplos/servidor/node_modules/string_decoder/node_modules/safe-buffer/#related-links","title":"Related links","text":"<ul> <li>Node.js issue: Buffer(number) is unsafe</li> <li>Node.js Enhancement Proposal: Buffer.from/Buffer.alloc/Buffer.zalloc/Buffer() soft-deprecate</li> </ul>"},{"location":"ejemplos/servidor/node_modules/string_decoder/node_modules/safe-buffer/#why-is-buffer-unsafe","title":"Why is <code>Buffer</code> unsafe?","text":"<p>Today, the node.js <code>Buffer</code> constructor is overloaded to handle many different argument types like <code>String</code>, <code>Array</code>, <code>Object</code>, <code>TypedArrayView</code> (<code>Uint8Array</code>, etc.), <code>ArrayBuffer</code>, and also <code>Number</code>.</p> <p>The API is optimized for convenience: you can throw any type at it, and it will try to do what you want.</p> <p>Because the Buffer constructor is so powerful, you often see code like this:</p> <pre><code>// Convert UTF-8 strings to hex\nfunction toHex (str) {\n  return new Buffer(str).toString('hex')\n}\n</code></pre> <p>But what happens if <code>toHex</code> is called with a <code>Number</code> argument?</p>"},{"location":"ejemplos/servidor/node_modules/string_decoder/node_modules/safe-buffer/#remote-memory-disclosure","title":"Remote Memory Disclosure","text":"<p>If an attacker can make your program call the <code>Buffer</code> constructor with a <code>Number</code> argument, then they can make it allocate uninitialized memory from the node.js process. This could potentially disclose TLS private keys, user data, or database passwords.</p> <p>When the <code>Buffer</code> constructor is passed a <code>Number</code> argument, it returns an UNINITIALIZED block of memory of the specified <code>size</code>. When you create a <code>Buffer</code> like this, you MUST overwrite the contents before returning it to the user.</p> <p>From the node.js docs:</p> <p><code>new Buffer(size)</code></p> <ul> <li><code>size</code> Number</li> </ul> <p>The underlying memory for <code>Buffer</code> instances created in this way is not initialized. The contents of a newly created <code>Buffer</code> are unknown and could contain sensitive data. Use <code>buf.fill(0)</code> to initialize a Buffer to zeroes.</p> <p>(Emphasis our own.)</p> <p>Whenever the programmer intended to create an uninitialized <code>Buffer</code> you often see code like this:</p> <pre><code>var buf = new Buffer(16)\n\n// Immediately overwrite the uninitialized buffer with data from another buffer\nfor (var i = 0; i &lt; buf.length; i++) {\n  buf[i] = otherBuf[i]\n}\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/string_decoder/node_modules/safe-buffer/#would-this-ever-be-a-problem-in-real-code","title":"Would this ever be a problem in real code?","text":"<p>Yes. It's surprisingly common to forget to check the type of your variables in a dynamically-typed language like JavaScript.</p> <p>Usually the consequences of assuming the wrong type is that your program crashes with an uncaught exception. But the failure mode for forgetting to check the type of arguments to the <code>Buffer</code> constructor is more catastrophic.</p> <p>Here's an example of a vulnerable service that takes a JSON payload and converts it to hex:</p> <pre><code>// Take a JSON payload {str: \"some string\"} and convert it to hex\nvar server = http.createServer(function (req, res) {\n  var data = ''\n  req.setEncoding('utf8')\n  req.on('data', function (chunk) {\n    data += chunk\n  })\n  req.on('end', function () {\n    var body = JSON.parse(data)\n    res.end(new Buffer(body.str).toString('hex'))\n  })\n})\n\nserver.listen(8080)\n</code></pre> <p>In this example, an http client just has to send:</p> <pre><code>{\n  \"str\": 1000\n}\n</code></pre> <p>and it will get back 1,000 bytes of uninitialized memory from the server.</p> <p>This is a very serious bug. It's similar in severity to the the Heartbleed bug that allowed disclosure of OpenSSL process memory by remote attackers.</p>"},{"location":"ejemplos/servidor/node_modules/string_decoder/node_modules/safe-buffer/#which-real-world-packages-were-vulnerable","title":"Which real-world packages were vulnerable?","text":""},{"location":"ejemplos/servidor/node_modules/string_decoder/node_modules/safe-buffer/#bittorrent-dht","title":"<code>bittorrent-dht</code>","text":"<p>Mathias Buus and I (Feross Aboukhadijeh) found this issue in one of our own packages, <code>bittorrent-dht</code>. The bug would allow anyone on the internet to send a series of messages to a user of <code>bittorrent-dht</code> and get them to reveal 20 bytes at a time of uninitialized memory from the node.js process.</p> <p>Here's the commit that fixed it. We released a new fixed version, created a Node Security Project disclosure, and deprecated all vulnerable versions on npm so users will get a warning to upgrade to a newer version.</p>"},{"location":"ejemplos/servidor/node_modules/string_decoder/node_modules/safe-buffer/#ws","title":"<code>ws</code>","text":"<p>That got us wondering if there were other vulnerable packages. Sure enough, within a short period of time, we found the same issue in <code>ws</code>, the most popular WebSocket implementation in node.js.</p> <p>If certain APIs were called with <code>Number</code> parameters instead of <code>String</code> or <code>Buffer</code> as expected, then uninitialized server memory would be disclosed to the remote peer.</p> <p>These were the vulnerable methods:</p> <pre><code>socket.send(number)\nsocket.ping(number)\nsocket.pong(number)\n</code></pre> <p>Here's a vulnerable socket server with some echo functionality:</p> <pre><code>server.on('connection', function (socket) {\n  socket.on('message', function (message) {\n    message = JSON.parse(message)\n    if (message.type === 'echo') {\n      socket.send(message.data) // send back the user's message\n    }\n  })\n})\n</code></pre> <p><code>socket.send(number)</code> called on the server, will disclose server memory.</p> <p>Here's the release where the issue was fixed, with a more detailed explanation. Props to Arnout Kazemier for the quick fix. Here's the Node Security Project disclosure.</p>"},{"location":"ejemplos/servidor/node_modules/string_decoder/node_modules/safe-buffer/#whats-the-solution","title":"What's the solution?","text":"<p>It's important that node.js offers a fast way to get memory otherwise performance-critical applications would needlessly get a lot slower.</p> <p>But we need a better way to signal our intent as programmers. When we want uninitialized memory, we should request it explicitly.</p> <p>Sensitive functionality should not be packed into a developer-friendly API that loosely accepts many different types. This type of API encourages the lazy practice of passing variables in without checking the type very carefully.</p>"},{"location":"ejemplos/servidor/node_modules/string_decoder/node_modules/safe-buffer/#a-new-api-bufferallocunsafenumber","title":"A new API: <code>Buffer.allocUnsafe(number)</code>","text":"<p>The functionality of creating buffers with uninitialized memory should be part of another API. We propose <code>Buffer.allocUnsafe(number)</code>. This way, it's not part of an API that frequently gets user input of all sorts of different types passed into it.</p> <pre><code>var buf = Buffer.allocUnsafe(16) // careful, uninitialized memory!\n\n// Immediately overwrite the uninitialized buffer with data from another buffer\nfor (var i = 0; i &lt; buf.length; i++) {\n  buf[i] = otherBuf[i]\n}\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/string_decoder/node_modules/safe-buffer/#how-do-we-fix-nodejs-core","title":"How do we fix node.js core?","text":"<p>We sent a PR to node.js core (merged as <code>semver-major</code>) which defends against one case:</p> <pre><code>var str = 16\nnew Buffer(str, 'utf8')\n</code></pre> <p>In this situation, it's implied that the programmer intended the first argument to be a string, since they passed an encoding as a second argument. Today, node.js will allocate uninitialized memory in the case of <code>new Buffer(number, encoding)</code>, which is probably not what the programmer intended.</p> <p>But this is only a partial solution, since if the programmer does <code>new Buffer(variable)</code> (without an <code>encoding</code> parameter) there's no way to know what they intended. If <code>variable</code> is sometimes a number, then uninitialized memory will sometimes be returned.</p>"},{"location":"ejemplos/servidor/node_modules/string_decoder/node_modules/safe-buffer/#whats-the-real-long-term-fix","title":"What's the real long-term fix?","text":"<p>We could deprecate and remove <code>new Buffer(number)</code> and use <code>Buffer.allocUnsafe(number)</code> when we need uninitialized memory. But that would break 1000s of packages.</p> <p>~~We believe the best solution is to:~~</p> <p>~~1. Change <code>new Buffer(number)</code> to return safe, zeroed-out memory~~</p> <p>~~2. Create a new API for creating uninitialized Buffers. We propose: <code>Buffer.allocUnsafe(number)</code>~~</p>"},{"location":"ejemplos/servidor/node_modules/string_decoder/node_modules/safe-buffer/#update","title":"Update","text":"<p>We now support adding three new APIs:</p> <ul> <li><code>Buffer.from(value)</code> - convert from any type to a buffer</li> <li><code>Buffer.alloc(size)</code> - create a zero-filled buffer</li> <li><code>Buffer.allocUnsafe(size)</code> - create an uninitialized buffer with given size</li> </ul> <p>This solves the core problem that affected <code>ws</code> and <code>bittorrent-dht</code> which is <code>Buffer(variable)</code> getting tricked into taking a number argument.</p> <p>This way, existing code continues working and the impact on the npm ecosystem will be minimal. Over time, npm maintainers can migrate performance-critical code to use <code>Buffer.allocUnsafe(number)</code> instead of <code>new Buffer(number)</code>.</p>"},{"location":"ejemplos/servidor/node_modules/string_decoder/node_modules/safe-buffer/#conclusion","title":"Conclusion","text":"<p>We think there's a serious design issue with the <code>Buffer</code> API as it exists today. It promotes insecure software by putting high-risk functionality into a convenient API with friendly \"developer ergonomics\".</p> <p>This wasn't merely a theoretical exercise because we found the issue in some of the most popular npm packages.</p> <p>Fortunately, there's an easy fix that can be applied today. Use <code>safe-buffer</code> in place of <code>buffer</code>.</p> <pre><code>var Buffer = require('safe-buffer').Buffer\n</code></pre> <p>Eventually, we hope that node.js core can switch to this new, safer behavior. We believe the impact on the ecosystem would be minimal since it's not a breaking change. Well-maintained, popular packages would be updated to use <code>Buffer.alloc</code> quickly, while older, insecure packages would magically become safe from this attack vector.</p>"},{"location":"ejemplos/servidor/node_modules/string_decoder/node_modules/safe-buffer/#links","title":"links","text":"<ul> <li>Node.js PR: buffer: throw if both length and enc are passed</li> <li>Node Security Project disclosure for <code>ws</code></li> <li>Node Security Project disclosure for<code>bittorrent-dht</code></li> </ul>"},{"location":"ejemplos/servidor/node_modules/string_decoder/node_modules/safe-buffer/#credit","title":"credit","text":"<p>The original issues in <code>bittorrent-dht</code> (disclosure) and <code>ws</code> (disclosure) were discovered by Mathias Buus and Feross Aboukhadijeh.</p> <p>Thanks to Adam Baldwin for helping disclose these issues and for his work running the Node Security Project.</p> <p>Thanks to John Hiesey for proofreading this README and auditing the code.</p>"},{"location":"ejemplos/servidor/node_modules/string_decoder/node_modules/safe-buffer/#license","title":"license","text":"<p>MIT. Copyright (C) Feross Aboukhadijeh</p>"},{"location":"ejemplos/servidor/node_modules/toidentifier/","title":"toidentifier","text":"<p>Convert a string of words to a JavaScript identifier</p>"},{"location":"ejemplos/servidor/node_modules/toidentifier/#install","title":"Install","text":"<p>This is a Node.js module available through the npm registry. Installation is done using the <code>npm install</code> command:</p> <pre><code>$ npm install toidentifier\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/toidentifier/#example","title":"Example","text":"<pre><code>var toIdentifier = require('toidentifier')\n\nconsole.log(toIdentifier('Bad Request'))\n// =&gt; \"BadRequest\"\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/toidentifier/#api","title":"API","text":"<p>This CommonJS module exports a single default function: <code>toIdentifier</code>.</p>"},{"location":"ejemplos/servidor/node_modules/toidentifier/#toidentifierstring","title":"toIdentifier(string)","text":"<p>Given a string as the argument, it will be transformed according to the following rules and the new string will be returned:</p> <ol> <li>Split into words separated by space characters (<code>0x20</code>).</li> <li>Upper case the first character of each word.</li> <li>Join the words together with no separator.</li> <li>Remove all non-word (<code>[0-9a-z_]</code>) characters.</li> </ol>"},{"location":"ejemplos/servidor/node_modules/toidentifier/#license","title":"License","text":"<p>MIT</p>"},{"location":"ejemplos/servidor/node_modules/toidentifier/#_1","title":"toidentifier","text":""},{"location":"ejemplos/servidor/node_modules/type-is/","title":"type-is","text":"<p>Infer the content-type of a request.</p>"},{"location":"ejemplos/servidor/node_modules/type-is/#install","title":"Install","text":"<p>This is a Node.js module available through the npm registry. Installation is done using the <code>npm install</code> command:</p> <pre><code>$ npm install type-is\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/type-is/#api","title":"API","text":"<pre><code>var http = require('http')\nvar typeis = require('type-is')\n\nhttp.createServer(function (req, res) {\n  var istext = typeis(req, ['text/*'])\n  res.end('you ' + (istext ? 'sent' : 'did not send') + ' me text')\n})\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/type-is/#typeisrequest-types","title":"typeis(request, types)","text":"<p>Checks if the <code>request</code> is one of the <code>types</code>. If the request has no body, even if there is a <code>Content-Type</code> header, then <code>null</code> is returned. If the <code>Content-Type</code> header is invalid or does not matches any of the <code>types</code>, then <code>false</code> is returned. Otherwise, a string of the type that matched is returned.</p> <p>The <code>request</code> argument is expected to be a Node.js HTTP request. The <code>types</code> argument is an array of type strings.</p> <p>Each type in the <code>types</code> array can be one of the following:</p> <ul> <li>A file extension name such as <code>json</code>. This name will be returned if matched.</li> <li>A mime type such as <code>application/json</code>.</li> <li>A mime type with a wildcard such as <code>*/*</code> or <code>*/json</code> or <code>application/*</code>.   The full mime type will be returned if matched.</li> <li>A suffix such as <code>+json</code>. This can be combined with a wildcard such as   <code>*/vnd+json</code> or <code>application/*+json</code>. The full mime type will be returned   if matched.</li> </ul> <p>Some examples to illustrate the inputs and returned value:</p> <pre><code>// req.headers.content-type = 'application/json'\n\ntypeis(req, ['json']) // =&gt; 'json'\ntypeis(req, ['html', 'json']) // =&gt; 'json'\ntypeis(req, ['application/*']) // =&gt; 'application/json'\ntypeis(req, ['application/json']) // =&gt; 'application/json'\n\ntypeis(req, ['html']) // =&gt; false\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/type-is/#typeishasbodyrequest","title":"typeis.hasBody(request)","text":"<p>Returns a Boolean if the given <code>request</code> has a body, regardless of the <code>Content-Type</code> header.</p> <p>Having a body has no relation to how large the body is (it may be 0 bytes). This is similar to how file existence works. If a body does exist, then this indicates that there is data to read from the Node.js request stream.</p> <pre><code>if (typeis.hasBody(req)) {\n  // read the body, since there is one\n\n  req.on('data', function (chunk) {\n    // ...\n  })\n}\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/type-is/#typeisismediatype-types","title":"typeis.is(mediaType, types)","text":"<p>Checks if the <code>mediaType</code> is one of the <code>types</code>. If the <code>mediaType</code> is invalid or does not matches any of the <code>types</code>, then <code>false</code> is returned. Otherwise, a string of the type that matched is returned.</p> <p>The <code>mediaType</code> argument is expected to be a media type string. The <code>types</code> argument is an array of type strings.</p> <p>Each type in the <code>types</code> array can be one of the following:</p> <ul> <li>A file extension name such as <code>json</code>. This name will be returned if matched.</li> <li>A mime type such as <code>application/json</code>.</li> <li>A mime type with a wildcard such as <code>*/*</code> or <code>*/json</code> or <code>application/*</code>.   The full mime type will be returned if matched.</li> <li>A suffix such as <code>+json</code>. This can be combined with a wildcard such as   <code>*/vnd+json</code> or <code>application/*+json</code>. The full mime type will be returned   if matched.</li> </ul> <p>Some examples to illustrate the inputs and returned value:</p> <pre><code>var mediaType = 'application/json'\n\ntypeis.is(mediaType, ['json']) // =&gt; 'json'\ntypeis.is(mediaType, ['html', 'json']) // =&gt; 'json'\ntypeis.is(mediaType, ['application/*']) // =&gt; 'application/json'\ntypeis.is(mediaType, ['application/json']) // =&gt; 'application/json'\n\ntypeis.is(mediaType, ['html']) // =&gt; false\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/type-is/#examples","title":"Examples","text":""},{"location":"ejemplos/servidor/node_modules/type-is/#example-body-parser","title":"Example body parser","text":"<pre><code>var express = require('express')\nvar typeis = require('type-is')\n\nvar app = express()\n\napp.use(function bodyParser (req, res, next) {\n  if (!typeis.hasBody(req)) {\n    return next()\n  }\n\n  switch (typeis(req, ['urlencoded', 'json', 'multipart'])) {\n    case 'urlencoded':\n      // parse urlencoded body\n      throw new Error('implement urlencoded body parsing')\n    case 'json':\n      // parse json body\n      throw new Error('implement json body parsing')\n    case 'multipart':\n      // parse multipart body\n      throw new Error('implement multipart body parsing')\n    default:\n      // 415 error code\n      res.statusCode = 415\n      res.end()\n      break\n  }\n})\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/type-is/#license","title":"License","text":"<p>MIT</p>"},{"location":"ejemplos/servidor/node_modules/type-is/HISTORY/","title":"1.6.18 / 2019-04-26","text":"<ul> <li>Fix regression passing request object to <code>typeis.is</code></li> </ul>"},{"location":"ejemplos/servidor/node_modules/type-is/HISTORY/#1617-2019-04-25","title":"1.6.17 / 2019-04-25","text":"<ul> <li>deps: mime-types@~2.1.24<ul> <li>Add Apple file extensions from IANA</li> <li>Add extension <code>.csl</code> to <code>application/vnd.citationstyles.style+xml</code></li> <li>Add extension <code>.es</code> to <code>application/ecmascript</code></li> <li>Add extension <code>.nq</code> to <code>application/n-quads</code></li> <li>Add extension <code>.nt</code> to <code>application/n-triples</code></li> <li>Add extension <code>.owl</code> to <code>application/rdf+xml</code></li> <li>Add extensions <code>.siv</code> and <code>.sieve</code> to <code>application/sieve</code></li> <li>Add extensions from IANA for <code>image/*</code> types</li> <li>Add extensions from IANA for <code>model/*</code> types</li> <li>Add extensions to HEIC image types</li> <li>Add new mime types</li> <li>Add <code>text/mdx</code> with extension <code>.mdx</code></li> </ul> </li> <li>perf: prevent internal <code>throw</code> on invalid type</li> </ul>"},{"location":"ejemplos/servidor/node_modules/type-is/HISTORY/#1616-2018-02-16","title":"1.6.16 / 2018-02-16","text":"<ul> <li>deps: mime-types@~2.1.18<ul> <li>Add <code>application/raml+yaml</code> with extension <code>.raml</code></li> <li>Add <code>application/wasm</code> with extension <code>.wasm</code></li> <li>Add <code>text/shex</code> with extension <code>.shex</code></li> <li>Add extensions for JPEG-2000 images</li> <li>Add extensions from IANA for <code>message/*</code> types</li> <li>Add extension <code>.mjs</code> to <code>application/javascript</code></li> <li>Add extension <code>.wadl</code> to <code>application/vnd.sun.wadl+xml</code></li> <li>Add extension <code>.gz</code> to <code>application/gzip</code></li> <li>Add glTF types and extensions</li> <li>Add new mime types</li> <li>Update extensions <code>.md</code> and <code>.markdown</code> to be <code>text/markdown</code></li> <li>Update font MIME types</li> <li>Update <code>text/hjson</code> to registered <code>application/hjson</code></li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/type-is/HISTORY/#1615-2017-03-31","title":"1.6.15 / 2017-03-31","text":"<ul> <li>deps: mime-types@~2.1.15<ul> <li>Add new mime types</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/type-is/HISTORY/#1614-2016-11-18","title":"1.6.14 / 2016-11-18","text":"<ul> <li>deps: mime-types@~2.1.13<ul> <li>Add new mime types</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/type-is/HISTORY/#1613-2016-05-18","title":"1.6.13 / 2016-05-18","text":"<ul> <li>deps: mime-types@~2.1.11<ul> <li>Add new mime types</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/type-is/HISTORY/#1612-2016-02-28","title":"1.6.12 / 2016-02-28","text":"<ul> <li>deps: mime-types@~2.1.10<ul> <li>Add new mime types</li> <li>Fix extension of <code>application/dash+xml</code></li> <li>Update primary extension for <code>audio/mp4</code></li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/type-is/HISTORY/#1611-2016-01-29","title":"1.6.11 / 2016-01-29","text":"<ul> <li>deps: mime-types@~2.1.9<ul> <li>Add new mime types</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/type-is/HISTORY/#1610-2015-12-01","title":"1.6.10 / 2015-12-01","text":"<ul> <li>deps: mime-types@~2.1.8<ul> <li>Add new mime types</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/type-is/HISTORY/#169-2015-09-27","title":"1.6.9 / 2015-09-27","text":"<ul> <li>deps: mime-types@~2.1.7<ul> <li>Add new mime types</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/type-is/HISTORY/#168-2015-09-04","title":"1.6.8 / 2015-09-04","text":"<ul> <li>deps: mime-types@~2.1.6<ul> <li>Add new mime types</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/type-is/HISTORY/#167-2015-08-20","title":"1.6.7 / 2015-08-20","text":"<ul> <li>Fix type error when given invalid type to match against</li> <li>deps: mime-types@~2.1.5<ul> <li>Add new mime types</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/type-is/HISTORY/#166-2015-07-31","title":"1.6.6 / 2015-07-31","text":"<ul> <li>deps: mime-types@~2.1.4<ul> <li>Add new mime types</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/type-is/HISTORY/#165-2015-07-16","title":"1.6.5 / 2015-07-16","text":"<ul> <li>deps: mime-types@~2.1.3<ul> <li>Add new mime types</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/type-is/HISTORY/#164-2015-07-01","title":"1.6.4 / 2015-07-01","text":"<ul> <li>deps: mime-types@~2.1.2<ul> <li>Add new mime types</li> </ul> </li> <li>perf: enable strict mode</li> <li>perf: remove argument reassignment</li> </ul>"},{"location":"ejemplos/servidor/node_modules/type-is/HISTORY/#163-2015-06-08","title":"1.6.3 / 2015-06-08","text":"<ul> <li>deps: mime-types@~2.1.1<ul> <li>Add new mime types</li> </ul> </li> <li>perf: reduce try block size</li> <li>perf: remove bitwise operations</li> </ul>"},{"location":"ejemplos/servidor/node_modules/type-is/HISTORY/#162-2015-05-10","title":"1.6.2 / 2015-05-10","text":"<ul> <li>deps: mime-types@~2.0.11<ul> <li>Add new mime types</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/type-is/HISTORY/#161-2015-03-13","title":"1.6.1 / 2015-03-13","text":"<ul> <li>deps: mime-types@~2.0.10<ul> <li>Add new mime types</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/type-is/HISTORY/#160-2015-02-12","title":"1.6.0 / 2015-02-12","text":"<ul> <li>fix false-positives in <code>hasBody</code> <code>Transfer-Encoding</code> check</li> <li>support wildcard for both type and subtype (<code>*/*</code>)</li> </ul>"},{"location":"ejemplos/servidor/node_modules/type-is/HISTORY/#157-2015-02-09","title":"1.5.7 / 2015-02-09","text":"<ul> <li>fix argument reassignment</li> <li>deps: mime-types@~2.0.9<ul> <li>Add new mime types</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/type-is/HISTORY/#156-2015-01-29","title":"1.5.6 / 2015-01-29","text":"<ul> <li>deps: mime-types@~2.0.8<ul> <li>Add new mime types</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/type-is/HISTORY/#155-2014-12-30","title":"1.5.5 / 2014-12-30","text":"<ul> <li>deps: mime-types@~2.0.7<ul> <li>Add new mime types</li> <li>Fix missing extensions</li> <li>Fix various invalid MIME type entries</li> <li>Remove example template MIME types</li> <li>deps: mime-db@~1.5.0</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/type-is/HISTORY/#154-2014-12-10","title":"1.5.4 / 2014-12-10","text":"<ul> <li>deps: mime-types@~2.0.4<ul> <li>Add new mime types</li> <li>deps: mime-db@~1.3.0</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/type-is/HISTORY/#153-2014-11-09","title":"1.5.3 / 2014-11-09","text":"<ul> <li>deps: mime-types@~2.0.3<ul> <li>Add new mime types</li> <li>deps: mime-db@~1.2.0</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/type-is/HISTORY/#152-2014-09-28","title":"1.5.2 / 2014-09-28","text":"<ul> <li>deps: mime-types@~2.0.2<ul> <li>Add new mime types</li> <li>deps: mime-db@~1.1.0</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/type-is/HISTORY/#151-2014-09-07","title":"1.5.1 / 2014-09-07","text":"<ul> <li>Support Node.js 0.6</li> <li>deps: media-typer@0.3.0</li> <li>deps: mime-types@~2.0.1<ul> <li>Support Node.js 0.6</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/type-is/HISTORY/#150-2014-09-05","title":"1.5.0 / 2014-09-05","text":"<ul> <li>fix <code>hasbody</code> to be true for <code>content-length: 0</code></li> </ul>"},{"location":"ejemplos/servidor/node_modules/type-is/HISTORY/#140-2014-09-02","title":"1.4.0 / 2014-09-02","text":"<ul> <li>update mime-types</li> </ul>"},{"location":"ejemplos/servidor/node_modules/type-is/HISTORY/#132-2014-06-24","title":"1.3.2 / 2014-06-24","text":"<ul> <li>use <code>~</code> range on mime-types</li> </ul>"},{"location":"ejemplos/servidor/node_modules/type-is/HISTORY/#131-2014-06-19","title":"1.3.1 / 2014-06-19","text":"<ul> <li>fix global variable leak</li> </ul>"},{"location":"ejemplos/servidor/node_modules/type-is/HISTORY/#130-2014-06-19","title":"1.3.0 / 2014-06-19","text":"<ul> <li> <p>improve type parsing</p> </li> <li> <p>invalid media type never matches</p> </li> <li>media type not case-sensitive</li> <li>extra LWS does not affect results</li> </ul>"},{"location":"ejemplos/servidor/node_modules/type-is/HISTORY/#122-2014-06-19","title":"1.2.2 / 2014-06-19","text":"<ul> <li>fix behavior on unknown type argument</li> </ul>"},{"location":"ejemplos/servidor/node_modules/type-is/HISTORY/#121-2014-06-03","title":"1.2.1 / 2014-06-03","text":"<ul> <li>switch dependency from <code>mime</code> to <code>mime-types@1.0.0</code></li> </ul>"},{"location":"ejemplos/servidor/node_modules/type-is/HISTORY/#120-2014-05-11","title":"1.2.0 / 2014-05-11","text":"<ul> <li> <p>support suffix matching:</p> </li> <li> <p><code>+json</code> matches <code>application/vnd+json</code></p> </li> <li><code>*/vnd+json</code> matches <code>application/vnd+json</code></li> <li><code>application/*+json</code> matches <code>application/vnd+json</code></li> </ul>"},{"location":"ejemplos/servidor/node_modules/type-is/HISTORY/#110-2014-04-12","title":"1.1.0 / 2014-04-12","text":"<ul> <li>add non-array values support</li> <li> <p>expose internal utilities:</p> </li> <li> <p><code>.is()</code></p> </li> <li><code>.hasBody()</code></li> <li><code>.normalize()</code></li> <li><code>.match()</code></li> </ul>"},{"location":"ejemplos/servidor/node_modules/type-is/HISTORY/#101-2014-03-30","title":"1.0.1 / 2014-03-30","text":"<ul> <li>add <code>multipart</code> as a shorthand</li> </ul>"},{"location":"ejemplos/servidor/node_modules/unpipe/","title":"unpipe","text":"<p>Unpipe a stream from all destinations.</p>"},{"location":"ejemplos/servidor/node_modules/unpipe/#installation","title":"Installation","text":"<pre><code>$ npm install unpipe\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/unpipe/#api","title":"API","text":"<pre><code>var unpipe = require('unpipe')\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/unpipe/#unpipestream","title":"unpipe(stream)","text":"<p>Unpipes all destinations from a given stream. With stream 2+, this is equivalent to <code>stream.unpipe()</code>. When used with streams 1 style streams (typically Node.js 0.8 and below), this module attempts to undo the actions done in <code>stream.pipe(dest)</code>.</p>"},{"location":"ejemplos/servidor/node_modules/unpipe/#license","title":"License","text":"<p>MIT</p>"},{"location":"ejemplos/servidor/node_modules/unpipe/HISTORY/","title":"1.0.0 / 2015-06-14","text":"<ul> <li>Initial release</li> </ul>"},{"location":"ejemplos/servidor/node_modules/util-deprecate/","title":"util-deprecate","text":""},{"location":"ejemplos/servidor/node_modules/util-deprecate/#the-nodejs-utildeprecate-function-with-browser-support","title":"The Node.js <code>util.deprecate()</code> function with browser support","text":"<p>In Node.js, this module simply re-exports the <code>util.deprecate()</code> function.</p> <p>In the web browser (i.e. via browserify), a browser-specific implementation of the <code>util.deprecate()</code> function is used.</p>"},{"location":"ejemplos/servidor/node_modules/util-deprecate/#api","title":"API","text":"<p>A <code>deprecate()</code> function is the only thing exposed by this module.</p> <pre><code>// setup:\nexports.foo = deprecate(foo, 'foo() is deprecated, use bar() instead');\n\n\n// users see:\nfoo();\n// foo() is deprecated, use bar() instead\nfoo();\nfoo();\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/util-deprecate/#license","title":"License","text":"<p>(The MIT License)</p> <p>Copyright (c) 2014 Nathan Rajlich nathan@tootallnate.net</p> <p>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</p> <p>The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</p> <p>THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p>"},{"location":"ejemplos/servidor/node_modules/util-deprecate/History/","title":"1.0.2 / 2015-10-07","text":"<ul> <li>use try/catch when checking <code>localStorage</code> (#3, @kumavis)</li> </ul>"},{"location":"ejemplos/servidor/node_modules/util-deprecate/History/#101-2014-11-25","title":"1.0.1 / 2014-11-25","text":"<ul> <li>browser: use <code>console.warn()</code> for deprecation calls</li> <li>browser: more jsdocs</li> </ul>"},{"location":"ejemplos/servidor/node_modules/util-deprecate/History/#100-2014-04-30","title":"1.0.0 / 2014-04-30","text":"<ul> <li>initial commit</li> </ul>"},{"location":"ejemplos/servidor/node_modules/utils-merge/","title":"utils-merge","text":"<p>Merges the properties from a source object into a destination object.</p>"},{"location":"ejemplos/servidor/node_modules/utils-merge/#install","title":"Install","text":"<pre><code>$ npm install utils-merge\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/utils-merge/#usage","title":"Usage","text":"<pre><code>var a = { foo: 'bar' }\n  , b = { bar: 'baz' };\n\nmerge(a, b);\n// =&gt; { foo: 'bar', bar: 'baz' }\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/utils-merge/#license","title":"License","text":"<p>The MIT License</p> <p>Copyright (c) 2013-2017 Jared Hanson &lt;http://jaredhanson.net/&gt;</p> <p> </p>"},{"location":"ejemplos/servidor/node_modules/vary/","title":"vary","text":"<p>Manipulate the HTTP Vary header</p>"},{"location":"ejemplos/servidor/node_modules/vary/#installation","title":"Installation","text":"<p>This is a Node.js module available through the npm registry. Installation is done using the <code>npm install</code> command: </p> <pre><code>$ npm install vary\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/vary/#api","title":"API","text":"<pre><code>var vary = require('vary')\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/vary/#varyres-field","title":"vary(res, field)","text":"<p>Adds the given header <code>field</code> to the <code>Vary</code> response header of <code>res</code>. This can be a string of a single field, a string of a valid <code>Vary</code> header, or an array of multiple fields.</p> <p>This will append the header if not already listed, otherwise leaves it listed in the current location.</p> <pre><code>// Append \"Origin\" to the Vary header of the response\nvary(res, 'Origin')\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/vary/#varyappendheader-field","title":"vary.append(header, field)","text":"<p>Adds the given header <code>field</code> to the <code>Vary</code> response header string <code>header</code>. This can be a string of a single field, a string of a valid <code>Vary</code> header, or an array of multiple fields.</p> <p>This will append the header if not already listed, otherwise leaves it listed in the current location. The new header string is returned.</p> <pre><code>// Get header string appending \"Origin\" to \"Accept, User-Agent\"\nvary.append('Accept, User-Agent', 'Origin')\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/vary/#examples","title":"Examples","text":""},{"location":"ejemplos/servidor/node_modules/vary/#updating-the-vary-header-when-content-is-based-on-it","title":"Updating the Vary header when content is based on it","text":"<pre><code>var http = require('http')\nvar vary = require('vary')\n\nhttp.createServer(function onRequest (req, res) {\n  // about to user-agent sniff\n  vary(res, 'User-Agent')\n\n  var ua = req.headers['user-agent'] || ''\n  var isMobile = /mobi|android|touch|mini/i.test(ua)\n\n  // serve site, depending on isMobile\n  res.setHeader('Content-Type', 'text/html')\n  res.end('You are (probably) ' + (isMobile ? '' : 'not ') + 'a mobile user')\n})\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/vary/#testing","title":"Testing","text":"<pre><code>$ npm test\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/vary/#license","title":"License","text":"<p>MIT</p>"},{"location":"ejemplos/servidor/node_modules/vary/HISTORY/","title":"1.1.2 / 2017-09-23","text":"<ul> <li>perf: improve header token parsing speed</li> </ul>"},{"location":"ejemplos/servidor/node_modules/vary/HISTORY/#111-2017-03-20","title":"1.1.1 / 2017-03-20","text":"<ul> <li>perf: hoist regular expression</li> </ul>"},{"location":"ejemplos/servidor/node_modules/vary/HISTORY/#110-2015-09-29","title":"1.1.0 / 2015-09-29","text":"<ul> <li>Only accept valid field names in the <code>field</code> argument<ul> <li>Ensures the resulting string is a valid HTTP header value</li> </ul> </li> </ul>"},{"location":"ejemplos/servidor/node_modules/vary/HISTORY/#101-2015-07-08","title":"1.0.1 / 2015-07-08","text":"<ul> <li>Fix setting empty header from empty <code>field</code></li> <li>perf: enable strict mode</li> <li>perf: remove argument reassignments</li> </ul>"},{"location":"ejemplos/servidor/node_modules/vary/HISTORY/#100-2014-08-10","title":"1.0.0 / 2014-08-10","text":"<ul> <li>Accept valid <code>Vary</code> header string as <code>field</code></li> <li>Add <code>vary.append</code> for low-level string manipulation</li> <li>Move to <code>jshttp</code> orgainzation</li> </ul>"},{"location":"ejemplos/servidor/node_modules/vary/HISTORY/#010-2014-06-05","title":"0.1.0 / 2014-06-05","text":"<ul> <li>Support array of fields to set</li> </ul>"},{"location":"ejemplos/servidor/node_modules/vary/HISTORY/#000-2014-06-04","title":"0.0.0 / 2014-06-04","text":"<ul> <li>Initial release</li> </ul>"},{"location":"ejemplos/servidor/node_modules/xtend/","title":"xtend","text":"<p>Extend like a boss</p> <p>xtend is a basic utility library which allows you to extend an object by appending all of the properties from each object in a list. When there are identical properties, the right-most property takes precedence.</p>"},{"location":"ejemplos/servidor/node_modules/xtend/#examples","title":"Examples","text":"<pre><code>var extend = require(\"xtend\")\n\n// extend returns a new object. Does not mutate arguments\nvar combination = extend({\n    a: \"a\",\n    b: \"c\"\n}, {\n    b: \"b\"\n})\n// { a: \"a\", b: \"b\" }\n</code></pre>"},{"location":"ejemplos/servidor/node_modules/xtend/#stability-status-locked","title":"Stability status: Locked","text":""},{"location":"ejemplos/servidor/node_modules/xtend/#mit-licensed","title":"MIT Licensed","text":""}]}